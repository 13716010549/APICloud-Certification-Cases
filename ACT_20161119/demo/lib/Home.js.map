{"version":3,"sources":["webpack:///Home.js","webpack:///webpack/bootstrap 63724a3a720d1a530095","webpack:///./src/Home.js","webpack:///./src/PostItem.js","webpack:///./~/moment/moment.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/moment/locale/zh-cn.js","webpack:///./src/CSSTransfer.js","webpack:///./src/Banner.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","fetchPost","_ref3","_ref3$page","page","undefined","_ref3$pageSize","pageSize","Promise","resolve","reject","api","ajax","url","headers","X-APICloud-AppId","appId","X-APICloud-AppKey","appKey","ret","err","map","item","toPersonDetail","author","window","open","toPostDetail","_ref4","slug","browser","require","titleBar","visible","bg","textColor","fetchBanner","refresh","all","then","values","banners","posts","_PostItem","_PostItem2","_Banner","_Banner2","_CSSTransfer","_CSSTransfer2","setRefreshHeaderInfo","loadingImg","bgColor","textDown","textUp","showTime","_ref","rootNode","hasChildNodes","removeChild","lastChild","refreshHeaderLoadDone","bannerNode","appendChild","i","length","newDiv","addEventListener","name","extra","threshold","oriPage","toast","msg","duration","location","showProgress","style","animationType","title","text","modal","_ref2","hideProgress","document","createElement","element","flexbox","display","flexDirection","body","Object","defineProperty","value","_moment","_moment2","render","list_image","comments_count","likes_count","views_count","first_shared_at","touchmove","nickname","avatar","info","container","height","alignItems","borderBottom","avatarElement","imageCache","policy","src","width","borderRadius","overflow","backgroundColor","nicknameElement","nicknameNode","createTextNode","color","fontSize","padding","timeElement","timeNode","unix","fromNow","titleElement","titleNode","marginTop","marginBottom","lineHeight","maxHeight","infoElement","infoNode","thumbElement","thumbInnerElement","marginLeft","marginRight","leftContainer","flex","topContainer","global","factory","this","hooks","hookCallback","apply","arguments","setHookCallback","callback","isArray","input","Array","prototype","toString","isObject","isObjectEmpty","k","isNumber","isDate","Date","arr","fn","res","push","hasOwnProp","a","b","hasOwnProperty","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","getParsingFlags","_pf","isValid","_isValid","flags","parsedParts","some$1","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","NaN","isUndefined","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","absFloor","number","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","isFinite","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","abs","diffs","warn","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","args","key","slice","join","Error","stack","deprecateSimple","deprecations","isFunction","Function","set","_config","_ordinalParseLenient","RegExp","_ordinalParse","source","mergeConfigs","parentConfig","childConfig","Locale","calendar","mom","now","output","_calendar","longDateFormat","_longDateFormat","formatUpper","toUpperCase","replace","invalidDate","_invalidDate","ordinal","_ordinal","relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","u","sort","makeGetSet","keepTime","set$1","get","stringGet","stringSet","prioritized","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","pow","max","substr","addFormatToken","token","padded","func","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","test","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","s","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInMonth","year","month","UTC","getUTCDate","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","months","indexOf$1","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","date","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","daysInYear","isLeapYear","getIsLeapYear","createDate","y","d","h","M","ms","getFullYear","setFullYear","createUTCDate","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","add","getSetISOWeek","parseWeekday","weekdaysParse","parseInt","parseIsoWeekday","localeWeekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","weekdaysMin","weekdaysShort","weekdays","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","normalizeLocale","chooseLocale","names","j","next","split","loadLocale","oldLocale","locales","globalLocale","_abbr","e","code","getSetGlobalLocale","data","getLocale","defineLocale","baseConfig","abbr","parentLocale","localeFamilies","forEach","x","updateLocale","listLocales","keys$1","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","exec","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","configFromString","aspNetJsonRegex","createFromInputFallback","defaults","currentDateArray","nowValue","_useUTC","getUTCMonth","getMonth","getDate","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","ISO_8601","parsedInput","skipped","stringLength","totalParsedInputLength","indexOf","_meridiem","meridiemFixWrap","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","Duration","years","quarters","quarter","weeks","days","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","offsetFromString","matcher","matches","chunk","parts","chunkOffset","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","localAdjust","matchShortOffset","_changeInProgress","addSubtract","createDuration","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","parseFloat","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","getCalendarFormat","myMoment","calendar$1","time","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","delta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","toDate","inspect","zone","prefix","datetime","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","toNow","newLocaleData","isoWeekday","toObject","toJSON","isValid$1","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","limit","withSuffix","toISOString$1","abs$1","Y","D","total","asSeconds","some","fun","t","keys","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultInvalidDate","defaultOrdinal","defaultOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","o","defaultLocaleMonths","defaultLocaleMonthsShort","parseTwoDigitYear","getSetYear","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","ordinalParse","meridiemParse","prototypeMin","prototypeMax","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","version","invalid","relativeTimeRounding","relativeTimeThreshold","webpackPolyfill","paths","children","moment","zhCn","ll","lll","llll","hm","startOfWeek","transfer","transferFlexbox","assign","cssText","boxConvert","column","row","column-reverse","row-reverse","flex-start","flex-end","space-between","space-around","-webkit-flex-direction","-webkit-box-orient","-webkit-box-pack","-webkit-box-direction","-webkit-align-items","-webkit-box-align","justifyContent","-webkit-justify-content","-webkit-flex","-webkit-box-flex","winWidth","innerWidth","documentElement","clientWidth","getElementsByTagName","app_image","UIScrollPicture","rect","interval","fixedOn","frameName","loop","fixed","styles","indicator","align","activeColor","eventType"],"mappings":"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","file":"Home.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!*********************!*\\\n  !*** ./src/Home.js ***!\n  \\*********************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _PostItem = __webpack_require__(/*! ./PostItem.js */ 1);\n\t\n\tvar _PostItem2 = _interopRequireDefault(_PostItem);\n\t\n\tvar _Banner = __webpack_require__(/*! ./Banner.js */ 6);\n\t\n\tvar _Banner2 = _interopRequireDefault(_Banner);\n\t\n\tvar _CSSTransfer = __webpack_require__(/*! ./CSSTransfer */ 5);\n\t\n\tvar _CSSTransfer2 = _interopRequireDefault(_CSSTransfer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar appId = \"A6924735141113\";\n\tvar appKey = \"2eb2e629e08199e07d59b7a690fbedd0f1a889f5.1479311556274\";\n\t\n\tvar page = 0;\n\t\n\tapi.setRefreshHeaderInfo({\n\t  visible: true,\n\t  loadingImg: 'widget://image/refresh.png',\n\t  bgColor: '#fff',\n\t  textColor: '#9a9a9a',\n\t  textDown: '下拉刷新...',\n\t  textUp: '松开刷新...',\n\t  showTime: true\n\t}, function (ret, err) {\n\t  page = 0;\n\t\n\t  refresh().then(function (_ref) {\n\t    var banners = _ref.banners,\n\t        posts = _ref.posts;\n\t\n\t    while (rootNode.hasChildNodes()) {\n\t      rootNode.removeChild(rootNode.lastChild);\n\t    }\n\t    api.refreshHeaderLoadDone();\n\t\n\t    page++;\n\t\n\t    var bannerNode = (0, _Banner2.default)({ banners: banners });\n\t    rootNode.appendChild(bannerNode);\n\t\n\t    for (var i = 0; i < posts.length; i++) {\n\t      var newDiv = (0, _PostItem2.default)(posts[i]);\n\t      rootNode.appendChild(newDiv);\n\t    }\n\t  });\n\t});\n\t\n\tapi.addEventListener({\n\t  name: 'scrolltobottom',\n\t  extra: {\n\t    threshold: 0 //设置距离底部多少距离时触发，默认值为0，数字类型\n\t  }\n\t}, function (ret, err) {\n\t  // 加载下一页的数据，然后向现有页面追加数据。\n\t  var oriPage = page;\n\t  fetchPost({ page: page }).then(function (ret) {\n\t    if (oriPage !== page) {\n\t      return;\n\t    }\n\t\n\t    page++;\n\t    if (ret.length === 0) {\n\t      api.toast({\n\t        msg: '没有更多数据了...',\n\t        duration: 2000,\n\t        location: 'bottom'\n\t      });\n\t    } else {\n\t      for (var i = 0; i < ret.length; i++) {\n\t        var newDiv = (0, _PostItem2.default)(ret[i]);\n\t        rootNode.appendChild(newDiv);\n\t      }\n\t    }\n\t  });\n\t});\n\t\n\t/* 首次刷新. */\n\tapi.showProgress({\n\t  style: 'default',\n\t  animationType: 'fade',\n\t  title: '努力加载中...',\n\t  text: '先喝杯茶...',\n\t  modal: false\n\t});\n\t\n\trefresh().then(function (_ref2) {\n\t  var banners = _ref2.banners,\n\t      posts = _ref2.posts;\n\t\n\t  while (rootNode.hasChildNodes()) {\n\t    rootNode.removeChild(rootNode.lastChild);\n\t  }\n\t\n\t  api.hideProgress();\n\t  page++;\n\t\n\t  var bannerNode = (0, _Banner2.default)({ banners: banners });\n\t  rootNode.appendChild(bannerNode);\n\t\n\t  for (var i = 0; i < posts.length; i++) {\n\t    var newDiv = (0, _PostItem2.default)(posts[i]);\n\t    rootNode.appendChild(newDiv);\n\t  }\n\t});\n\t\n\tvar rootNode = document.createElement(\"div\");\n\t\n\t(0, _CSSTransfer2.default)({ element: rootNode, flexbox: {\n\t    display: \"flex\",\n\t    flexDirection: \"column\"\n\t  } });\n\t\n\tdocument.body.appendChild(rootNode);\n\t\n\tfunction fetchPost(_ref3) {\n\t  var _ref3$page = _ref3.page,\n\t      page = _ref3$page === undefined ? 0 : _ref3$page,\n\t      _ref3$pageSize = _ref3.pageSize,\n\t      pageSize = _ref3$pageSize === undefined ? 5 : _ref3$pageSize;\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    api.ajax({\n\t      \"url\": \"https://d.apicloud.com//mcm/api/post?filter={\\\"where\\\":{},\\\"skip\\\":\" + page * pageSize + \",\\\"limit\\\":\" + pageSize + \",\\\"include\\\":\\\"authorPointer\\\"}\",\n\t      \"headers\": {\n\t        \"X-APICloud-AppId\": appId,\n\t        \"X-APICloud-AppKey\": appKey\n\t      }\n\t    }, function (ret, err) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        ret = ret.map(function (item) {\n\t          item.toPersonDetail = function (author) {\n\t            window.open(\"./container.html\", \"Person\", { page: \"Person\", author: author });\n\t          };\n\t\n\t          item.toPostDetail = function (_ref4) {\n\t            var slug = _ref4.slug;\n\t\n\t            var url = \"http://www.jianshu.com/p/\" + slug;\n\t\n\t            var browser = api.require('webBrowser');\n\t            browser.open({\n\t              url: url,\n\t              titleBar: {\n\t                visible: true,\n\t                bg: \"#fff\",\n\t                textColor: \"#9a9a9a\"\n\t              }\n\t            });\n\t          };\n\t\n\t          return item;\n\t        });\n\t\n\t        resolve(ret || []);\n\t      }\n\t    });\n\t  });\n\t}\n\t\n\tfunction fetchBanner() {\n\t  return new Promise(function (resolve, reject) {\n\t    api.ajax({\n\t      \"url\": \"https://d.apicloud.com//mcm/api/banner?filter={\\\"where\\\":{},\\\"skip\\\":0,\\\"limit\\\":20}\",\n\t      \"headers\": {\n\t        \"X-APICloud-AppId\": appId,\n\t        \"X-APICloud-AppKey\": appKey\n\t      }\n\t    }, function (ret, err) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(ret);\n\t      }\n\t    });\n\t  });\n\t}\n\t\n\tfunction refresh() {\n\t  return new Promise(function (resolve, reject) {\n\t    Promise.all([fetchBanner(), fetchPost({ page: 0 })]).then(function (values) {\n\t      resolve({ banners: values[0], posts: values[1] });\n\t    });\n\t  });\n\t}\n\n/***/ },\n/* 1 */\n/*!*************************!*\\\n  !*** ./src/PostItem.js ***!\n  \\*************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _moment = __webpack_require__(/*! moment */ 2);\n\t\n\tvar _moment2 = _interopRequireDefault(_moment);\n\t\n\t__webpack_require__(/*! moment/locale/zh-cn */ 4);\n\t\n\tvar _CSSTransfer = __webpack_require__(/*! ./CSSTransfer */ 5);\n\t\n\tvar _CSSTransfer2 = _interopRequireDefault(_CSSTransfer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar render = function render(_ref) {\n\t  var title = _ref.title,\n\t      list_image = _ref.list_image,\n\t      author = _ref.author,\n\t      comments_count = _ref.comments_count,\n\t      likes_count = _ref.likes_count,\n\t      views_count = _ref.views_count,\n\t      first_shared_at = _ref.first_shared_at,\n\t      slug = _ref.slug,\n\t      toPersonDetail = _ref.toPersonDetail,\n\t      toPostDetail = _ref.toPostDetail;\n\t\n\t  var touchmove = false;\n\t\n\t  var nickname = author.nickname,\n\t      avatar = author.avatar;\n\t\n\t  var info = views_count + ' \\u6B21\\u9605 \\xB7 ' + comments_count + ' \\u8BC4\\u8BBA \\xB7 ' + likes_count + ' \\u559C\\u6B22';\n\t\n\t  var container = document.createElement(\"div\");\n\t\n\t  (0, _CSSTransfer2.default)({ element: container, flexbox: {\n\t      display: \"flex\",\n\t      flexDirection: \"row\",\n\t      height: \"135px\",\n\t      alignItems: \"center\",\n\t      borderBottom: \"1px solid #dedede\"\n\t    } });\n\t\n\t  var avatarElement = document.createElement(\"img\");\n\t\n\t  api.imageCache({\n\t    url: avatar,\n\t    policy: \"cache_only\"\n\t  }, function (ret, err) {\n\t    avatarElement.src = ret.url || avatar;\n\t  });\n\t\n\t  (0, _CSSTransfer2.default)({ element: avatarElement, flexbox: {\n\t      display: \"flex\",\n\t      flexDirection: \"column\",\n\t      height: \"20px\",\n\t      width: \"20px\",\n\t      borderRadius: \"50%\",\n\t      overflow: \"hidden\",\n\t      backgroundColor: \"#efefef\"\n\t    } });\n\t\n\t  var nicknameElement = document.createElement(\"div\");\n\t  var nicknameNode = document.createTextNode(nickname);\n\t  nicknameElement.appendChild(nicknameNode);\n\t\n\t  (0, _CSSTransfer2.default)({ element: nicknameElement, flexbox: {\n\t      display: \"flex\",\n\t      flexDirection: \"column\",\n\t      color: \"#3a9135\",\n\t      fontSize: \"13px\",\n\t      padding: \"8px\"\n\t    } });\n\t\n\t  var timeElement = document.createElement(\"div\");\n\t  var timeNode = document.createTextNode(_moment2.default.unix(first_shared_at).fromNow());\n\t  timeElement.appendChild(timeNode);\n\t\n\t  (0, _CSSTransfer2.default)({ element: timeElement, flexbox: {\n\t      display: \"flex\",\n\t      flexDirection: \"column\",\n\t      color: \"#c9c9c9\",\n\t      fontSize: \"11px\"\n\t    } });\n\t\n\t  var titleElement = document.createElement(\"div\");\n\t  var titleNode = document.createTextNode(title);\n\t  titleElement.appendChild(titleNode);\n\t\n\t  (0, _CSSTransfer2.default)({ element: titleElement, flexbox: {\n\t      display: \"flex\",\n\t      flexDirection: \"column\",\n\t      fontSize: \"16px\",\n\t      color: \"#242424\",\n\t      marginTop: \"10px\",\n\t      marginBottom: \"12px\",\n\t      lineHeight: \"20px\",\n\t      maxHeight: 20 * 2 + 'px',\n\t      overflow: \"hidden\"\n\t    } });\n\t\n\t  var infoElement = document.createElement(\"div\");\n\t  var infoNode = document.createTextNode(info);\n\t  infoElement.appendChild(infoNode);\n\t\n\t  (0, _CSSTransfer2.default)({ element: infoElement, flexbox: {\n\t      display: \"flex\",\n\t      flexDirection: \"column\",\n\t      fontSize: \"12px\",\n\t      color: \"#9e9e9e\"\n\t    } });\n\t\n\t  var thumbElement = document.createElement(\"div\");\n\t  var thumbInnerElement = document.createElement(\"img\");\n\t  thumbElement.appendChild(thumbInnerElement);\n\t\n\t  (0, _CSSTransfer2.default)({ element: thumbElement, flexbox: {\n\t      display: \"flex\",\n\t      flexDirection: \"column\",\n\t      marginLeft: \"20px\",\n\t      marginRight: \"20px\",\n\t      backgroundColor: \"#efefef\",\n\t      alignItems: \"stretch\"\n\t    } });\n\t\n\t  api.imageCache({\n\t    url: list_image,\n\t    policy: \"cache_only\"\n\t  }, function (ret, err) {\n\t    thumbInnerElement.src = ret.url || list_image;\n\t  });\n\t\n\t  (0, _CSSTransfer2.default)({ element: thumbInnerElement, flexbox: {\n\t      display: \"flex\",\n\t      flexDirection: \"column\",\n\t      width: \"80px\",\n\t      height: \"80px\"\n\t    } });\n\t\n\t  var leftContainer = document.createElement(\"div\");\n\t\n\t  (0, _CSSTransfer2.default)({ element: leftContainer, flexbox: {\n\t      display: \"flex\",\n\t      flexDirection: \"column\",\n\t      marginLeft: \"15px\",\n\t      flex: 1\n\t    } });\n\t\n\t  var topContainer = document.createElement(\"div\");\n\t  topContainer.appendChild(avatarElement);\n\t  topContainer.appendChild(nicknameElement);\n\t  topContainer.appendChild(timeElement);\n\t\n\t  (0, _CSSTransfer2.default)({ element: topContainer, flexbox: {\n\t      display: \"flex\",\n\t      flexDirection: \"row\",\n\t      alignItems: \"center\"\n\t    } });\n\t\n\t  leftContainer.appendChild(topContainer);\n\t  leftContainer.appendChild(titleElement);\n\t  leftContainer.appendChild(infoElement);\n\t\n\t  container.appendChild(leftContainer);\n\t  container.appendChild(thumbElement);\n\t\n\t  avatarElement.addEventListener(\"touchend\", function () {\n\t    if (!touchmove) {\n\t      toPersonDetail(author);\n\t    }\n\t  }, false);\n\t  nicknameElement.addEventListener(\"touchend\", function () {\n\t    if (!touchmove) {\n\t      toPersonDetail(author);\n\t    }\n\t  }, false);\n\t  titleElement.addEventListener(\"touchend\", function () {\n\t    if (!touchmove) {\n\t      toPostDetail({ slug: slug });\n\t    }\n\t  }, false);\n\t\n\t  container.addEventListener(\"touchstart\", function () {\n\t    touchmove = false;\n\t  }, false);\n\t\n\t  container.addEventListener(\"touchmove\", function () {\n\t    touchmove = true;\n\t  }, false);\n\t\n\t  return container;\n\t};\n\t\n\texports.default = render;\n\n/***/ },\n/* 2 */\n/*!****************************!*\\\n  !*** ./~/moment/moment.js ***!\n  \\****************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {//! moment.js\n\t//! version : 2.16.0\n\t//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n\t//! license : MIT\n\t//! momentjs.com\n\t\n\t;(function (global, factory) {\n\t     true ? module.exports = factory() :\n\t    typeof define === 'function' && define.amd ? define(factory) :\n\t    global.moment = factory()\n\t}(this, (function () { 'use strict';\n\t\n\tvar hookCallback;\n\t\n\tfunction hooks () {\n\t    return hookCallback.apply(null, arguments);\n\t}\n\t\n\t// This is done to register the method called with moment()\n\t// without creating circular dependencies.\n\tfunction setHookCallback (callback) {\n\t    hookCallback = callback;\n\t}\n\t\n\tfunction isArray(input) {\n\t    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n\t}\n\t\n\tfunction isObject(input) {\n\t    // IE8 will treat undefined and null as object if it wasn't for\n\t    // input != null\n\t    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n\t}\n\t\n\tfunction isObjectEmpty(obj) {\n\t    var k;\n\t    for (k in obj) {\n\t        // even if its not own property I'd still call it non-empty\n\t        return false;\n\t    }\n\t    return true;\n\t}\n\t\n\tfunction isNumber(input) {\n\t    return typeof value === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n\t}\n\t\n\tfunction isDate(input) {\n\t    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n\t}\n\t\n\tfunction map(arr, fn) {\n\t    var res = [], i;\n\t    for (i = 0; i < arr.length; ++i) {\n\t        res.push(fn(arr[i], i));\n\t    }\n\t    return res;\n\t}\n\t\n\tfunction hasOwnProp(a, b) {\n\t    return Object.prototype.hasOwnProperty.call(a, b);\n\t}\n\t\n\tfunction extend(a, b) {\n\t    for (var i in b) {\n\t        if (hasOwnProp(b, i)) {\n\t            a[i] = b[i];\n\t        }\n\t    }\n\t\n\t    if (hasOwnProp(b, 'toString')) {\n\t        a.toString = b.toString;\n\t    }\n\t\n\t    if (hasOwnProp(b, 'valueOf')) {\n\t        a.valueOf = b.valueOf;\n\t    }\n\t\n\t    return a;\n\t}\n\t\n\tfunction createUTC (input, format, locale, strict) {\n\t    return createLocalOrUTC(input, format, locale, strict, true).utc();\n\t}\n\t\n\tfunction defaultParsingFlags() {\n\t    // We need to deep clone this object.\n\t    return {\n\t        empty           : false,\n\t        unusedTokens    : [],\n\t        unusedInput     : [],\n\t        overflow        : -2,\n\t        charsLeftOver   : 0,\n\t        nullInput       : false,\n\t        invalidMonth    : null,\n\t        invalidFormat   : false,\n\t        userInvalidated : false,\n\t        iso             : false,\n\t        parsedDateParts : [],\n\t        meridiem        : null\n\t    };\n\t}\n\t\n\tfunction getParsingFlags(m) {\n\t    if (m._pf == null) {\n\t        m._pf = defaultParsingFlags();\n\t    }\n\t    return m._pf;\n\t}\n\t\n\tvar some;\n\tif (Array.prototype.some) {\n\t    some = Array.prototype.some;\n\t} else {\n\t    some = function (fun) {\n\t        var t = Object(this);\n\t        var len = t.length >>> 0;\n\t\n\t        for (var i = 0; i < len; i++) {\n\t            if (i in t && fun.call(this, t[i], i, t)) {\n\t                return true;\n\t            }\n\t        }\n\t\n\t        return false;\n\t    };\n\t}\n\t\n\tvar some$1 = some;\n\t\n\tfunction isValid(m) {\n\t    if (m._isValid == null) {\n\t        var flags = getParsingFlags(m);\n\t        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n\t            return i != null;\n\t        });\n\t        var isNowValid = !isNaN(m._d.getTime()) &&\n\t            flags.overflow < 0 &&\n\t            !flags.empty &&\n\t            !flags.invalidMonth &&\n\t            !flags.invalidWeekday &&\n\t            !flags.nullInput &&\n\t            !flags.invalidFormat &&\n\t            !flags.userInvalidated &&\n\t            (!flags.meridiem || (flags.meridiem && parsedParts));\n\t\n\t        if (m._strict) {\n\t            isNowValid = isNowValid &&\n\t                flags.charsLeftOver === 0 &&\n\t                flags.unusedTokens.length === 0 &&\n\t                flags.bigHour === undefined;\n\t        }\n\t\n\t        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n\t            m._isValid = isNowValid;\n\t        }\n\t        else {\n\t            return isNowValid;\n\t        }\n\t    }\n\t    return m._isValid;\n\t}\n\t\n\tfunction createInvalid (flags) {\n\t    var m = createUTC(NaN);\n\t    if (flags != null) {\n\t        extend(getParsingFlags(m), flags);\n\t    }\n\t    else {\n\t        getParsingFlags(m).userInvalidated = true;\n\t    }\n\t\n\t    return m;\n\t}\n\t\n\tfunction isUndefined(input) {\n\t    return input === void 0;\n\t}\n\t\n\t// Plugins that add properties should also add the key here (null value),\n\t// so we can properly clone ourselves.\n\tvar momentProperties = hooks.momentProperties = [];\n\t\n\tfunction copyConfig(to, from) {\n\t    var i, prop, val;\n\t\n\t    if (!isUndefined(from._isAMomentObject)) {\n\t        to._isAMomentObject = from._isAMomentObject;\n\t    }\n\t    if (!isUndefined(from._i)) {\n\t        to._i = from._i;\n\t    }\n\t    if (!isUndefined(from._f)) {\n\t        to._f = from._f;\n\t    }\n\t    if (!isUndefined(from._l)) {\n\t        to._l = from._l;\n\t    }\n\t    if (!isUndefined(from._strict)) {\n\t        to._strict = from._strict;\n\t    }\n\t    if (!isUndefined(from._tzm)) {\n\t        to._tzm = from._tzm;\n\t    }\n\t    if (!isUndefined(from._isUTC)) {\n\t        to._isUTC = from._isUTC;\n\t    }\n\t    if (!isUndefined(from._offset)) {\n\t        to._offset = from._offset;\n\t    }\n\t    if (!isUndefined(from._pf)) {\n\t        to._pf = getParsingFlags(from);\n\t    }\n\t    if (!isUndefined(from._locale)) {\n\t        to._locale = from._locale;\n\t    }\n\t\n\t    if (momentProperties.length > 0) {\n\t        for (i in momentProperties) {\n\t            prop = momentProperties[i];\n\t            val = from[prop];\n\t            if (!isUndefined(val)) {\n\t                to[prop] = val;\n\t            }\n\t        }\n\t    }\n\t\n\t    return to;\n\t}\n\t\n\tvar updateInProgress = false;\n\t\n\t// Moment prototype object\n\tfunction Moment(config) {\n\t    copyConfig(this, config);\n\t    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\t    // Prevent infinite loop in case updateOffset creates new moment\n\t    // objects.\n\t    if (updateInProgress === false) {\n\t        updateInProgress = true;\n\t        hooks.updateOffset(this);\n\t        updateInProgress = false;\n\t    }\n\t}\n\t\n\tfunction isMoment (obj) {\n\t    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n\t}\n\t\n\tfunction absFloor (number) {\n\t    if (number < 0) {\n\t        // -0 -> 0\n\t        return Math.ceil(number) || 0;\n\t    } else {\n\t        return Math.floor(number);\n\t    }\n\t}\n\t\n\tfunction toInt(argumentForCoercion) {\n\t    var coercedNumber = +argumentForCoercion,\n\t        value = 0;\n\t\n\t    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n\t        value = absFloor(coercedNumber);\n\t    }\n\t\n\t    return value;\n\t}\n\t\n\t// compare two arrays, return the number of differences\n\tfunction compareArrays(array1, array2, dontConvert) {\n\t    var len = Math.min(array1.length, array2.length),\n\t        lengthDiff = Math.abs(array1.length - array2.length),\n\t        diffs = 0,\n\t        i;\n\t    for (i = 0; i < len; i++) {\n\t        if ((dontConvert && array1[i] !== array2[i]) ||\n\t            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n\t            diffs++;\n\t        }\n\t    }\n\t    return diffs + lengthDiff;\n\t}\n\t\n\tfunction warn(msg) {\n\t    if (hooks.suppressDeprecationWarnings === false &&\n\t            (typeof console !==  'undefined') && console.warn) {\n\t        console.warn('Deprecation warning: ' + msg);\n\t    }\n\t}\n\t\n\tfunction deprecate(msg, fn) {\n\t    var firstTime = true;\n\t\n\t    return extend(function () {\n\t        if (hooks.deprecationHandler != null) {\n\t            hooks.deprecationHandler(null, msg);\n\t        }\n\t        if (firstTime) {\n\t            var args = [];\n\t            var arg;\n\t            for (var i = 0; i < arguments.length; i++) {\n\t                arg = '';\n\t                if (typeof arguments[i] === 'object') {\n\t                    arg += '\\n[' + i + '] ';\n\t                    for (var key in arguments[0]) {\n\t                        arg += key + ': ' + arguments[0][key] + ', ';\n\t                    }\n\t                    arg = arg.slice(0, -2); // Remove trailing comma and space\n\t                } else {\n\t                    arg = arguments[i];\n\t                }\n\t                args.push(arg);\n\t            }\n\t            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n\t            firstTime = false;\n\t        }\n\t        return fn.apply(this, arguments);\n\t    }, fn);\n\t}\n\t\n\tvar deprecations = {};\n\t\n\tfunction deprecateSimple(name, msg) {\n\t    if (hooks.deprecationHandler != null) {\n\t        hooks.deprecationHandler(name, msg);\n\t    }\n\t    if (!deprecations[name]) {\n\t        warn(msg);\n\t        deprecations[name] = true;\n\t    }\n\t}\n\t\n\thooks.suppressDeprecationWarnings = false;\n\thooks.deprecationHandler = null;\n\t\n\tfunction isFunction(input) {\n\t    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n\t}\n\t\n\tfunction set (config) {\n\t    var prop, i;\n\t    for (i in config) {\n\t        prop = config[i];\n\t        if (isFunction(prop)) {\n\t            this[i] = prop;\n\t        } else {\n\t            this['_' + i] = prop;\n\t        }\n\t    }\n\t    this._config = config;\n\t    // Lenient ordinal parsing accepts just a number in addition to\n\t    // number + (possibly) stuff coming from _ordinalParseLenient.\n\t    this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);\n\t}\n\t\n\tfunction mergeConfigs(parentConfig, childConfig) {\n\t    var res = extend({}, parentConfig), prop;\n\t    for (prop in childConfig) {\n\t        if (hasOwnProp(childConfig, prop)) {\n\t            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n\t                res[prop] = {};\n\t                extend(res[prop], parentConfig[prop]);\n\t                extend(res[prop], childConfig[prop]);\n\t            } else if (childConfig[prop] != null) {\n\t                res[prop] = childConfig[prop];\n\t            } else {\n\t                delete res[prop];\n\t            }\n\t        }\n\t    }\n\t    for (prop in parentConfig) {\n\t        if (hasOwnProp(parentConfig, prop) &&\n\t                !hasOwnProp(childConfig, prop) &&\n\t                isObject(parentConfig[prop])) {\n\t            // make sure changes to properties don't modify parent config\n\t            res[prop] = extend({}, res[prop]);\n\t        }\n\t    }\n\t    return res;\n\t}\n\t\n\tfunction Locale(config) {\n\t    if (config != null) {\n\t        this.set(config);\n\t    }\n\t}\n\t\n\tvar keys;\n\t\n\tif (Object.keys) {\n\t    keys = Object.keys;\n\t} else {\n\t    keys = function (obj) {\n\t        var i, res = [];\n\t        for (i in obj) {\n\t            if (hasOwnProp(obj, i)) {\n\t                res.push(i);\n\t            }\n\t        }\n\t        return res;\n\t    };\n\t}\n\t\n\tvar keys$1 = keys;\n\t\n\tvar defaultCalendar = {\n\t    sameDay : '[Today at] LT',\n\t    nextDay : '[Tomorrow at] LT',\n\t    nextWeek : 'dddd [at] LT',\n\t    lastDay : '[Yesterday at] LT',\n\t    lastWeek : '[Last] dddd [at] LT',\n\t    sameElse : 'L'\n\t};\n\t\n\tfunction calendar (key, mom, now) {\n\t    var output = this._calendar[key] || this._calendar['sameElse'];\n\t    return isFunction(output) ? output.call(mom, now) : output;\n\t}\n\t\n\tvar defaultLongDateFormat = {\n\t    LTS  : 'h:mm:ss A',\n\t    LT   : 'h:mm A',\n\t    L    : 'MM/DD/YYYY',\n\t    LL   : 'MMMM D, YYYY',\n\t    LLL  : 'MMMM D, YYYY h:mm A',\n\t    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n\t};\n\t\n\tfunction longDateFormat (key) {\n\t    var format = this._longDateFormat[key],\n\t        formatUpper = this._longDateFormat[key.toUpperCase()];\n\t\n\t    if (format || !formatUpper) {\n\t        return format;\n\t    }\n\t\n\t    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n\t        return val.slice(1);\n\t    });\n\t\n\t    return this._longDateFormat[key];\n\t}\n\t\n\tvar defaultInvalidDate = 'Invalid date';\n\t\n\tfunction invalidDate () {\n\t    return this._invalidDate;\n\t}\n\t\n\tvar defaultOrdinal = '%d';\n\tvar defaultOrdinalParse = /\\d{1,2}/;\n\t\n\tfunction ordinal (number) {\n\t    return this._ordinal.replace('%d', number);\n\t}\n\t\n\tvar defaultRelativeTime = {\n\t    future : 'in %s',\n\t    past   : '%s ago',\n\t    s  : 'a few seconds',\n\t    m  : 'a minute',\n\t    mm : '%d minutes',\n\t    h  : 'an hour',\n\t    hh : '%d hours',\n\t    d  : 'a day',\n\t    dd : '%d days',\n\t    M  : 'a month',\n\t    MM : '%d months',\n\t    y  : 'a year',\n\t    yy : '%d years'\n\t};\n\t\n\tfunction relativeTime (number, withoutSuffix, string, isFuture) {\n\t    var output = this._relativeTime[string];\n\t    return (isFunction(output)) ?\n\t        output(number, withoutSuffix, string, isFuture) :\n\t        output.replace(/%d/i, number);\n\t}\n\t\n\tfunction pastFuture (diff, output) {\n\t    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n\t    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n\t}\n\t\n\tvar aliases = {};\n\t\n\tfunction addUnitAlias (unit, shorthand) {\n\t    var lowerCase = unit.toLowerCase();\n\t    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n\t}\n\t\n\tfunction normalizeUnits(units) {\n\t    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n\t}\n\t\n\tfunction normalizeObjectUnits(inputObject) {\n\t    var normalizedInput = {},\n\t        normalizedProp,\n\t        prop;\n\t\n\t    for (prop in inputObject) {\n\t        if (hasOwnProp(inputObject, prop)) {\n\t            normalizedProp = normalizeUnits(prop);\n\t            if (normalizedProp) {\n\t                normalizedInput[normalizedProp] = inputObject[prop];\n\t            }\n\t        }\n\t    }\n\t\n\t    return normalizedInput;\n\t}\n\t\n\tvar priorities = {};\n\t\n\tfunction addUnitPriority(unit, priority) {\n\t    priorities[unit] = priority;\n\t}\n\t\n\tfunction getPrioritizedUnits(unitsObj) {\n\t    var units = [];\n\t    for (var u in unitsObj) {\n\t        units.push({unit: u, priority: priorities[u]});\n\t    }\n\t    units.sort(function (a, b) {\n\t        return a.priority - b.priority;\n\t    });\n\t    return units;\n\t}\n\t\n\tfunction makeGetSet (unit, keepTime) {\n\t    return function (value) {\n\t        if (value != null) {\n\t            set$1(this, unit, value);\n\t            hooks.updateOffset(this, keepTime);\n\t            return this;\n\t        } else {\n\t            return get(this, unit);\n\t        }\n\t    };\n\t}\n\t\n\tfunction get (mom, unit) {\n\t    return mom.isValid() ?\n\t        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n\t}\n\t\n\tfunction set$1 (mom, unit, value) {\n\t    if (mom.isValid()) {\n\t        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction stringGet (units) {\n\t    units = normalizeUnits(units);\n\t    if (isFunction(this[units])) {\n\t        return this[units]();\n\t    }\n\t    return this;\n\t}\n\t\n\t\n\tfunction stringSet (units, value) {\n\t    if (typeof units === 'object') {\n\t        units = normalizeObjectUnits(units);\n\t        var prioritized = getPrioritizedUnits(units);\n\t        for (var i = 0; i < prioritized.length; i++) {\n\t            this[prioritized[i].unit](units[prioritized[i].unit]);\n\t        }\n\t    } else {\n\t        units = normalizeUnits(units);\n\t        if (isFunction(this[units])) {\n\t            return this[units](value);\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction zeroFill(number, targetLength, forceSign) {\n\t    var absNumber = '' + Math.abs(number),\n\t        zerosToFill = targetLength - absNumber.length,\n\t        sign = number >= 0;\n\t    return (sign ? (forceSign ? '+' : '') : '-') +\n\t        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n\t}\n\t\n\tvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\t\n\tvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\t\n\tvar formatFunctions = {};\n\t\n\tvar formatTokenFunctions = {};\n\t\n\t// token:    'M'\n\t// padded:   ['MM', 2]\n\t// ordinal:  'Mo'\n\t// callback: function () { this.month() + 1 }\n\tfunction addFormatToken (token, padded, ordinal, callback) {\n\t    var func = callback;\n\t    if (typeof callback === 'string') {\n\t        func = function () {\n\t            return this[callback]();\n\t        };\n\t    }\n\t    if (token) {\n\t        formatTokenFunctions[token] = func;\n\t    }\n\t    if (padded) {\n\t        formatTokenFunctions[padded[0]] = function () {\n\t            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n\t        };\n\t    }\n\t    if (ordinal) {\n\t        formatTokenFunctions[ordinal] = function () {\n\t            return this.localeData().ordinal(func.apply(this, arguments), token);\n\t        };\n\t    }\n\t}\n\t\n\tfunction removeFormattingTokens(input) {\n\t    if (input.match(/\\[[\\s\\S]/)) {\n\t        return input.replace(/^\\[|\\]$/g, '');\n\t    }\n\t    return input.replace(/\\\\/g, '');\n\t}\n\t\n\tfunction makeFormatFunction(format) {\n\t    var array = format.match(formattingTokens), i, length;\n\t\n\t    for (i = 0, length = array.length; i < length; i++) {\n\t        if (formatTokenFunctions[array[i]]) {\n\t            array[i] = formatTokenFunctions[array[i]];\n\t        } else {\n\t            array[i] = removeFormattingTokens(array[i]);\n\t        }\n\t    }\n\t\n\t    return function (mom) {\n\t        var output = '', i;\n\t        for (i = 0; i < length; i++) {\n\t            output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n\t        }\n\t        return output;\n\t    };\n\t}\n\t\n\t// format date using native date object\n\tfunction formatMoment(m, format) {\n\t    if (!m.isValid()) {\n\t        return m.localeData().invalidDate();\n\t    }\n\t\n\t    format = expandFormat(format, m.localeData());\n\t    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\t\n\t    return formatFunctions[format](m);\n\t}\n\t\n\tfunction expandFormat(format, locale) {\n\t    var i = 5;\n\t\n\t    function replaceLongDateFormatTokens(input) {\n\t        return locale.longDateFormat(input) || input;\n\t    }\n\t\n\t    localFormattingTokens.lastIndex = 0;\n\t    while (i >= 0 && localFormattingTokens.test(format)) {\n\t        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n\t        localFormattingTokens.lastIndex = 0;\n\t        i -= 1;\n\t    }\n\t\n\t    return format;\n\t}\n\t\n\tvar match1         = /\\d/;            //       0 - 9\n\tvar match2         = /\\d\\d/;          //      00 - 99\n\tvar match3         = /\\d{3}/;         //     000 - 999\n\tvar match4         = /\\d{4}/;         //    0000 - 9999\n\tvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n\tvar match1to2      = /\\d\\d?/;         //       0 - 99\n\tvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n\tvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\tvar match1to3      = /\\d{1,3}/;       //       0 - 999\n\tvar match1to4      = /\\d{1,4}/;       //       0 - 9999\n\tvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\t\n\tvar matchUnsigned  = /\\d+/;           //       0 - inf\n\tvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\t\n\tvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\tvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\t\n\tvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\t\n\t// any word (or two) characters or numbers including two/three word month in arabic.\n\t// includes scottish gaelic two word and hyphenated months\n\tvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\t\n\t\n\tvar regexes = {};\n\t\n\tfunction addRegexToken (token, regex, strictRegex) {\n\t    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n\t        return (isStrict && strictRegex) ? strictRegex : regex;\n\t    };\n\t}\n\t\n\tfunction getParseRegexForToken (token, config) {\n\t    if (!hasOwnProp(regexes, token)) {\n\t        return new RegExp(unescapeFormat(token));\n\t    }\n\t\n\t    return regexes[token](config._strict, config._locale);\n\t}\n\t\n\t// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\tfunction unescapeFormat(s) {\n\t    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n\t        return p1 || p2 || p3 || p4;\n\t    }));\n\t}\n\t\n\tfunction regexEscape(s) {\n\t    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t}\n\t\n\tvar tokens = {};\n\t\n\tfunction addParseToken (token, callback) {\n\t    var i, func = callback;\n\t    if (typeof token === 'string') {\n\t        token = [token];\n\t    }\n\t    if (isNumber(callback)) {\n\t        func = function (input, array) {\n\t            array[callback] = toInt(input);\n\t        };\n\t    }\n\t    for (i = 0; i < token.length; i++) {\n\t        tokens[token[i]] = func;\n\t    }\n\t}\n\t\n\tfunction addWeekParseToken (token, callback) {\n\t    addParseToken(token, function (input, array, config, token) {\n\t        config._w = config._w || {};\n\t        callback(input, config._w, config, token);\n\t    });\n\t}\n\t\n\tfunction addTimeToArrayFromToken(token, input, config) {\n\t    if (input != null && hasOwnProp(tokens, token)) {\n\t        tokens[token](input, config._a, config, token);\n\t    }\n\t}\n\t\n\tvar YEAR = 0;\n\tvar MONTH = 1;\n\tvar DATE = 2;\n\tvar HOUR = 3;\n\tvar MINUTE = 4;\n\tvar SECOND = 5;\n\tvar MILLISECOND = 6;\n\tvar WEEK = 7;\n\tvar WEEKDAY = 8;\n\t\n\tvar indexOf;\n\t\n\tif (Array.prototype.indexOf) {\n\t    indexOf = Array.prototype.indexOf;\n\t} else {\n\t    indexOf = function (o) {\n\t        // I know\n\t        var i;\n\t        for (i = 0; i < this.length; ++i) {\n\t            if (this[i] === o) {\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t}\n\t\n\tvar indexOf$1 = indexOf;\n\t\n\tfunction daysInMonth(year, month) {\n\t    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('M', ['MM', 2], 'Mo', function () {\n\t    return this.month() + 1;\n\t});\n\t\n\taddFormatToken('MMM', 0, 0, function (format) {\n\t    return this.localeData().monthsShort(this, format);\n\t});\n\t\n\taddFormatToken('MMMM', 0, 0, function (format) {\n\t    return this.localeData().months(this, format);\n\t});\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('month', 'M');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('month', 8);\n\t\n\t// PARSING\n\t\n\taddRegexToken('M',    match1to2);\n\taddRegexToken('MM',   match1to2, match2);\n\taddRegexToken('MMM',  function (isStrict, locale) {\n\t    return locale.monthsShortRegex(isStrict);\n\t});\n\taddRegexToken('MMMM', function (isStrict, locale) {\n\t    return locale.monthsRegex(isStrict);\n\t});\n\t\n\taddParseToken(['M', 'MM'], function (input, array) {\n\t    array[MONTH] = toInt(input) - 1;\n\t});\n\t\n\taddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n\t    var month = config._locale.monthsParse(input, token, config._strict);\n\t    // if we didn't find a month name, mark the date as invalid.\n\t    if (month != null) {\n\t        array[MONTH] = month;\n\t    } else {\n\t        getParsingFlags(config).invalidMonth = input;\n\t    }\n\t});\n\t\n\t// LOCALES\n\t\n\tvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n\tvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\tfunction localeMonths (m, format) {\n\t    if (!m) {\n\t        return this._months;\n\t    }\n\t    return isArray(this._months) ? this._months[m.month()] :\n\t        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n\t}\n\t\n\tvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\tfunction localeMonthsShort (m, format) {\n\t    if (!m) {\n\t        return this._monthsShort;\n\t    }\n\t    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n\t        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n\t}\n\t\n\tfunction handleStrictParse(monthName, format, strict) {\n\t    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n\t    if (!this._monthsParse) {\n\t        // this is not used\n\t        this._monthsParse = [];\n\t        this._longMonthsParse = [];\n\t        this._shortMonthsParse = [];\n\t        for (i = 0; i < 12; ++i) {\n\t            mom = createUTC([2000, i]);\n\t            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n\t            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n\t        }\n\t    }\n\t\n\t    if (strict) {\n\t        if (format === 'MMM') {\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    } else {\n\t        if (format === 'MMM') {\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._longMonthsParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortMonthsParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    }\n\t}\n\t\n\tfunction localeMonthsParse (monthName, format, strict) {\n\t    var i, mom, regex;\n\t\n\t    if (this._monthsParseExact) {\n\t        return handleStrictParse.call(this, monthName, format, strict);\n\t    }\n\t\n\t    if (!this._monthsParse) {\n\t        this._monthsParse = [];\n\t        this._longMonthsParse = [];\n\t        this._shortMonthsParse = [];\n\t    }\n\t\n\t    // TODO: add sorting\n\t    // Sorting makes sure if one month (or abbr) is a prefix of another\n\t    // see sorting in computeMonthsParse\n\t    for (i = 0; i < 12; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, i]);\n\t        if (strict && !this._longMonthsParse[i]) {\n\t            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n\t            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n\t        }\n\t        if (!strict && !this._monthsParse[i]) {\n\t            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n\t            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t        }\n\t        // test the regex\n\t        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n\t            return i;\n\t        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n\t            return i;\n\t        } else if (!strict && this._monthsParse[i].test(monthName)) {\n\t            return i;\n\t        }\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction setMonth (mom, value) {\n\t    var dayOfMonth;\n\t\n\t    if (!mom.isValid()) {\n\t        // No op\n\t        return mom;\n\t    }\n\t\n\t    if (typeof value === 'string') {\n\t        if (/^\\d+$/.test(value)) {\n\t            value = toInt(value);\n\t        } else {\n\t            value = mom.localeData().monthsParse(value);\n\t            // TODO: Another silent failure?\n\t            if (!isNumber(value)) {\n\t                return mom;\n\t            }\n\t        }\n\t    }\n\t\n\t    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\t    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\t    return mom;\n\t}\n\t\n\tfunction getSetMonth (value) {\n\t    if (value != null) {\n\t        setMonth(this, value);\n\t        hooks.updateOffset(this, true);\n\t        return this;\n\t    } else {\n\t        return get(this, 'Month');\n\t    }\n\t}\n\t\n\tfunction getDaysInMonth () {\n\t    return daysInMonth(this.year(), this.month());\n\t}\n\t\n\tvar defaultMonthsShortRegex = matchWord;\n\tfunction monthsShortRegex (isStrict) {\n\t    if (this._monthsParseExact) {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            computeMonthsParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._monthsShortStrictRegex;\n\t        } else {\n\t            return this._monthsShortRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_monthsShortRegex')) {\n\t            this._monthsShortRegex = defaultMonthsShortRegex;\n\t        }\n\t        return this._monthsShortStrictRegex && isStrict ?\n\t            this._monthsShortStrictRegex : this._monthsShortRegex;\n\t    }\n\t}\n\t\n\tvar defaultMonthsRegex = matchWord;\n\tfunction monthsRegex (isStrict) {\n\t    if (this._monthsParseExact) {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            computeMonthsParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._monthsStrictRegex;\n\t        } else {\n\t            return this._monthsRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_monthsRegex')) {\n\t            this._monthsRegex = defaultMonthsRegex;\n\t        }\n\t        return this._monthsStrictRegex && isStrict ?\n\t            this._monthsStrictRegex : this._monthsRegex;\n\t    }\n\t}\n\t\n\tfunction computeMonthsParse () {\n\t    function cmpLenRev(a, b) {\n\t        return b.length - a.length;\n\t    }\n\t\n\t    var shortPieces = [], longPieces = [], mixedPieces = [],\n\t        i, mom;\n\t    for (i = 0; i < 12; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, i]);\n\t        shortPieces.push(this.monthsShort(mom, ''));\n\t        longPieces.push(this.months(mom, ''));\n\t        mixedPieces.push(this.months(mom, ''));\n\t        mixedPieces.push(this.monthsShort(mom, ''));\n\t    }\n\t    // Sorting makes sure if one month (or abbr) is a prefix of another it\n\t    // will match the longer piece.\n\t    shortPieces.sort(cmpLenRev);\n\t    longPieces.sort(cmpLenRev);\n\t    mixedPieces.sort(cmpLenRev);\n\t    for (i = 0; i < 12; i++) {\n\t        shortPieces[i] = regexEscape(shortPieces[i]);\n\t        longPieces[i] = regexEscape(longPieces[i]);\n\t    }\n\t    for (i = 0; i < 24; i++) {\n\t        mixedPieces[i] = regexEscape(mixedPieces[i]);\n\t    }\n\t\n\t    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t    this._monthsShortRegex = this._monthsRegex;\n\t    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n\t    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('Y', 0, 0, function () {\n\t    var y = this.year();\n\t    return y <= 9999 ? '' + y : '+' + y;\n\t});\n\t\n\taddFormatToken(0, ['YY', 2], 0, function () {\n\t    return this.year() % 100;\n\t});\n\t\n\taddFormatToken(0, ['YYYY',   4],       0, 'year');\n\taddFormatToken(0, ['YYYYY',  5],       0, 'year');\n\taddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('year', 'y');\n\t\n\t// PRIORITIES\n\t\n\taddUnitPriority('year', 1);\n\t\n\t// PARSING\n\t\n\taddRegexToken('Y',      matchSigned);\n\taddRegexToken('YY',     match1to2, match2);\n\taddRegexToken('YYYY',   match1to4, match4);\n\taddRegexToken('YYYYY',  match1to6, match6);\n\taddRegexToken('YYYYYY', match1to6, match6);\n\t\n\taddParseToken(['YYYYY', 'YYYYYY'], YEAR);\n\taddParseToken('YYYY', function (input, array) {\n\t    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n\t});\n\taddParseToken('YY', function (input, array) {\n\t    array[YEAR] = hooks.parseTwoDigitYear(input);\n\t});\n\taddParseToken('Y', function (input, array) {\n\t    array[YEAR] = parseInt(input, 10);\n\t});\n\t\n\t// HELPERS\n\t\n\tfunction daysInYear(year) {\n\t    return isLeapYear(year) ? 366 : 365;\n\t}\n\t\n\tfunction isLeapYear(year) {\n\t    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\t}\n\t\n\t// HOOKS\n\t\n\thooks.parseTwoDigitYear = function (input) {\n\t    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n\t};\n\t\n\t// MOMENTS\n\t\n\tvar getSetYear = makeGetSet('FullYear', true);\n\t\n\tfunction getIsLeapYear () {\n\t    return isLeapYear(this.year());\n\t}\n\t\n\tfunction createDate (y, m, d, h, M, s, ms) {\n\t    //can't just apply() to create a date:\n\t    //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n\t    var date = new Date(y, m, d, h, M, s, ms);\n\t\n\t    //the date constructor remaps years 0-99 to 1900-1999\n\t    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n\t        date.setFullYear(y);\n\t    }\n\t    return date;\n\t}\n\t\n\tfunction createUTCDate (y) {\n\t    var date = new Date(Date.UTC.apply(null, arguments));\n\t\n\t    //the Date.UTC function remaps years 0-99 to 1900-1999\n\t    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n\t        date.setUTCFullYear(y);\n\t    }\n\t    return date;\n\t}\n\t\n\t// start-of-first-week - start-of-year\n\tfunction firstWeekOffset(year, dow, doy) {\n\t    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n\t        fwd = 7 + dow - doy,\n\t        // first-week day local weekday -- which local weekday is fwd\n\t        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\t\n\t    return -fwdlw + fwd - 1;\n\t}\n\t\n\t//http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\tfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n\t    var localWeekday = (7 + weekday - dow) % 7,\n\t        weekOffset = firstWeekOffset(year, dow, doy),\n\t        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n\t        resYear, resDayOfYear;\n\t\n\t    if (dayOfYear <= 0) {\n\t        resYear = year - 1;\n\t        resDayOfYear = daysInYear(resYear) + dayOfYear;\n\t    } else if (dayOfYear > daysInYear(year)) {\n\t        resYear = year + 1;\n\t        resDayOfYear = dayOfYear - daysInYear(year);\n\t    } else {\n\t        resYear = year;\n\t        resDayOfYear = dayOfYear;\n\t    }\n\t\n\t    return {\n\t        year: resYear,\n\t        dayOfYear: resDayOfYear\n\t    };\n\t}\n\t\n\tfunction weekOfYear(mom, dow, doy) {\n\t    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n\t        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n\t        resWeek, resYear;\n\t\n\t    if (week < 1) {\n\t        resYear = mom.year() - 1;\n\t        resWeek = week + weeksInYear(resYear, dow, doy);\n\t    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n\t        resWeek = week - weeksInYear(mom.year(), dow, doy);\n\t        resYear = mom.year() + 1;\n\t    } else {\n\t        resYear = mom.year();\n\t        resWeek = week;\n\t    }\n\t\n\t    return {\n\t        week: resWeek,\n\t        year: resYear\n\t    };\n\t}\n\t\n\tfunction weeksInYear(year, dow, doy) {\n\t    var weekOffset = firstWeekOffset(year, dow, doy),\n\t        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n\t    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('w', ['ww', 2], 'wo', 'week');\n\taddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('week', 'w');\n\taddUnitAlias('isoWeek', 'W');\n\t\n\t// PRIORITIES\n\t\n\taddUnitPriority('week', 5);\n\taddUnitPriority('isoWeek', 5);\n\t\n\t// PARSING\n\t\n\taddRegexToken('w',  match1to2);\n\taddRegexToken('ww', match1to2, match2);\n\taddRegexToken('W',  match1to2);\n\taddRegexToken('WW', match1to2, match2);\n\t\n\taddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n\t    week[token.substr(0, 1)] = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// LOCALES\n\t\n\tfunction localeWeek (mom) {\n\t    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n\t}\n\t\n\tvar defaultLocaleWeek = {\n\t    dow : 0, // Sunday is the first day of the week.\n\t    doy : 6  // The week that contains Jan 1st is the first week of the year.\n\t};\n\t\n\tfunction localeFirstDayOfWeek () {\n\t    return this._week.dow;\n\t}\n\t\n\tfunction localeFirstDayOfYear () {\n\t    return this._week.doy;\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction getSetWeek (input) {\n\t    var week = this.localeData().week(this);\n\t    return input == null ? week : this.add((input - week) * 7, 'd');\n\t}\n\t\n\tfunction getSetISOWeek (input) {\n\t    var week = weekOfYear(this, 1, 4).week;\n\t    return input == null ? week : this.add((input - week) * 7, 'd');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('d', 0, 'do', 'day');\n\t\n\taddFormatToken('dd', 0, 0, function (format) {\n\t    return this.localeData().weekdaysMin(this, format);\n\t});\n\t\n\taddFormatToken('ddd', 0, 0, function (format) {\n\t    return this.localeData().weekdaysShort(this, format);\n\t});\n\t\n\taddFormatToken('dddd', 0, 0, function (format) {\n\t    return this.localeData().weekdays(this, format);\n\t});\n\t\n\taddFormatToken('e', 0, 0, 'weekday');\n\taddFormatToken('E', 0, 0, 'isoWeekday');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('day', 'd');\n\taddUnitAlias('weekday', 'e');\n\taddUnitAlias('isoWeekday', 'E');\n\t\n\t// PRIORITY\n\taddUnitPriority('day', 11);\n\taddUnitPriority('weekday', 11);\n\taddUnitPriority('isoWeekday', 11);\n\t\n\t// PARSING\n\t\n\taddRegexToken('d',    match1to2);\n\taddRegexToken('e',    match1to2);\n\taddRegexToken('E',    match1to2);\n\taddRegexToken('dd',   function (isStrict, locale) {\n\t    return locale.weekdaysMinRegex(isStrict);\n\t});\n\taddRegexToken('ddd',   function (isStrict, locale) {\n\t    return locale.weekdaysShortRegex(isStrict);\n\t});\n\taddRegexToken('dddd',   function (isStrict, locale) {\n\t    return locale.weekdaysRegex(isStrict);\n\t});\n\t\n\taddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n\t    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n\t    // if we didn't get a weekday name, mark the date as invalid\n\t    if (weekday != null) {\n\t        week.d = weekday;\n\t    } else {\n\t        getParsingFlags(config).invalidWeekday = input;\n\t    }\n\t});\n\t\n\taddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n\t    week[token] = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\tfunction parseWeekday(input, locale) {\n\t    if (typeof input !== 'string') {\n\t        return input;\n\t    }\n\t\n\t    if (!isNaN(input)) {\n\t        return parseInt(input, 10);\n\t    }\n\t\n\t    input = locale.weekdaysParse(input);\n\t    if (typeof input === 'number') {\n\t        return input;\n\t    }\n\t\n\t    return null;\n\t}\n\t\n\tfunction parseIsoWeekday(input, locale) {\n\t    if (typeof input === 'string') {\n\t        return locale.weekdaysParse(input) % 7 || 7;\n\t    }\n\t    return isNaN(input) ? null : input;\n\t}\n\t\n\t// LOCALES\n\t\n\tvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\tfunction localeWeekdays (m, format) {\n\t    if (!m) {\n\t        return this._weekdays;\n\t    }\n\t    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n\t        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n\t}\n\t\n\tvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\tfunction localeWeekdaysShort (m) {\n\t    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n\t}\n\t\n\tvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\tfunction localeWeekdaysMin (m) {\n\t    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n\t}\n\t\n\tfunction handleStrictParse$1(weekdayName, format, strict) {\n\t    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n\t    if (!this._weekdaysParse) {\n\t        this._weekdaysParse = [];\n\t        this._shortWeekdaysParse = [];\n\t        this._minWeekdaysParse = [];\n\t\n\t        for (i = 0; i < 7; ++i) {\n\t            mom = createUTC([2000, 1]).day(i);\n\t            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n\t            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n\t            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n\t        }\n\t    }\n\t\n\t    if (strict) {\n\t        if (format === 'dddd') {\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else if (format === 'ddd') {\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    } else {\n\t        if (format === 'dddd') {\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else if (format === 'ddd') {\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        } else {\n\t            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._weekdaysParse, llc);\n\t            if (ii !== -1) {\n\t                return ii;\n\t            }\n\t            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n\t            return ii !== -1 ? ii : null;\n\t        }\n\t    }\n\t}\n\t\n\tfunction localeWeekdaysParse (weekdayName, format, strict) {\n\t    var i, mom, regex;\n\t\n\t    if (this._weekdaysParseExact) {\n\t        return handleStrictParse$1.call(this, weekdayName, format, strict);\n\t    }\n\t\n\t    if (!this._weekdaysParse) {\n\t        this._weekdaysParse = [];\n\t        this._minWeekdaysParse = [];\n\t        this._shortWeekdaysParse = [];\n\t        this._fullWeekdaysParse = [];\n\t    }\n\t\n\t    for (i = 0; i < 7; i++) {\n\t        // make the regex if we don't have it already\n\t\n\t        mom = createUTC([2000, 1]).day(i);\n\t        if (strict && !this._fullWeekdaysParse[i]) {\n\t            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n\t            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n\t            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n\t        }\n\t        if (!this._weekdaysParse[i]) {\n\t            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n\t            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t        }\n\t        // test the regex\n\t        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n\t            return i;\n\t        }\n\t    }\n\t}\n\t\n\t// MOMENTS\n\t\n\tfunction getSetDayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\t    if (input != null) {\n\t        input = parseWeekday(input, this.localeData());\n\t        return this.add(input - day, 'd');\n\t    } else {\n\t        return day;\n\t    }\n\t}\n\t\n\tfunction getSetLocaleDayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n\t    return input == null ? weekday : this.add(input - weekday, 'd');\n\t}\n\t\n\tfunction getSetISODayOfWeek (input) {\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t\n\t    // behaves the same as moment#day except\n\t    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n\t    // as a setter, sunday should belong to the previous week.\n\t\n\t    if (input != null) {\n\t        var weekday = parseIsoWeekday(input, this.localeData());\n\t        return this.day(this.day() % 7 ? weekday : weekday - 7);\n\t    } else {\n\t        return this.day() || 7;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysRegex = matchWord;\n\tfunction weekdaysRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysStrictRegex;\n\t        } else {\n\t            return this._weekdaysRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            this._weekdaysRegex = defaultWeekdaysRegex;\n\t        }\n\t        return this._weekdaysStrictRegex && isStrict ?\n\t            this._weekdaysStrictRegex : this._weekdaysRegex;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysShortRegex = matchWord;\n\tfunction weekdaysShortRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysShortStrictRegex;\n\t        } else {\n\t            return this._weekdaysShortRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n\t            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n\t        }\n\t        return this._weekdaysShortStrictRegex && isStrict ?\n\t            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n\t    }\n\t}\n\t\n\tvar defaultWeekdaysMinRegex = matchWord;\n\tfunction weekdaysMinRegex (isStrict) {\n\t    if (this._weekdaysParseExact) {\n\t        if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t            computeWeekdaysParse.call(this);\n\t        }\n\t        if (isStrict) {\n\t            return this._weekdaysMinStrictRegex;\n\t        } else {\n\t            return this._weekdaysMinRegex;\n\t        }\n\t    } else {\n\t        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n\t            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n\t        }\n\t        return this._weekdaysMinStrictRegex && isStrict ?\n\t            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n\t    }\n\t}\n\t\n\t\n\tfunction computeWeekdaysParse () {\n\t    function cmpLenRev(a, b) {\n\t        return b.length - a.length;\n\t    }\n\t\n\t    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n\t        i, mom, minp, shortp, longp;\n\t    for (i = 0; i < 7; i++) {\n\t        // make the regex if we don't have it already\n\t        mom = createUTC([2000, 1]).day(i);\n\t        minp = this.weekdaysMin(mom, '');\n\t        shortp = this.weekdaysShort(mom, '');\n\t        longp = this.weekdays(mom, '');\n\t        minPieces.push(minp);\n\t        shortPieces.push(shortp);\n\t        longPieces.push(longp);\n\t        mixedPieces.push(minp);\n\t        mixedPieces.push(shortp);\n\t        mixedPieces.push(longp);\n\t    }\n\t    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n\t    // will match the longer piece.\n\t    minPieces.sort(cmpLenRev);\n\t    shortPieces.sort(cmpLenRev);\n\t    longPieces.sort(cmpLenRev);\n\t    mixedPieces.sort(cmpLenRev);\n\t    for (i = 0; i < 7; i++) {\n\t        shortPieces[i] = regexEscape(shortPieces[i]);\n\t        longPieces[i] = regexEscape(longPieces[i]);\n\t        mixedPieces[i] = regexEscape(mixedPieces[i]);\n\t    }\n\t\n\t    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t    this._weekdaysShortRegex = this._weekdaysRegex;\n\t    this._weekdaysMinRegex = this._weekdaysRegex;\n\t\n\t    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n\t    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n\t    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n\t}\n\t\n\t// FORMATTING\n\t\n\tfunction hFormat() {\n\t    return this.hours() % 12 || 12;\n\t}\n\t\n\tfunction kFormat() {\n\t    return this.hours() || 24;\n\t}\n\t\n\taddFormatToken('H', ['HH', 2], 0, 'hour');\n\taddFormatToken('h', ['hh', 2], 0, hFormat);\n\taddFormatToken('k', ['kk', 2], 0, kFormat);\n\t\n\taddFormatToken('hmm', 0, 0, function () {\n\t    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n\t});\n\t\n\taddFormatToken('hmmss', 0, 0, function () {\n\t    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n\t        zeroFill(this.seconds(), 2);\n\t});\n\t\n\taddFormatToken('Hmm', 0, 0, function () {\n\t    return '' + this.hours() + zeroFill(this.minutes(), 2);\n\t});\n\t\n\taddFormatToken('Hmmss', 0, 0, function () {\n\t    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n\t        zeroFill(this.seconds(), 2);\n\t});\n\t\n\tfunction meridiem (token, lowercase) {\n\t    addFormatToken(token, 0, 0, function () {\n\t        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n\t    });\n\t}\n\t\n\tmeridiem('a', true);\n\tmeridiem('A', false);\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('hour', 'h');\n\t\n\t// PRIORITY\n\taddUnitPriority('hour', 13);\n\t\n\t// PARSING\n\t\n\tfunction matchMeridiem (isStrict, locale) {\n\t    return locale._meridiemParse;\n\t}\n\t\n\taddRegexToken('a',  matchMeridiem);\n\taddRegexToken('A',  matchMeridiem);\n\taddRegexToken('H',  match1to2);\n\taddRegexToken('h',  match1to2);\n\taddRegexToken('HH', match1to2, match2);\n\taddRegexToken('hh', match1to2, match2);\n\t\n\taddRegexToken('hmm', match3to4);\n\taddRegexToken('hmmss', match5to6);\n\taddRegexToken('Hmm', match3to4);\n\taddRegexToken('Hmmss', match5to6);\n\t\n\taddParseToken(['H', 'HH'], HOUR);\n\taddParseToken(['a', 'A'], function (input, array, config) {\n\t    config._isPm = config._locale.isPM(input);\n\t    config._meridiem = input;\n\t});\n\taddParseToken(['h', 'hh'], function (input, array, config) {\n\t    array[HOUR] = toInt(input);\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('hmm', function (input, array, config) {\n\t    var pos = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos));\n\t    array[MINUTE] = toInt(input.substr(pos));\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('hmmss', function (input, array, config) {\n\t    var pos1 = input.length - 4;\n\t    var pos2 = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos1));\n\t    array[MINUTE] = toInt(input.substr(pos1, 2));\n\t    array[SECOND] = toInt(input.substr(pos2));\n\t    getParsingFlags(config).bigHour = true;\n\t});\n\taddParseToken('Hmm', function (input, array, config) {\n\t    var pos = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos));\n\t    array[MINUTE] = toInt(input.substr(pos));\n\t});\n\taddParseToken('Hmmss', function (input, array, config) {\n\t    var pos1 = input.length - 4;\n\t    var pos2 = input.length - 2;\n\t    array[HOUR] = toInt(input.substr(0, pos1));\n\t    array[MINUTE] = toInt(input.substr(pos1, 2));\n\t    array[SECOND] = toInt(input.substr(pos2));\n\t});\n\t\n\t// LOCALES\n\t\n\tfunction localeIsPM (input) {\n\t    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n\t    // Using charAt should be more compatible.\n\t    return ((input + '').toLowerCase().charAt(0) === 'p');\n\t}\n\t\n\tvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\tfunction localeMeridiem (hours, minutes, isLower) {\n\t    if (hours > 11) {\n\t        return isLower ? 'pm' : 'PM';\n\t    } else {\n\t        return isLower ? 'am' : 'AM';\n\t    }\n\t}\n\t\n\t\n\t// MOMENTS\n\t\n\t// Setting the hour should keep the time, because the user explicitly\n\t// specified which hour he wants. So trying to maintain the same hour (in\n\t// a new timezone) makes sense. Adding/subtracting hours does not follow\n\t// this rule.\n\tvar getSetHour = makeGetSet('Hours', true);\n\t\n\t// months\n\t// week\n\t// weekdays\n\t// meridiem\n\tvar baseConfig = {\n\t    calendar: defaultCalendar,\n\t    longDateFormat: defaultLongDateFormat,\n\t    invalidDate: defaultInvalidDate,\n\t    ordinal: defaultOrdinal,\n\t    ordinalParse: defaultOrdinalParse,\n\t    relativeTime: defaultRelativeTime,\n\t\n\t    months: defaultLocaleMonths,\n\t    monthsShort: defaultLocaleMonthsShort,\n\t\n\t    week: defaultLocaleWeek,\n\t\n\t    weekdays: defaultLocaleWeekdays,\n\t    weekdaysMin: defaultLocaleWeekdaysMin,\n\t    weekdaysShort: defaultLocaleWeekdaysShort,\n\t\n\t    meridiemParse: defaultLocaleMeridiemParse\n\t};\n\t\n\t// internal storage for locale config files\n\tvar locales = {};\n\tvar localeFamilies = {};\n\tvar globalLocale;\n\t\n\tfunction normalizeLocale(key) {\n\t    return key ? key.toLowerCase().replace('_', '-') : key;\n\t}\n\t\n\t// pick the locale from the array\n\t// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n\t// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\tfunction chooseLocale(names) {\n\t    var i = 0, j, next, locale, split;\n\t\n\t    while (i < names.length) {\n\t        split = normalizeLocale(names[i]).split('-');\n\t        j = split.length;\n\t        next = normalizeLocale(names[i + 1]);\n\t        next = next ? next.split('-') : null;\n\t        while (j > 0) {\n\t            locale = loadLocale(split.slice(0, j).join('-'));\n\t            if (locale) {\n\t                return locale;\n\t            }\n\t            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n\t                //the next array item is better than a shallower substring of this one\n\t                break;\n\t            }\n\t            j--;\n\t        }\n\t        i++;\n\t    }\n\t    return null;\n\t}\n\t\n\tfunction loadLocale(name) {\n\t    var oldLocale = null;\n\t    // TODO: Find a better way to register and load all the locales in Node\n\t    if (!locales[name] && (typeof module !== 'undefined') &&\n\t            module && module.exports) {\n\t        try {\n\t            oldLocale = globalLocale._abbr;\n\t            !(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"./locale\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n\t            // because defineLocale currently also sets the global locale, we\n\t            // want to undo that for lazy loaded locales\n\t            getSetGlobalLocale(oldLocale);\n\t        } catch (e) { }\n\t    }\n\t    return locales[name];\n\t}\n\t\n\t// This function will load locale and then set the global locale.  If\n\t// no arguments are passed in, it will simply return the current global\n\t// locale key.\n\tfunction getSetGlobalLocale (key, values) {\n\t    var data;\n\t    if (key) {\n\t        if (isUndefined(values)) {\n\t            data = getLocale(key);\n\t        }\n\t        else {\n\t            data = defineLocale(key, values);\n\t        }\n\t\n\t        if (data) {\n\t            // moment.duration._locale = moment._locale = data;\n\t            globalLocale = data;\n\t        }\n\t    }\n\t\n\t    return globalLocale._abbr;\n\t}\n\t\n\tfunction defineLocale (name, config) {\n\t    if (config !== null) {\n\t        var parentConfig = baseConfig;\n\t        config.abbr = name;\n\t        if (locales[name] != null) {\n\t            deprecateSimple('defineLocaleOverride',\n\t                    'use moment.updateLocale(localeName, config) to change ' +\n\t                    'an existing locale. moment.defineLocale(localeName, ' +\n\t                    'config) should only be used for creating a new locale ' +\n\t                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n\t            parentConfig = locales[name]._config;\n\t        } else if (config.parentLocale != null) {\n\t            if (locales[config.parentLocale] != null) {\n\t                parentConfig = locales[config.parentLocale]._config;\n\t            } else {\n\t                if (!localeFamilies[config.parentLocale]) {\n\t                    localeFamilies[config.parentLocale] = [];\n\t                }\n\t                localeFamilies[config.parentLocale].push({\n\t                    name: name,\n\t                    config: config\n\t                });\n\t                return null;\n\t            }\n\t        }\n\t        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\t\n\t        if (localeFamilies[name]) {\n\t            localeFamilies[name].forEach(function (x) {\n\t                defineLocale(x.name, x.config);\n\t            });\n\t        }\n\t\n\t        // backwards compat for now: also set the locale\n\t        // make sure we set the locale AFTER all child locales have been\n\t        // created, so we won't end up with the child locale set.\n\t        getSetGlobalLocale(name);\n\t\n\t\n\t        return locales[name];\n\t    } else {\n\t        // useful for testing\n\t        delete locales[name];\n\t        return null;\n\t    }\n\t}\n\t\n\tfunction updateLocale(name, config) {\n\t    if (config != null) {\n\t        var locale, parentConfig = baseConfig;\n\t        // MERGE\n\t        if (locales[name] != null) {\n\t            parentConfig = locales[name]._config;\n\t        }\n\t        config = mergeConfigs(parentConfig, config);\n\t        locale = new Locale(config);\n\t        locale.parentLocale = locales[name];\n\t        locales[name] = locale;\n\t\n\t        // backwards compat for now: also set the locale\n\t        getSetGlobalLocale(name);\n\t    } else {\n\t        // pass null for config to unupdate, useful for tests\n\t        if (locales[name] != null) {\n\t            if (locales[name].parentLocale != null) {\n\t                locales[name] = locales[name].parentLocale;\n\t            } else if (locales[name] != null) {\n\t                delete locales[name];\n\t            }\n\t        }\n\t    }\n\t    return locales[name];\n\t}\n\t\n\t// returns locale data\n\tfunction getLocale (key) {\n\t    var locale;\n\t\n\t    if (key && key._locale && key._locale._abbr) {\n\t        key = key._locale._abbr;\n\t    }\n\t\n\t    if (!key) {\n\t        return globalLocale;\n\t    }\n\t\n\t    if (!isArray(key)) {\n\t        //short-circuit everything else\n\t        locale = loadLocale(key);\n\t        if (locale) {\n\t            return locale;\n\t        }\n\t        key = [key];\n\t    }\n\t\n\t    return chooseLocale(key);\n\t}\n\t\n\tfunction listLocales() {\n\t    return keys$1(locales);\n\t}\n\t\n\tfunction checkOverflow (m) {\n\t    var overflow;\n\t    var a = m._a;\n\t\n\t    if (a && getParsingFlags(m).overflow === -2) {\n\t        overflow =\n\t            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n\t            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n\t            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n\t            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n\t            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n\t            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n\t            -1;\n\t\n\t        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n\t            overflow = DATE;\n\t        }\n\t        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n\t            overflow = WEEK;\n\t        }\n\t        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n\t            overflow = WEEKDAY;\n\t        }\n\t\n\t        getParsingFlags(m).overflow = overflow;\n\t    }\n\t\n\t    return m;\n\t}\n\t\n\t// iso 8601 regex\n\t// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\tvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\tvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\t\n\tvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\t\n\tvar isoDates = [\n\t    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n\t    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n\t    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n\t    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n\t    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n\t    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n\t    ['YYYYYYMMDD', /[+-]\\d{10}/],\n\t    ['YYYYMMDD', /\\d{8}/],\n\t    // YYYYMM is NOT allowed by the standard\n\t    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n\t    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n\t    ['YYYYDDD', /\\d{7}/]\n\t];\n\t\n\t// iso time formats and regexes\n\tvar isoTimes = [\n\t    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n\t    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n\t    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n\t    ['HH:mm', /\\d\\d:\\d\\d/],\n\t    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n\t    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n\t    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n\t    ['HHmm', /\\d\\d\\d\\d/],\n\t    ['HH', /\\d\\d/]\n\t];\n\t\n\tvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\t\n\t// date from iso format\n\tfunction configFromISO(config) {\n\t    var i, l,\n\t        string = config._i,\n\t        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n\t        allowTime, dateFormat, timeFormat, tzFormat;\n\t\n\t    if (match) {\n\t        getParsingFlags(config).iso = true;\n\t\n\t        for (i = 0, l = isoDates.length; i < l; i++) {\n\t            if (isoDates[i][1].exec(match[1])) {\n\t                dateFormat = isoDates[i][0];\n\t                allowTime = isoDates[i][2] !== false;\n\t                break;\n\t            }\n\t        }\n\t        if (dateFormat == null) {\n\t            config._isValid = false;\n\t            return;\n\t        }\n\t        if (match[3]) {\n\t            for (i = 0, l = isoTimes.length; i < l; i++) {\n\t                if (isoTimes[i][1].exec(match[3])) {\n\t                    // match[2] should be 'T' or space\n\t                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n\t                    break;\n\t                }\n\t            }\n\t            if (timeFormat == null) {\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t        if (!allowTime && timeFormat != null) {\n\t            config._isValid = false;\n\t            return;\n\t        }\n\t        if (match[4]) {\n\t            if (tzRegex.exec(match[4])) {\n\t                tzFormat = 'Z';\n\t            } else {\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t        }\n\t        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n\t        configFromStringAndFormat(config);\n\t    } else {\n\t        config._isValid = false;\n\t    }\n\t}\n\t\n\t// date from iso format or fallback\n\tfunction configFromString(config) {\n\t    var matched = aspNetJsonRegex.exec(config._i);\n\t\n\t    if (matched !== null) {\n\t        config._d = new Date(+matched[1]);\n\t        return;\n\t    }\n\t\n\t    configFromISO(config);\n\t    if (config._isValid === false) {\n\t        delete config._isValid;\n\t        hooks.createFromInputFallback(config);\n\t    }\n\t}\n\t\n\thooks.createFromInputFallback = deprecate(\n\t    'value provided is not in a recognized ISO format. moment construction falls back to js Date(), ' +\n\t    'which is not reliable across all browsers and versions. Non ISO date formats are ' +\n\t    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n\t    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n\t    function (config) {\n\t        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n\t    }\n\t);\n\t\n\t// Pick the first defined of two or three arguments.\n\tfunction defaults(a, b, c) {\n\t    if (a != null) {\n\t        return a;\n\t    }\n\t    if (b != null) {\n\t        return b;\n\t    }\n\t    return c;\n\t}\n\t\n\tfunction currentDateArray(config) {\n\t    // hooks is actually the exported moment object\n\t    var nowValue = new Date(hooks.now());\n\t    if (config._useUTC) {\n\t        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n\t    }\n\t    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n\t}\n\t\n\t// convert an array to a date.\n\t// the array should mirror the parameters below\n\t// note: all values past the year are optional and will default to the lowest possible value.\n\t// [year, month, day , hour, minute, second, millisecond]\n\tfunction configFromArray (config) {\n\t    var i, date, input = [], currentDate, yearToUse;\n\t\n\t    if (config._d) {\n\t        return;\n\t    }\n\t\n\t    currentDate = currentDateArray(config);\n\t\n\t    //compute day of the year from weeks and weekdays\n\t    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n\t        dayOfYearFromWeekInfo(config);\n\t    }\n\t\n\t    //if the day of the year is set, figure out what it is\n\t    if (config._dayOfYear) {\n\t        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\t\n\t        if (config._dayOfYear > daysInYear(yearToUse)) {\n\t            getParsingFlags(config)._overflowDayOfYear = true;\n\t        }\n\t\n\t        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n\t        config._a[MONTH] = date.getUTCMonth();\n\t        config._a[DATE] = date.getUTCDate();\n\t    }\n\t\n\t    // Default to current date.\n\t    // * if no year, month, day of month are given, default to today\n\t    // * if day of month is given, default month and year\n\t    // * if month is given, default only year\n\t    // * if year is given, don't default anything\n\t    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n\t        config._a[i] = input[i] = currentDate[i];\n\t    }\n\t\n\t    // Zero out whatever was not defaulted, including time\n\t    for (; i < 7; i++) {\n\t        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n\t    }\n\t\n\t    // Check for 24:00:00.000\n\t    if (config._a[HOUR] === 24 &&\n\t            config._a[MINUTE] === 0 &&\n\t            config._a[SECOND] === 0 &&\n\t            config._a[MILLISECOND] === 0) {\n\t        config._nextDay = true;\n\t        config._a[HOUR] = 0;\n\t    }\n\t\n\t    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n\t    // Apply timezone offset from input. The actual utcOffset can be changed\n\t    // with parseZone.\n\t    if (config._tzm != null) {\n\t        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\t    }\n\t\n\t    if (config._nextDay) {\n\t        config._a[HOUR] = 24;\n\t    }\n\t}\n\t\n\tfunction dayOfYearFromWeekInfo(config) {\n\t    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\t\n\t    w = config._w;\n\t    if (w.GG != null || w.W != null || w.E != null) {\n\t        dow = 1;\n\t        doy = 4;\n\t\n\t        // TODO: We need to take the current isoWeekYear, but that depends on\n\t        // how we interpret now (local, utc, fixed offset). So create\n\t        // a now version of current config (take local/utc/offset flags, and\n\t        // create now).\n\t        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n\t        week = defaults(w.W, 1);\n\t        weekday = defaults(w.E, 1);\n\t        if (weekday < 1 || weekday > 7) {\n\t            weekdayOverflow = true;\n\t        }\n\t    } else {\n\t        dow = config._locale._week.dow;\n\t        doy = config._locale._week.doy;\n\t\n\t        var curWeek = weekOfYear(createLocal(), dow, doy);\n\t\n\t        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\t\n\t        // Default to current week.\n\t        week = defaults(w.w, curWeek.week);\n\t\n\t        if (w.d != null) {\n\t            // weekday -- low day numbers are considered next week\n\t            weekday = w.d;\n\t            if (weekday < 0 || weekday > 6) {\n\t                weekdayOverflow = true;\n\t            }\n\t        } else if (w.e != null) {\n\t            // local weekday -- counting starts from begining of week\n\t            weekday = w.e + dow;\n\t            if (w.e < 0 || w.e > 6) {\n\t                weekdayOverflow = true;\n\t            }\n\t        } else {\n\t            // default to begining of week\n\t            weekday = dow;\n\t        }\n\t    }\n\t    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n\t        getParsingFlags(config)._overflowWeeks = true;\n\t    } else if (weekdayOverflow != null) {\n\t        getParsingFlags(config)._overflowWeekday = true;\n\t    } else {\n\t        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n\t        config._a[YEAR] = temp.year;\n\t        config._dayOfYear = temp.dayOfYear;\n\t    }\n\t}\n\t\n\t// constant that refers to the ISO standard\n\thooks.ISO_8601 = function () {};\n\t\n\t// date from string and format string\n\tfunction configFromStringAndFormat(config) {\n\t    // TODO: Move this to another part of the creation flow to prevent circular deps\n\t    if (config._f === hooks.ISO_8601) {\n\t        configFromISO(config);\n\t        return;\n\t    }\n\t\n\t    config._a = [];\n\t    getParsingFlags(config).empty = true;\n\t\n\t    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\t    var string = '' + config._i,\n\t        i, parsedInput, tokens, token, skipped,\n\t        stringLength = string.length,\n\t        totalParsedInputLength = 0;\n\t\n\t    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\t\n\t    for (i = 0; i < tokens.length; i++) {\n\t        token = tokens[i];\n\t        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n\t        // console.log('token', token, 'parsedInput', parsedInput,\n\t        //         'regex', getParseRegexForToken(token, config));\n\t        if (parsedInput) {\n\t            skipped = string.substr(0, string.indexOf(parsedInput));\n\t            if (skipped.length > 0) {\n\t                getParsingFlags(config).unusedInput.push(skipped);\n\t            }\n\t            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n\t            totalParsedInputLength += parsedInput.length;\n\t        }\n\t        // don't parse if it's not a known token\n\t        if (formatTokenFunctions[token]) {\n\t            if (parsedInput) {\n\t                getParsingFlags(config).empty = false;\n\t            }\n\t            else {\n\t                getParsingFlags(config).unusedTokens.push(token);\n\t            }\n\t            addTimeToArrayFromToken(token, parsedInput, config);\n\t        }\n\t        else if (config._strict && !parsedInput) {\n\t            getParsingFlags(config).unusedTokens.push(token);\n\t        }\n\t    }\n\t\n\t    // add remaining unparsed input length to the string\n\t    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\t    if (string.length > 0) {\n\t        getParsingFlags(config).unusedInput.push(string);\n\t    }\n\t\n\t    // clear _12h flag if hour is <= 12\n\t    if (config._a[HOUR] <= 12 &&\n\t        getParsingFlags(config).bigHour === true &&\n\t        config._a[HOUR] > 0) {\n\t        getParsingFlags(config).bigHour = undefined;\n\t    }\n\t\n\t    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n\t    getParsingFlags(config).meridiem = config._meridiem;\n\t    // handle meridiem\n\t    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\t\n\t    configFromArray(config);\n\t    checkOverflow(config);\n\t}\n\t\n\t\n\tfunction meridiemFixWrap (locale, hour, meridiem) {\n\t    var isPm;\n\t\n\t    if (meridiem == null) {\n\t        // nothing to do\n\t        return hour;\n\t    }\n\t    if (locale.meridiemHour != null) {\n\t        return locale.meridiemHour(hour, meridiem);\n\t    } else if (locale.isPM != null) {\n\t        // Fallback\n\t        isPm = locale.isPM(meridiem);\n\t        if (isPm && hour < 12) {\n\t            hour += 12;\n\t        }\n\t        if (!isPm && hour === 12) {\n\t            hour = 0;\n\t        }\n\t        return hour;\n\t    } else {\n\t        // this is not supposed to happen\n\t        return hour;\n\t    }\n\t}\n\t\n\t// date from string and array of format strings\n\tfunction configFromStringAndArray(config) {\n\t    var tempConfig,\n\t        bestMoment,\n\t\n\t        scoreToBeat,\n\t        i,\n\t        currentScore;\n\t\n\t    if (config._f.length === 0) {\n\t        getParsingFlags(config).invalidFormat = true;\n\t        config._d = new Date(NaN);\n\t        return;\n\t    }\n\t\n\t    for (i = 0; i < config._f.length; i++) {\n\t        currentScore = 0;\n\t        tempConfig = copyConfig({}, config);\n\t        if (config._useUTC != null) {\n\t            tempConfig._useUTC = config._useUTC;\n\t        }\n\t        tempConfig._f = config._f[i];\n\t        configFromStringAndFormat(tempConfig);\n\t\n\t        if (!isValid(tempConfig)) {\n\t            continue;\n\t        }\n\t\n\t        // if there is any input that was not parsed add a penalty for that format\n\t        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\t\n\t        //or tokens\n\t        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\t\n\t        getParsingFlags(tempConfig).score = currentScore;\n\t\n\t        if (scoreToBeat == null || currentScore < scoreToBeat) {\n\t            scoreToBeat = currentScore;\n\t            bestMoment = tempConfig;\n\t        }\n\t    }\n\t\n\t    extend(config, bestMoment || tempConfig);\n\t}\n\t\n\tfunction configFromObject(config) {\n\t    if (config._d) {\n\t        return;\n\t    }\n\t\n\t    var i = normalizeObjectUnits(config._i);\n\t    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n\t        return obj && parseInt(obj, 10);\n\t    });\n\t\n\t    configFromArray(config);\n\t}\n\t\n\tfunction createFromConfig (config) {\n\t    var res = new Moment(checkOverflow(prepareConfig(config)));\n\t    if (res._nextDay) {\n\t        // Adding is smart enough around DST\n\t        res.add(1, 'd');\n\t        res._nextDay = undefined;\n\t    }\n\t\n\t    return res;\n\t}\n\t\n\tfunction prepareConfig (config) {\n\t    var input = config._i,\n\t        format = config._f;\n\t\n\t    config._locale = config._locale || getLocale(config._l);\n\t\n\t    if (input === null || (format === undefined && input === '')) {\n\t        return createInvalid({nullInput: true});\n\t    }\n\t\n\t    if (typeof input === 'string') {\n\t        config._i = input = config._locale.preparse(input);\n\t    }\n\t\n\t    if (isMoment(input)) {\n\t        return new Moment(checkOverflow(input));\n\t    } else if (isDate(input)) {\n\t        config._d = input;\n\t    } else if (isArray(format)) {\n\t        configFromStringAndArray(config);\n\t    } else if (format) {\n\t        configFromStringAndFormat(config);\n\t    }  else {\n\t        configFromInput(config);\n\t    }\n\t\n\t    if (!isValid(config)) {\n\t        config._d = null;\n\t    }\n\t\n\t    return config;\n\t}\n\t\n\tfunction configFromInput(config) {\n\t    var input = config._i;\n\t    if (input === undefined) {\n\t        config._d = new Date(hooks.now());\n\t    } else if (isDate(input)) {\n\t        config._d = new Date(input.valueOf());\n\t    } else if (typeof input === 'string') {\n\t        configFromString(config);\n\t    } else if (isArray(input)) {\n\t        config._a = map(input.slice(0), function (obj) {\n\t            return parseInt(obj, 10);\n\t        });\n\t        configFromArray(config);\n\t    } else if (typeof(input) === 'object') {\n\t        configFromObject(config);\n\t    } else if (isNumber(input)) {\n\t        // from milliseconds\n\t        config._d = new Date(input);\n\t    } else {\n\t        hooks.createFromInputFallback(config);\n\t    }\n\t}\n\t\n\tfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n\t    var c = {};\n\t\n\t    if (locale === true || locale === false) {\n\t        strict = locale;\n\t        locale = undefined;\n\t    }\n\t\n\t    if ((isObject(input) && isObjectEmpty(input)) ||\n\t            (isArray(input) && input.length === 0)) {\n\t        input = undefined;\n\t    }\n\t    // object construction must be done this way.\n\t    // https://github.com/moment/moment/issues/1423\n\t    c._isAMomentObject = true;\n\t    c._useUTC = c._isUTC = isUTC;\n\t    c._l = locale;\n\t    c._i = input;\n\t    c._f = format;\n\t    c._strict = strict;\n\t\n\t    return createFromConfig(c);\n\t}\n\t\n\tfunction createLocal (input, format, locale, strict) {\n\t    return createLocalOrUTC(input, format, locale, strict, false);\n\t}\n\t\n\tvar prototypeMin = deprecate(\n\t    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n\t    function () {\n\t        var other = createLocal.apply(null, arguments);\n\t        if (this.isValid() && other.isValid()) {\n\t            return other < this ? this : other;\n\t        } else {\n\t            return createInvalid();\n\t        }\n\t    }\n\t);\n\t\n\tvar prototypeMax = deprecate(\n\t    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n\t    function () {\n\t        var other = createLocal.apply(null, arguments);\n\t        if (this.isValid() && other.isValid()) {\n\t            return other > this ? this : other;\n\t        } else {\n\t            return createInvalid();\n\t        }\n\t    }\n\t);\n\t\n\t// Pick a moment m from moments so that m[fn](other) is true for all\n\t// other. This relies on the function fn to be transitive.\n\t//\n\t// moments should either be an array of moment objects or an array, whose\n\t// first element is an array of moment objects.\n\tfunction pickBy(fn, moments) {\n\t    var res, i;\n\t    if (moments.length === 1 && isArray(moments[0])) {\n\t        moments = moments[0];\n\t    }\n\t    if (!moments.length) {\n\t        return createLocal();\n\t    }\n\t    res = moments[0];\n\t    for (i = 1; i < moments.length; ++i) {\n\t        if (!moments[i].isValid() || moments[i][fn](res)) {\n\t            res = moments[i];\n\t        }\n\t    }\n\t    return res;\n\t}\n\t\n\t// TODO: Use [].sort instead?\n\tfunction min () {\n\t    var args = [].slice.call(arguments, 0);\n\t\n\t    return pickBy('isBefore', args);\n\t}\n\t\n\tfunction max () {\n\t    var args = [].slice.call(arguments, 0);\n\t\n\t    return pickBy('isAfter', args);\n\t}\n\t\n\tvar now = function () {\n\t    return Date.now ? Date.now() : +(new Date());\n\t};\n\t\n\tfunction Duration (duration) {\n\t    var normalizedInput = normalizeObjectUnits(duration),\n\t        years = normalizedInput.year || 0,\n\t        quarters = normalizedInput.quarter || 0,\n\t        months = normalizedInput.month || 0,\n\t        weeks = normalizedInput.week || 0,\n\t        days = normalizedInput.day || 0,\n\t        hours = normalizedInput.hour || 0,\n\t        minutes = normalizedInput.minute || 0,\n\t        seconds = normalizedInput.second || 0,\n\t        milliseconds = normalizedInput.millisecond || 0;\n\t\n\t    // representation for dateAddRemove\n\t    this._milliseconds = +milliseconds +\n\t        seconds * 1e3 + // 1000\n\t        minutes * 6e4 + // 1000 * 60\n\t        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n\t    // Because of dateAddRemove treats 24 hours as different from a\n\t    // day when working around DST, we need to store them separately\n\t    this._days = +days +\n\t        weeks * 7;\n\t    // It is impossible translate months into days without knowing\n\t    // which months you are are talking about, so we have to store\n\t    // it separately.\n\t    this._months = +months +\n\t        quarters * 3 +\n\t        years * 12;\n\t\n\t    this._data = {};\n\t\n\t    this._locale = getLocale();\n\t\n\t    this._bubble();\n\t}\n\t\n\tfunction isDuration (obj) {\n\t    return obj instanceof Duration;\n\t}\n\t\n\tfunction absRound (number) {\n\t    if (number < 0) {\n\t        return Math.round(-1 * number) * -1;\n\t    } else {\n\t        return Math.round(number);\n\t    }\n\t}\n\t\n\t// FORMATTING\n\t\n\tfunction offset (token, separator) {\n\t    addFormatToken(token, 0, 0, function () {\n\t        var offset = this.utcOffset();\n\t        var sign = '+';\n\t        if (offset < 0) {\n\t            offset = -offset;\n\t            sign = '-';\n\t        }\n\t        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n\t    });\n\t}\n\t\n\toffset('Z', ':');\n\toffset('ZZ', '');\n\t\n\t// PARSING\n\t\n\taddRegexToken('Z',  matchShortOffset);\n\taddRegexToken('ZZ', matchShortOffset);\n\taddParseToken(['Z', 'ZZ'], function (input, array, config) {\n\t    config._useUTC = true;\n\t    config._tzm = offsetFromString(matchShortOffset, input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// timezone chunker\n\t// '+10:00' > ['10',  '00']\n\t// '-1530'  > ['-15', '30']\n\tvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\t\n\tfunction offsetFromString(matcher, string) {\n\t    var matches = (string || '').match(matcher);\n\t\n\t    if (matches === null) {\n\t        return null;\n\t    }\n\t\n\t    var chunk   = matches[matches.length - 1] || [];\n\t    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n\t    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\t\n\t    return minutes === 0 ?\n\t      0 :\n\t      parts[0] === '+' ? minutes : -minutes;\n\t}\n\t\n\t// Return a moment from input, that is local/utc/zone equivalent to model.\n\tfunction cloneWithOffset(input, model) {\n\t    var res, diff;\n\t    if (model._isUTC) {\n\t        res = model.clone();\n\t        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n\t        // Use low-level api, because this fn is low-level api.\n\t        res._d.setTime(res._d.valueOf() + diff);\n\t        hooks.updateOffset(res, false);\n\t        return res;\n\t    } else {\n\t        return createLocal(input).local();\n\t    }\n\t}\n\t\n\tfunction getDateOffset (m) {\n\t    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n\t    // https://github.com/moment/moment/pull/1871\n\t    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n\t}\n\t\n\t// HOOKS\n\t\n\t// This function will be called whenever a moment is mutated.\n\t// It is intended to keep the offset in sync with the timezone.\n\thooks.updateOffset = function () {};\n\t\n\t// MOMENTS\n\t\n\t// keepLocalTime = true means only change the timezone, without\n\t// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n\t// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n\t// +0200, so we adjust the time as needed, to be valid.\n\t//\n\t// Keeping the time actually adds/subtracts (one hour)\n\t// from the actual represented time. That is why we call updateOffset\n\t// a second time. In case it wants us to change the offset again\n\t// _changeInProgress == true case, then we have to adjust, because\n\t// there is no such time in the given timezone.\n\tfunction getSetOffset (input, keepLocalTime) {\n\t    var offset = this._offset || 0,\n\t        localAdjust;\n\t    if (!this.isValid()) {\n\t        return input != null ? this : NaN;\n\t    }\n\t    if (input != null) {\n\t        if (typeof input === 'string') {\n\t            input = offsetFromString(matchShortOffset, input);\n\t            if (input === null) {\n\t                return this;\n\t            }\n\t        } else if (Math.abs(input) < 16) {\n\t            input = input * 60;\n\t        }\n\t        if (!this._isUTC && keepLocalTime) {\n\t            localAdjust = getDateOffset(this);\n\t        }\n\t        this._offset = input;\n\t        this._isUTC = true;\n\t        if (localAdjust != null) {\n\t            this.add(localAdjust, 'm');\n\t        }\n\t        if (offset !== input) {\n\t            if (!keepLocalTime || this._changeInProgress) {\n\t                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n\t            } else if (!this._changeInProgress) {\n\t                this._changeInProgress = true;\n\t                hooks.updateOffset(this, true);\n\t                this._changeInProgress = null;\n\t            }\n\t        }\n\t        return this;\n\t    } else {\n\t        return this._isUTC ? offset : getDateOffset(this);\n\t    }\n\t}\n\t\n\tfunction getSetZone (input, keepLocalTime) {\n\t    if (input != null) {\n\t        if (typeof input !== 'string') {\n\t            input = -input;\n\t        }\n\t\n\t        this.utcOffset(input, keepLocalTime);\n\t\n\t        return this;\n\t    } else {\n\t        return -this.utcOffset();\n\t    }\n\t}\n\t\n\tfunction setOffsetToUTC (keepLocalTime) {\n\t    return this.utcOffset(0, keepLocalTime);\n\t}\n\t\n\tfunction setOffsetToLocal (keepLocalTime) {\n\t    if (this._isUTC) {\n\t        this.utcOffset(0, keepLocalTime);\n\t        this._isUTC = false;\n\t\n\t        if (keepLocalTime) {\n\t            this.subtract(getDateOffset(this), 'm');\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction setOffsetToParsedOffset () {\n\t    if (this._tzm != null) {\n\t        this.utcOffset(this._tzm);\n\t    } else if (typeof this._i === 'string') {\n\t        var tZone = offsetFromString(matchOffset, this._i);\n\t        if (tZone != null) {\n\t            this.utcOffset(tZone);\n\t        }\n\t        else {\n\t            this.utcOffset(0, true);\n\t        }\n\t    }\n\t    return this;\n\t}\n\t\n\tfunction hasAlignedHourOffset (input) {\n\t    if (!this.isValid()) {\n\t        return false;\n\t    }\n\t    input = input ? createLocal(input).utcOffset() : 0;\n\t\n\t    return (this.utcOffset() - input) % 60 === 0;\n\t}\n\t\n\tfunction isDaylightSavingTime () {\n\t    return (\n\t        this.utcOffset() > this.clone().month(0).utcOffset() ||\n\t        this.utcOffset() > this.clone().month(5).utcOffset()\n\t    );\n\t}\n\t\n\tfunction isDaylightSavingTimeShifted () {\n\t    if (!isUndefined(this._isDSTShifted)) {\n\t        return this._isDSTShifted;\n\t    }\n\t\n\t    var c = {};\n\t\n\t    copyConfig(c, this);\n\t    c = prepareConfig(c);\n\t\n\t    if (c._a) {\n\t        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n\t        this._isDSTShifted = this.isValid() &&\n\t            compareArrays(c._a, other.toArray()) > 0;\n\t    } else {\n\t        this._isDSTShifted = false;\n\t    }\n\t\n\t    return this._isDSTShifted;\n\t}\n\t\n\tfunction isLocal () {\n\t    return this.isValid() ? !this._isUTC : false;\n\t}\n\t\n\tfunction isUtcOffset () {\n\t    return this.isValid() ? this._isUTC : false;\n\t}\n\t\n\tfunction isUtc () {\n\t    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n\t}\n\t\n\t// ASP.NET json date format regex\n\tvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\t\n\t// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n\t// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n\t// and further modified to allow for strings containing both week and day\n\tvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\t\n\tfunction createDuration (input, key) {\n\t    var duration = input,\n\t        // matching against regexp is expensive, do it on demand\n\t        match = null,\n\t        sign,\n\t        ret,\n\t        diffRes;\n\t\n\t    if (isDuration(input)) {\n\t        duration = {\n\t            ms : input._milliseconds,\n\t            d  : input._days,\n\t            M  : input._months\n\t        };\n\t    } else if (isNumber(input)) {\n\t        duration = {};\n\t        if (key) {\n\t            duration[key] = input;\n\t        } else {\n\t            duration.milliseconds = input;\n\t        }\n\t    } else if (!!(match = aspNetRegex.exec(input))) {\n\t        sign = (match[1] === '-') ? -1 : 1;\n\t        duration = {\n\t            y  : 0,\n\t            d  : toInt(match[DATE])                         * sign,\n\t            h  : toInt(match[HOUR])                         * sign,\n\t            m  : toInt(match[MINUTE])                       * sign,\n\t            s  : toInt(match[SECOND])                       * sign,\n\t            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\t        };\n\t    } else if (!!(match = isoRegex.exec(input))) {\n\t        sign = (match[1] === '-') ? -1 : 1;\n\t        duration = {\n\t            y : parseIso(match[2], sign),\n\t            M : parseIso(match[3], sign),\n\t            w : parseIso(match[4], sign),\n\t            d : parseIso(match[5], sign),\n\t            h : parseIso(match[6], sign),\n\t            m : parseIso(match[7], sign),\n\t            s : parseIso(match[8], sign)\n\t        };\n\t    } else if (duration == null) {// checks for null or undefined\n\t        duration = {};\n\t    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n\t        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\t\n\t        duration = {};\n\t        duration.ms = diffRes.milliseconds;\n\t        duration.M = diffRes.months;\n\t    }\n\t\n\t    ret = new Duration(duration);\n\t\n\t    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n\t        ret._locale = input._locale;\n\t    }\n\t\n\t    return ret;\n\t}\n\t\n\tcreateDuration.fn = Duration.prototype;\n\t\n\tfunction parseIso (inp, sign) {\n\t    // We'd normally use ~~inp for this, but unfortunately it also\n\t    // converts floats to ints.\n\t    // inp may be undefined, so careful calling replace on it.\n\t    var res = inp && parseFloat(inp.replace(',', '.'));\n\t    // apply sign while we're at it\n\t    return (isNaN(res) ? 0 : res) * sign;\n\t}\n\t\n\tfunction positiveMomentsDifference(base, other) {\n\t    var res = {milliseconds: 0, months: 0};\n\t\n\t    res.months = other.month() - base.month() +\n\t        (other.year() - base.year()) * 12;\n\t    if (base.clone().add(res.months, 'M').isAfter(other)) {\n\t        --res.months;\n\t    }\n\t\n\t    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\t\n\t    return res;\n\t}\n\t\n\tfunction momentsDifference(base, other) {\n\t    var res;\n\t    if (!(base.isValid() && other.isValid())) {\n\t        return {milliseconds: 0, months: 0};\n\t    }\n\t\n\t    other = cloneWithOffset(other, base);\n\t    if (base.isBefore(other)) {\n\t        res = positiveMomentsDifference(base, other);\n\t    } else {\n\t        res = positiveMomentsDifference(other, base);\n\t        res.milliseconds = -res.milliseconds;\n\t        res.months = -res.months;\n\t    }\n\t\n\t    return res;\n\t}\n\t\n\t// TODO: remove 'name' arg after deprecation is removed\n\tfunction createAdder(direction, name) {\n\t    return function (val, period) {\n\t        var dur, tmp;\n\t        //invert the arguments, but complain about it\n\t        if (period !== null && !isNaN(+period)) {\n\t            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n\t            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n\t            tmp = val; val = period; period = tmp;\n\t        }\n\t\n\t        val = typeof val === 'string' ? +val : val;\n\t        dur = createDuration(val, period);\n\t        addSubtract(this, dur, direction);\n\t        return this;\n\t    };\n\t}\n\t\n\tfunction addSubtract (mom, duration, isAdding, updateOffset) {\n\t    var milliseconds = duration._milliseconds,\n\t        days = absRound(duration._days),\n\t        months = absRound(duration._months);\n\t\n\t    if (!mom.isValid()) {\n\t        // No op\n\t        return;\n\t    }\n\t\n\t    updateOffset = updateOffset == null ? true : updateOffset;\n\t\n\t    if (milliseconds) {\n\t        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n\t    }\n\t    if (days) {\n\t        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n\t    }\n\t    if (months) {\n\t        setMonth(mom, get(mom, 'Month') + months * isAdding);\n\t    }\n\t    if (updateOffset) {\n\t        hooks.updateOffset(mom, days || months);\n\t    }\n\t}\n\t\n\tvar add      = createAdder(1, 'add');\n\tvar subtract = createAdder(-1, 'subtract');\n\t\n\tfunction getCalendarFormat(myMoment, now) {\n\t    var diff = myMoment.diff(now, 'days', true);\n\t    return diff < -6 ? 'sameElse' :\n\t            diff < -1 ? 'lastWeek' :\n\t            diff < 0 ? 'lastDay' :\n\t            diff < 1 ? 'sameDay' :\n\t            diff < 2 ? 'nextDay' :\n\t            diff < 7 ? 'nextWeek' : 'sameElse';\n\t}\n\t\n\tfunction calendar$1 (time, formats) {\n\t    // We want to compare the start of today, vs this.\n\t    // Getting start-of-today depends on whether we're local/utc/offset or not.\n\t    var now = time || createLocal(),\n\t        sod = cloneWithOffset(now, this).startOf('day'),\n\t        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\t\n\t    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\t\n\t    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n\t}\n\t\n\tfunction clone () {\n\t    return new Moment(this);\n\t}\n\t\n\tfunction isAfter (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input);\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() > localInput.valueOf();\n\t    } else {\n\t        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n\t    }\n\t}\n\t\n\tfunction isBefore (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input);\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() < localInput.valueOf();\n\t    } else {\n\t        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n\t    }\n\t}\n\t\n\tfunction isBetween (from, to, units, inclusivity) {\n\t    inclusivity = inclusivity || '()';\n\t    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n\t        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n\t}\n\t\n\tfunction isSame (input, units) {\n\t    var localInput = isMoment(input) ? input : createLocal(input),\n\t        inputMs;\n\t    if (!(this.isValid() && localInput.isValid())) {\n\t        return false;\n\t    }\n\t    units = normalizeUnits(units || 'millisecond');\n\t    if (units === 'millisecond') {\n\t        return this.valueOf() === localInput.valueOf();\n\t    } else {\n\t        inputMs = localInput.valueOf();\n\t        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n\t    }\n\t}\n\t\n\tfunction isSameOrAfter (input, units) {\n\t    return this.isSame(input, units) || this.isAfter(input,units);\n\t}\n\t\n\tfunction isSameOrBefore (input, units) {\n\t    return this.isSame(input, units) || this.isBefore(input,units);\n\t}\n\t\n\tfunction diff (input, units, asFloat) {\n\t    var that,\n\t        zoneDelta,\n\t        delta, output;\n\t\n\t    if (!this.isValid()) {\n\t        return NaN;\n\t    }\n\t\n\t    that = cloneWithOffset(input, this);\n\t\n\t    if (!that.isValid()) {\n\t        return NaN;\n\t    }\n\t\n\t    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\t\n\t    units = normalizeUnits(units);\n\t\n\t    if (units === 'year' || units === 'month' || units === 'quarter') {\n\t        output = monthDiff(this, that);\n\t        if (units === 'quarter') {\n\t            output = output / 3;\n\t        } else if (units === 'year') {\n\t            output = output / 12;\n\t        }\n\t    } else {\n\t        delta = this - that;\n\t        output = units === 'second' ? delta / 1e3 : // 1000\n\t            units === 'minute' ? delta / 6e4 : // 1000 * 60\n\t            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n\t            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n\t            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n\t            delta;\n\t    }\n\t    return asFloat ? output : absFloor(output);\n\t}\n\t\n\tfunction monthDiff (a, b) {\n\t    // difference in months\n\t    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n\t        // b is in (anchor - 1 month, anchor + 1 month)\n\t        anchor = a.clone().add(wholeMonthDiff, 'months'),\n\t        anchor2, adjust;\n\t\n\t    if (b - anchor < 0) {\n\t        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n\t        // linear across the month\n\t        adjust = (b - anchor) / (anchor - anchor2);\n\t    } else {\n\t        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n\t        // linear across the month\n\t        adjust = (b - anchor) / (anchor2 - anchor);\n\t    }\n\t\n\t    //check for negative zero, return zero if negative zero\n\t    return -(wholeMonthDiff + adjust) || 0;\n\t}\n\t\n\thooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\thooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\t\n\tfunction toString () {\n\t    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n\t}\n\t\n\tfunction toISOString () {\n\t    var m = this.clone().utc();\n\t    if (0 < m.year() && m.year() <= 9999) {\n\t        if (isFunction(Date.prototype.toISOString)) {\n\t            // native implementation is ~50x faster, use it when we can\n\t            return this.toDate().toISOString();\n\t        } else {\n\t            return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t        }\n\t    } else {\n\t        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t    }\n\t}\n\t\n\t/**\n\t * Return a human readable representation of a moment that can\n\t * also be evaluated to get a new moment which is the same\n\t *\n\t * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n\t */\n\tfunction inspect () {\n\t    if (!this.isValid()) {\n\t        return 'moment.invalid(/* ' + this._i + ' */)';\n\t    }\n\t    var func = 'moment';\n\t    var zone = '';\n\t    if (!this.isLocal()) {\n\t        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n\t        zone = 'Z';\n\t    }\n\t    var prefix = '[' + func + '(\"]';\n\t    var year = (0 < this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n\t    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n\t    var suffix = zone + '[\")]';\n\t\n\t    return this.format(prefix + year + datetime + suffix);\n\t}\n\t\n\tfunction format (inputString) {\n\t    if (!inputString) {\n\t        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n\t    }\n\t    var output = formatMoment(this, inputString);\n\t    return this.localeData().postformat(output);\n\t}\n\t\n\tfunction from (time, withoutSuffix) {\n\t    if (this.isValid() &&\n\t            ((isMoment(time) && time.isValid()) ||\n\t             createLocal(time).isValid())) {\n\t        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n\t    } else {\n\t        return this.localeData().invalidDate();\n\t    }\n\t}\n\t\n\tfunction fromNow (withoutSuffix) {\n\t    return this.from(createLocal(), withoutSuffix);\n\t}\n\t\n\tfunction to (time, withoutSuffix) {\n\t    if (this.isValid() &&\n\t            ((isMoment(time) && time.isValid()) ||\n\t             createLocal(time).isValid())) {\n\t        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n\t    } else {\n\t        return this.localeData().invalidDate();\n\t    }\n\t}\n\t\n\tfunction toNow (withoutSuffix) {\n\t    return this.to(createLocal(), withoutSuffix);\n\t}\n\t\n\t// If passed a locale key, it will set the locale for this\n\t// instance.  Otherwise, it will return the locale configuration\n\t// variables for this instance.\n\tfunction locale (key) {\n\t    var newLocaleData;\n\t\n\t    if (key === undefined) {\n\t        return this._locale._abbr;\n\t    } else {\n\t        newLocaleData = getLocale(key);\n\t        if (newLocaleData != null) {\n\t            this._locale = newLocaleData;\n\t        }\n\t        return this;\n\t    }\n\t}\n\t\n\tvar lang = deprecate(\n\t    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n\t    function (key) {\n\t        if (key === undefined) {\n\t            return this.localeData();\n\t        } else {\n\t            return this.locale(key);\n\t        }\n\t    }\n\t);\n\t\n\tfunction localeData () {\n\t    return this._locale;\n\t}\n\t\n\tfunction startOf (units) {\n\t    units = normalizeUnits(units);\n\t    // the following switch intentionally omits break keywords\n\t    // to utilize falling through the cases.\n\t    switch (units) {\n\t        case 'year':\n\t            this.month(0);\n\t            /* falls through */\n\t        case 'quarter':\n\t        case 'month':\n\t            this.date(1);\n\t            /* falls through */\n\t        case 'week':\n\t        case 'isoWeek':\n\t        case 'day':\n\t        case 'date':\n\t            this.hours(0);\n\t            /* falls through */\n\t        case 'hour':\n\t            this.minutes(0);\n\t            /* falls through */\n\t        case 'minute':\n\t            this.seconds(0);\n\t            /* falls through */\n\t        case 'second':\n\t            this.milliseconds(0);\n\t    }\n\t\n\t    // weeks are a special case\n\t    if (units === 'week') {\n\t        this.weekday(0);\n\t    }\n\t    if (units === 'isoWeek') {\n\t        this.isoWeekday(1);\n\t    }\n\t\n\t    // quarters are also special\n\t    if (units === 'quarter') {\n\t        this.month(Math.floor(this.month() / 3) * 3);\n\t    }\n\t\n\t    return this;\n\t}\n\t\n\tfunction endOf (units) {\n\t    units = normalizeUnits(units);\n\t    if (units === undefined || units === 'millisecond') {\n\t        return this;\n\t    }\n\t\n\t    // 'date' is an alias for 'day', so it should be considered as such.\n\t    if (units === 'date') {\n\t        units = 'day';\n\t    }\n\t\n\t    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n\t}\n\t\n\tfunction valueOf () {\n\t    return this._d.valueOf() - ((this._offset || 0) * 60000);\n\t}\n\t\n\tfunction unix () {\n\t    return Math.floor(this.valueOf() / 1000);\n\t}\n\t\n\tfunction toDate () {\n\t    return new Date(this.valueOf());\n\t}\n\t\n\tfunction toArray () {\n\t    var m = this;\n\t    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n\t}\n\t\n\tfunction toObject () {\n\t    var m = this;\n\t    return {\n\t        years: m.year(),\n\t        months: m.month(),\n\t        date: m.date(),\n\t        hours: m.hours(),\n\t        minutes: m.minutes(),\n\t        seconds: m.seconds(),\n\t        milliseconds: m.milliseconds()\n\t    };\n\t}\n\t\n\tfunction toJSON () {\n\t    // new Date(NaN).toJSON() === null\n\t    return this.isValid() ? this.toISOString() : null;\n\t}\n\t\n\tfunction isValid$1 () {\n\t    return isValid(this);\n\t}\n\t\n\tfunction parsingFlags () {\n\t    return extend({}, getParsingFlags(this));\n\t}\n\t\n\tfunction invalidAt () {\n\t    return getParsingFlags(this).overflow;\n\t}\n\t\n\tfunction creationData() {\n\t    return {\n\t        input: this._i,\n\t        format: this._f,\n\t        locale: this._locale,\n\t        isUTC: this._isUTC,\n\t        strict: this._strict\n\t    };\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken(0, ['gg', 2], 0, function () {\n\t    return this.weekYear() % 100;\n\t});\n\t\n\taddFormatToken(0, ['GG', 2], 0, function () {\n\t    return this.isoWeekYear() % 100;\n\t});\n\t\n\tfunction addWeekYearFormatToken (token, getter) {\n\t    addFormatToken(0, [token, token.length], 0, getter);\n\t}\n\t\n\taddWeekYearFormatToken('gggg',     'weekYear');\n\taddWeekYearFormatToken('ggggg',    'weekYear');\n\taddWeekYearFormatToken('GGGG',  'isoWeekYear');\n\taddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('weekYear', 'gg');\n\taddUnitAlias('isoWeekYear', 'GG');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('weekYear', 1);\n\taddUnitPriority('isoWeekYear', 1);\n\t\n\t\n\t// PARSING\n\t\n\taddRegexToken('G',      matchSigned);\n\taddRegexToken('g',      matchSigned);\n\taddRegexToken('GG',     match1to2, match2);\n\taddRegexToken('gg',     match1to2, match2);\n\taddRegexToken('GGGG',   match1to4, match4);\n\taddRegexToken('gggg',   match1to4, match4);\n\taddRegexToken('GGGGG',  match1to6, match6);\n\taddRegexToken('ggggg',  match1to6, match6);\n\t\n\taddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n\t    week[token.substr(0, 2)] = toInt(input);\n\t});\n\t\n\taddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n\t    week[token] = hooks.parseTwoDigitYear(input);\n\t});\n\t\n\t// MOMENTS\n\t\n\tfunction getSetWeekYear (input) {\n\t    return getSetWeekYearHelper.call(this,\n\t            input,\n\t            this.week(),\n\t            this.weekday(),\n\t            this.localeData()._week.dow,\n\t            this.localeData()._week.doy);\n\t}\n\t\n\tfunction getSetISOWeekYear (input) {\n\t    return getSetWeekYearHelper.call(this,\n\t            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n\t}\n\t\n\tfunction getISOWeeksInYear () {\n\t    return weeksInYear(this.year(), 1, 4);\n\t}\n\t\n\tfunction getWeeksInYear () {\n\t    var weekInfo = this.localeData()._week;\n\t    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n\t}\n\t\n\tfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n\t    var weeksTarget;\n\t    if (input == null) {\n\t        return weekOfYear(this, dow, doy).year;\n\t    } else {\n\t        weeksTarget = weeksInYear(input, dow, doy);\n\t        if (week > weeksTarget) {\n\t            week = weeksTarget;\n\t        }\n\t        return setWeekAll.call(this, input, week, weekday, dow, doy);\n\t    }\n\t}\n\t\n\tfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n\t    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n\t        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\t\n\t    this.year(date.getUTCFullYear());\n\t    this.month(date.getUTCMonth());\n\t    this.date(date.getUTCDate());\n\t    return this;\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('Q', 0, 'Qo', 'quarter');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('quarter', 'Q');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('quarter', 7);\n\t\n\t// PARSING\n\t\n\taddRegexToken('Q', match1);\n\taddParseToken('Q', function (input, array) {\n\t    array[MONTH] = (toInt(input) - 1) * 3;\n\t});\n\t\n\t// MOMENTS\n\t\n\tfunction getSetQuarter (input) {\n\t    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('D', ['DD', 2], 'Do', 'date');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('date', 'D');\n\t\n\t// PRIOROITY\n\taddUnitPriority('date', 9);\n\t\n\t// PARSING\n\t\n\taddRegexToken('D',  match1to2);\n\taddRegexToken('DD', match1to2, match2);\n\taddRegexToken('Do', function (isStrict, locale) {\n\t    return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;\n\t});\n\t\n\taddParseToken(['D', 'DD'], DATE);\n\taddParseToken('Do', function (input, array) {\n\t    array[DATE] = toInt(input.match(match1to2)[0], 10);\n\t});\n\t\n\t// MOMENTS\n\t\n\tvar getSetDayOfMonth = makeGetSet('Date', true);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('dayOfYear', 'DDD');\n\t\n\t// PRIORITY\n\taddUnitPriority('dayOfYear', 4);\n\t\n\t// PARSING\n\t\n\taddRegexToken('DDD',  match1to3);\n\taddRegexToken('DDDD', match3);\n\taddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n\t    config._dayOfYear = toInt(input);\n\t});\n\t\n\t// HELPERS\n\t\n\t// MOMENTS\n\t\n\tfunction getSetDayOfYear (input) {\n\t    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n\t    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n\t}\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('m', ['mm', 2], 0, 'minute');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('minute', 'm');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('minute', 14);\n\t\n\t// PARSING\n\t\n\taddRegexToken('m',  match1to2);\n\taddRegexToken('mm', match1to2, match2);\n\taddParseToken(['m', 'mm'], MINUTE);\n\t\n\t// MOMENTS\n\t\n\tvar getSetMinute = makeGetSet('Minutes', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('s', ['ss', 2], 0, 'second');\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('second', 's');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('second', 15);\n\t\n\t// PARSING\n\t\n\taddRegexToken('s',  match1to2);\n\taddRegexToken('ss', match1to2, match2);\n\taddParseToken(['s', 'ss'], SECOND);\n\t\n\t// MOMENTS\n\t\n\tvar getSetSecond = makeGetSet('Seconds', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('S', 0, 0, function () {\n\t    return ~~(this.millisecond() / 100);\n\t});\n\t\n\taddFormatToken(0, ['SS', 2], 0, function () {\n\t    return ~~(this.millisecond() / 10);\n\t});\n\t\n\taddFormatToken(0, ['SSS', 3], 0, 'millisecond');\n\taddFormatToken(0, ['SSSS', 4], 0, function () {\n\t    return this.millisecond() * 10;\n\t});\n\taddFormatToken(0, ['SSSSS', 5], 0, function () {\n\t    return this.millisecond() * 100;\n\t});\n\taddFormatToken(0, ['SSSSSS', 6], 0, function () {\n\t    return this.millisecond() * 1000;\n\t});\n\taddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n\t    return this.millisecond() * 10000;\n\t});\n\taddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n\t    return this.millisecond() * 100000;\n\t});\n\taddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n\t    return this.millisecond() * 1000000;\n\t});\n\t\n\t\n\t// ALIASES\n\t\n\taddUnitAlias('millisecond', 'ms');\n\t\n\t// PRIORITY\n\t\n\taddUnitPriority('millisecond', 16);\n\t\n\t// PARSING\n\t\n\taddRegexToken('S',    match1to3, match1);\n\taddRegexToken('SS',   match1to3, match2);\n\taddRegexToken('SSS',  match1to3, match3);\n\t\n\tvar token;\n\tfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n\t    addRegexToken(token, matchUnsigned);\n\t}\n\t\n\tfunction parseMs(input, array) {\n\t    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n\t}\n\t\n\tfor (token = 'S'; token.length <= 9; token += 'S') {\n\t    addParseToken(token, parseMs);\n\t}\n\t// MOMENTS\n\t\n\tvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('z',  0, 0, 'zoneAbbr');\n\taddFormatToken('zz', 0, 0, 'zoneName');\n\t\n\t// MOMENTS\n\t\n\tfunction getZoneAbbr () {\n\t    return this._isUTC ? 'UTC' : '';\n\t}\n\t\n\tfunction getZoneName () {\n\t    return this._isUTC ? 'Coordinated Universal Time' : '';\n\t}\n\t\n\tvar proto = Moment.prototype;\n\t\n\tproto.add               = add;\n\tproto.calendar          = calendar$1;\n\tproto.clone             = clone;\n\tproto.diff              = diff;\n\tproto.endOf             = endOf;\n\tproto.format            = format;\n\tproto.from              = from;\n\tproto.fromNow           = fromNow;\n\tproto.to                = to;\n\tproto.toNow             = toNow;\n\tproto.get               = stringGet;\n\tproto.invalidAt         = invalidAt;\n\tproto.isAfter           = isAfter;\n\tproto.isBefore          = isBefore;\n\tproto.isBetween         = isBetween;\n\tproto.isSame            = isSame;\n\tproto.isSameOrAfter     = isSameOrAfter;\n\tproto.isSameOrBefore    = isSameOrBefore;\n\tproto.isValid           = isValid$1;\n\tproto.lang              = lang;\n\tproto.locale            = locale;\n\tproto.localeData        = localeData;\n\tproto.max               = prototypeMax;\n\tproto.min               = prototypeMin;\n\tproto.parsingFlags      = parsingFlags;\n\tproto.set               = stringSet;\n\tproto.startOf           = startOf;\n\tproto.subtract          = subtract;\n\tproto.toArray           = toArray;\n\tproto.toObject          = toObject;\n\tproto.toDate            = toDate;\n\tproto.toISOString       = toISOString;\n\tproto.inspect           = inspect;\n\tproto.toJSON            = toJSON;\n\tproto.toString          = toString;\n\tproto.unix              = unix;\n\tproto.valueOf           = valueOf;\n\tproto.creationData      = creationData;\n\t\n\t// Year\n\tproto.year       = getSetYear;\n\tproto.isLeapYear = getIsLeapYear;\n\t\n\t// Week Year\n\tproto.weekYear    = getSetWeekYear;\n\tproto.isoWeekYear = getSetISOWeekYear;\n\t\n\t// Quarter\n\tproto.quarter = proto.quarters = getSetQuarter;\n\t\n\t// Month\n\tproto.month       = getSetMonth;\n\tproto.daysInMonth = getDaysInMonth;\n\t\n\t// Week\n\tproto.week           = proto.weeks        = getSetWeek;\n\tproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n\tproto.weeksInYear    = getWeeksInYear;\n\tproto.isoWeeksInYear = getISOWeeksInYear;\n\t\n\t// Day\n\tproto.date       = getSetDayOfMonth;\n\tproto.day        = proto.days             = getSetDayOfWeek;\n\tproto.weekday    = getSetLocaleDayOfWeek;\n\tproto.isoWeekday = getSetISODayOfWeek;\n\tproto.dayOfYear  = getSetDayOfYear;\n\t\n\t// Hour\n\tproto.hour = proto.hours = getSetHour;\n\t\n\t// Minute\n\tproto.minute = proto.minutes = getSetMinute;\n\t\n\t// Second\n\tproto.second = proto.seconds = getSetSecond;\n\t\n\t// Millisecond\n\tproto.millisecond = proto.milliseconds = getSetMillisecond;\n\t\n\t// Offset\n\tproto.utcOffset            = getSetOffset;\n\tproto.utc                  = setOffsetToUTC;\n\tproto.local                = setOffsetToLocal;\n\tproto.parseZone            = setOffsetToParsedOffset;\n\tproto.hasAlignedHourOffset = hasAlignedHourOffset;\n\tproto.isDST                = isDaylightSavingTime;\n\tproto.isLocal              = isLocal;\n\tproto.isUtcOffset          = isUtcOffset;\n\tproto.isUtc                = isUtc;\n\tproto.isUTC                = isUtc;\n\t\n\t// Timezone\n\tproto.zoneAbbr = getZoneAbbr;\n\tproto.zoneName = getZoneName;\n\t\n\t// Deprecations\n\tproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n\tproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n\tproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n\tproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n\tproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\t\n\tfunction createUnix (input) {\n\t    return createLocal(input * 1000);\n\t}\n\t\n\tfunction createInZone () {\n\t    return createLocal.apply(null, arguments).parseZone();\n\t}\n\t\n\tfunction preParsePostFormat (string) {\n\t    return string;\n\t}\n\t\n\tvar proto$1 = Locale.prototype;\n\t\n\tproto$1.calendar        = calendar;\n\tproto$1.longDateFormat  = longDateFormat;\n\tproto$1.invalidDate     = invalidDate;\n\tproto$1.ordinal         = ordinal;\n\tproto$1.preparse        = preParsePostFormat;\n\tproto$1.postformat      = preParsePostFormat;\n\tproto$1.relativeTime    = relativeTime;\n\tproto$1.pastFuture      = pastFuture;\n\tproto$1.set             = set;\n\t\n\t// Month\n\tproto$1.months            =        localeMonths;\n\tproto$1.monthsShort       =        localeMonthsShort;\n\tproto$1.monthsParse       =        localeMonthsParse;\n\tproto$1.monthsRegex       = monthsRegex;\n\tproto$1.monthsShortRegex  = monthsShortRegex;\n\t\n\t// Week\n\tproto$1.week = localeWeek;\n\tproto$1.firstDayOfYear = localeFirstDayOfYear;\n\tproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\t\n\t// Day of Week\n\tproto$1.weekdays       =        localeWeekdays;\n\tproto$1.weekdaysMin    =        localeWeekdaysMin;\n\tproto$1.weekdaysShort  =        localeWeekdaysShort;\n\tproto$1.weekdaysParse  =        localeWeekdaysParse;\n\t\n\tproto$1.weekdaysRegex       =        weekdaysRegex;\n\tproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n\tproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\t\n\t// Hours\n\tproto$1.isPM = localeIsPM;\n\tproto$1.meridiem = localeMeridiem;\n\t\n\tfunction get$1 (format, index, field, setter) {\n\t    var locale = getLocale();\n\t    var utc = createUTC().set(setter, index);\n\t    return locale[field](utc, format);\n\t}\n\t\n\tfunction listMonthsImpl (format, index, field) {\n\t    if (isNumber(format)) {\n\t        index = format;\n\t        format = undefined;\n\t    }\n\t\n\t    format = format || '';\n\t\n\t    if (index != null) {\n\t        return get$1(format, index, field, 'month');\n\t    }\n\t\n\t    var i;\n\t    var out = [];\n\t    for (i = 0; i < 12; i++) {\n\t        out[i] = get$1(format, i, field, 'month');\n\t    }\n\t    return out;\n\t}\n\t\n\t// ()\n\t// (5)\n\t// (fmt, 5)\n\t// (fmt)\n\t// (true)\n\t// (true, 5)\n\t// (true, fmt, 5)\n\t// (true, fmt)\n\tfunction listWeekdaysImpl (localeSorted, format, index, field) {\n\t    if (typeof localeSorted === 'boolean') {\n\t        if (isNumber(format)) {\n\t            index = format;\n\t            format = undefined;\n\t        }\n\t\n\t        format = format || '';\n\t    } else {\n\t        format = localeSorted;\n\t        index = format;\n\t        localeSorted = false;\n\t\n\t        if (isNumber(format)) {\n\t            index = format;\n\t            format = undefined;\n\t        }\n\t\n\t        format = format || '';\n\t    }\n\t\n\t    var locale = getLocale(),\n\t        shift = localeSorted ? locale._week.dow : 0;\n\t\n\t    if (index != null) {\n\t        return get$1(format, (index + shift) % 7, field, 'day');\n\t    }\n\t\n\t    var i;\n\t    var out = [];\n\t    for (i = 0; i < 7; i++) {\n\t        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n\t    }\n\t    return out;\n\t}\n\t\n\tfunction listMonths (format, index) {\n\t    return listMonthsImpl(format, index, 'months');\n\t}\n\t\n\tfunction listMonthsShort (format, index) {\n\t    return listMonthsImpl(format, index, 'monthsShort');\n\t}\n\t\n\tfunction listWeekdays (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n\t}\n\t\n\tfunction listWeekdaysShort (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n\t}\n\t\n\tfunction listWeekdaysMin (localeSorted, format, index) {\n\t    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n\t}\n\t\n\tgetSetGlobalLocale('en', {\n\t    ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n\t    ordinal : function (number) {\n\t        var b = number % 10,\n\t            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n\t            (b === 1) ? 'st' :\n\t            (b === 2) ? 'nd' :\n\t            (b === 3) ? 'rd' : 'th';\n\t        return number + output;\n\t    }\n\t});\n\t\n\t// Side effect imports\n\thooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n\thooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\t\n\tvar mathAbs = Math.abs;\n\t\n\tfunction abs () {\n\t    var data           = this._data;\n\t\n\t    this._milliseconds = mathAbs(this._milliseconds);\n\t    this._days         = mathAbs(this._days);\n\t    this._months       = mathAbs(this._months);\n\t\n\t    data.milliseconds  = mathAbs(data.milliseconds);\n\t    data.seconds       = mathAbs(data.seconds);\n\t    data.minutes       = mathAbs(data.minutes);\n\t    data.hours         = mathAbs(data.hours);\n\t    data.months        = mathAbs(data.months);\n\t    data.years         = mathAbs(data.years);\n\t\n\t    return this;\n\t}\n\t\n\tfunction addSubtract$1 (duration, input, value, direction) {\n\t    var other = createDuration(input, value);\n\t\n\t    duration._milliseconds += direction * other._milliseconds;\n\t    duration._days         += direction * other._days;\n\t    duration._months       += direction * other._months;\n\t\n\t    return duration._bubble();\n\t}\n\t\n\t// supports only 2.0-style add(1, 's') or add(duration)\n\tfunction add$1 (input, value) {\n\t    return addSubtract$1(this, input, value, 1);\n\t}\n\t\n\t// supports only 2.0-style subtract(1, 's') or subtract(duration)\n\tfunction subtract$1 (input, value) {\n\t    return addSubtract$1(this, input, value, -1);\n\t}\n\t\n\tfunction absCeil (number) {\n\t    if (number < 0) {\n\t        return Math.floor(number);\n\t    } else {\n\t        return Math.ceil(number);\n\t    }\n\t}\n\t\n\tfunction bubble () {\n\t    var milliseconds = this._milliseconds;\n\t    var days         = this._days;\n\t    var months       = this._months;\n\t    var data         = this._data;\n\t    var seconds, minutes, hours, years, monthsFromDays;\n\t\n\t    // if we have a mix of positive and negative values, bubble down first\n\t    // check: https://github.com/moment/moment/issues/2166\n\t    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n\t            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n\t        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n\t        days = 0;\n\t        months = 0;\n\t    }\n\t\n\t    // The following code bubbles up values, see the tests for\n\t    // examples of what that means.\n\t    data.milliseconds = milliseconds % 1000;\n\t\n\t    seconds           = absFloor(milliseconds / 1000);\n\t    data.seconds      = seconds % 60;\n\t\n\t    minutes           = absFloor(seconds / 60);\n\t    data.minutes      = minutes % 60;\n\t\n\t    hours             = absFloor(minutes / 60);\n\t    data.hours        = hours % 24;\n\t\n\t    days += absFloor(hours / 24);\n\t\n\t    // convert days to months\n\t    monthsFromDays = absFloor(daysToMonths(days));\n\t    months += monthsFromDays;\n\t    days -= absCeil(monthsToDays(monthsFromDays));\n\t\n\t    // 12 months -> 1 year\n\t    years = absFloor(months / 12);\n\t    months %= 12;\n\t\n\t    data.days   = days;\n\t    data.months = months;\n\t    data.years  = years;\n\t\n\t    return this;\n\t}\n\t\n\tfunction daysToMonths (days) {\n\t    // 400 years have 146097 days (taking into account leap year rules)\n\t    // 400 years have 12 months === 4800\n\t    return days * 4800 / 146097;\n\t}\n\t\n\tfunction monthsToDays (months) {\n\t    // the reverse of daysToMonths\n\t    return months * 146097 / 4800;\n\t}\n\t\n\tfunction as (units) {\n\t    var days;\n\t    var months;\n\t    var milliseconds = this._milliseconds;\n\t\n\t    units = normalizeUnits(units);\n\t\n\t    if (units === 'month' || units === 'year') {\n\t        days   = this._days   + milliseconds / 864e5;\n\t        months = this._months + daysToMonths(days);\n\t        return units === 'month' ? months : months / 12;\n\t    } else {\n\t        // handle milliseconds separately because of floating point math errors (issue #1867)\n\t        days = this._days + Math.round(monthsToDays(this._months));\n\t        switch (units) {\n\t            case 'week'   : return days / 7     + milliseconds / 6048e5;\n\t            case 'day'    : return days         + milliseconds / 864e5;\n\t            case 'hour'   : return days * 24    + milliseconds / 36e5;\n\t            case 'minute' : return days * 1440  + milliseconds / 6e4;\n\t            case 'second' : return days * 86400 + milliseconds / 1000;\n\t            // Math.floor prevents floating point math errors here\n\t            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n\t            default: throw new Error('Unknown unit ' + units);\n\t        }\n\t    }\n\t}\n\t\n\t// TODO: Use this.as('ms')?\n\tfunction valueOf$1 () {\n\t    return (\n\t        this._milliseconds +\n\t        this._days * 864e5 +\n\t        (this._months % 12) * 2592e6 +\n\t        toInt(this._months / 12) * 31536e6\n\t    );\n\t}\n\t\n\tfunction makeAs (alias) {\n\t    return function () {\n\t        return this.as(alias);\n\t    };\n\t}\n\t\n\tvar asMilliseconds = makeAs('ms');\n\tvar asSeconds      = makeAs('s');\n\tvar asMinutes      = makeAs('m');\n\tvar asHours        = makeAs('h');\n\tvar asDays         = makeAs('d');\n\tvar asWeeks        = makeAs('w');\n\tvar asMonths       = makeAs('M');\n\tvar asYears        = makeAs('y');\n\t\n\tfunction get$2 (units) {\n\t    units = normalizeUnits(units);\n\t    return this[units + 's']();\n\t}\n\t\n\tfunction makeGetter(name) {\n\t    return function () {\n\t        return this._data[name];\n\t    };\n\t}\n\t\n\tvar milliseconds = makeGetter('milliseconds');\n\tvar seconds      = makeGetter('seconds');\n\tvar minutes      = makeGetter('minutes');\n\tvar hours        = makeGetter('hours');\n\tvar days         = makeGetter('days');\n\tvar months       = makeGetter('months');\n\tvar years        = makeGetter('years');\n\t\n\tfunction weeks () {\n\t    return absFloor(this.days() / 7);\n\t}\n\t\n\tvar round = Math.round;\n\tvar thresholds = {\n\t    s: 45,  // seconds to minute\n\t    m: 45,  // minutes to hour\n\t    h: 22,  // hours to day\n\t    d: 26,  // days to month\n\t    M: 11   // months to year\n\t};\n\t\n\t// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\tfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n\t    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n\t}\n\t\n\tfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n\t    var duration = createDuration(posNegDuration).abs();\n\t    var seconds  = round(duration.as('s'));\n\t    var minutes  = round(duration.as('m'));\n\t    var hours    = round(duration.as('h'));\n\t    var days     = round(duration.as('d'));\n\t    var months   = round(duration.as('M'));\n\t    var years    = round(duration.as('y'));\n\t\n\t    var a = seconds < thresholds.s && ['s', seconds]  ||\n\t            minutes <= 1           && ['m']           ||\n\t            minutes < thresholds.m && ['mm', minutes] ||\n\t            hours   <= 1           && ['h']           ||\n\t            hours   < thresholds.h && ['hh', hours]   ||\n\t            days    <= 1           && ['d']           ||\n\t            days    < thresholds.d && ['dd', days]    ||\n\t            months  <= 1           && ['M']           ||\n\t            months  < thresholds.M && ['MM', months]  ||\n\t            years   <= 1           && ['y']           || ['yy', years];\n\t\n\t    a[2] = withoutSuffix;\n\t    a[3] = +posNegDuration > 0;\n\t    a[4] = locale;\n\t    return substituteTimeAgo.apply(null, a);\n\t}\n\t\n\t// This function allows you to set the rounding function for relative time strings\n\tfunction getSetRelativeTimeRounding (roundingFunction) {\n\t    if (roundingFunction === undefined) {\n\t        return round;\n\t    }\n\t    if (typeof(roundingFunction) === 'function') {\n\t        round = roundingFunction;\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\t\n\t// This function allows you to set a threshold for relative time strings\n\tfunction getSetRelativeTimeThreshold (threshold, limit) {\n\t    if (thresholds[threshold] === undefined) {\n\t        return false;\n\t    }\n\t    if (limit === undefined) {\n\t        return thresholds[threshold];\n\t    }\n\t    thresholds[threshold] = limit;\n\t    return true;\n\t}\n\t\n\tfunction humanize (withSuffix) {\n\t    var locale = this.localeData();\n\t    var output = relativeTime$1(this, !withSuffix, locale);\n\t\n\t    if (withSuffix) {\n\t        output = locale.pastFuture(+this, output);\n\t    }\n\t\n\t    return locale.postformat(output);\n\t}\n\t\n\tvar abs$1 = Math.abs;\n\t\n\tfunction toISOString$1() {\n\t    // for ISO strings we do not use the normal bubbling rules:\n\t    //  * milliseconds bubble up until they become hours\n\t    //  * days do not bubble at all\n\t    //  * months bubble up until they become years\n\t    // This is because there is no context-free conversion between hours and days\n\t    // (think of clock changes)\n\t    // and also not between days and months (28-31 days per month)\n\t    var seconds = abs$1(this._milliseconds) / 1000;\n\t    var days         = abs$1(this._days);\n\t    var months       = abs$1(this._months);\n\t    var minutes, hours, years;\n\t\n\t    // 3600 seconds -> 60 minutes -> 1 hour\n\t    minutes           = absFloor(seconds / 60);\n\t    hours             = absFloor(minutes / 60);\n\t    seconds %= 60;\n\t    minutes %= 60;\n\t\n\t    // 12 months -> 1 year\n\t    years  = absFloor(months / 12);\n\t    months %= 12;\n\t\n\t\n\t    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\t    var Y = years;\n\t    var M = months;\n\t    var D = days;\n\t    var h = hours;\n\t    var m = minutes;\n\t    var s = seconds;\n\t    var total = this.asSeconds();\n\t\n\t    if (!total) {\n\t        // this is the same as C#'s (Noda) and python (isodate)...\n\t        // but not other JS (goog.date)\n\t        return 'P0D';\n\t    }\n\t\n\t    return (total < 0 ? '-' : '') +\n\t        'P' +\n\t        (Y ? Y + 'Y' : '') +\n\t        (M ? M + 'M' : '') +\n\t        (D ? D + 'D' : '') +\n\t        ((h || m || s) ? 'T' : '') +\n\t        (h ? h + 'H' : '') +\n\t        (m ? m + 'M' : '') +\n\t        (s ? s + 'S' : '');\n\t}\n\t\n\tvar proto$2 = Duration.prototype;\n\t\n\tproto$2.abs            = abs;\n\tproto$2.add            = add$1;\n\tproto$2.subtract       = subtract$1;\n\tproto$2.as             = as;\n\tproto$2.asMilliseconds = asMilliseconds;\n\tproto$2.asSeconds      = asSeconds;\n\tproto$2.asMinutes      = asMinutes;\n\tproto$2.asHours        = asHours;\n\tproto$2.asDays         = asDays;\n\tproto$2.asWeeks        = asWeeks;\n\tproto$2.asMonths       = asMonths;\n\tproto$2.asYears        = asYears;\n\tproto$2.valueOf        = valueOf$1;\n\tproto$2._bubble        = bubble;\n\tproto$2.get            = get$2;\n\tproto$2.milliseconds   = milliseconds;\n\tproto$2.seconds        = seconds;\n\tproto$2.minutes        = minutes;\n\tproto$2.hours          = hours;\n\tproto$2.days           = days;\n\tproto$2.weeks          = weeks;\n\tproto$2.months         = months;\n\tproto$2.years          = years;\n\tproto$2.humanize       = humanize;\n\tproto$2.toISOString    = toISOString$1;\n\tproto$2.toString       = toISOString$1;\n\tproto$2.toJSON         = toISOString$1;\n\tproto$2.locale         = locale;\n\tproto$2.localeData     = localeData;\n\t\n\t// Deprecations\n\tproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n\tproto$2.lang = lang;\n\t\n\t// Side effect imports\n\t\n\t// FORMATTING\n\t\n\taddFormatToken('X', 0, 0, 'unix');\n\taddFormatToken('x', 0, 0, 'valueOf');\n\t\n\t// PARSING\n\t\n\taddRegexToken('x', matchSigned);\n\taddRegexToken('X', matchTimestamp);\n\taddParseToken('X', function (input, array, config) {\n\t    config._d = new Date(parseFloat(input, 10) * 1000);\n\t});\n\taddParseToken('x', function (input, array, config) {\n\t    config._d = new Date(toInt(input));\n\t});\n\t\n\t// Side effect imports\n\t\n\t\n\thooks.version = '2.16.0';\n\t\n\tsetHookCallback(createLocal);\n\t\n\thooks.fn                    = proto;\n\thooks.min                   = min;\n\thooks.max                   = max;\n\thooks.now                   = now;\n\thooks.utc                   = createUTC;\n\thooks.unix                  = createUnix;\n\thooks.months                = listMonths;\n\thooks.isDate                = isDate;\n\thooks.locale                = getSetGlobalLocale;\n\thooks.invalid               = createInvalid;\n\thooks.duration              = createDuration;\n\thooks.isMoment              = isMoment;\n\thooks.weekdays              = listWeekdays;\n\thooks.parseZone             = createInZone;\n\thooks.localeData            = getLocale;\n\thooks.isDuration            = isDuration;\n\thooks.monthsShort           = listMonthsShort;\n\thooks.weekdaysMin           = listWeekdaysMin;\n\thooks.defineLocale          = defineLocale;\n\thooks.updateLocale          = updateLocale;\n\thooks.locales               = listLocales;\n\thooks.weekdaysShort         = listWeekdaysShort;\n\thooks.normalizeUnits        = normalizeUnits;\n\thooks.relativeTimeRounding = getSetRelativeTimeRounding;\n\thooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n\thooks.calendarFormat        = getCalendarFormat;\n\thooks.prototype             = proto;\n\t\n\treturn hooks;\n\t\n\t})));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/module.js */ 3)(module)))\n\n/***/ },\n/* 3 */\n/*!***********************************!*\\\n  !*** (webpack)/buildin/module.js ***!\n  \\***********************************/\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ },\n/* 4 */\n/*!**********************************!*\\\n  !*** ./~/moment/locale/zh-cn.js ***!\n  \\**********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t//! moment.js locale configuration\n\t//! locale : Chinese (China) [zh-cn]\n\t//! author : suupic : https://github.com/suupic\n\t//! author : Zeno Zeng : https://github.com/zenozeng\n\t\n\t;(function (global, factory) {\n\t    true ? factory(__webpack_require__(/*! ../moment */ 2)) :\n\t   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n\t   factory(global.moment)\n\t}(this, (function (moment) { 'use strict';\n\t\n\t\n\tvar zhCn = moment.defineLocale('zh-cn', {\n\t    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n\t    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n\t    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n\t    weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n\t    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n\t    longDateFormat : {\n\t        LT : 'Ah点mm分',\n\t        LTS : 'Ah点m分s秒',\n\t        L : 'YYYY-MM-DD',\n\t        LL : 'YYYY年MMMD日',\n\t        LLL : 'YYYY年MMMD日Ah点mm分',\n\t        LLLL : 'YYYY年MMMD日ddddAh点mm分',\n\t        l : 'YYYY-MM-DD',\n\t        ll : 'YYYY年MMMD日',\n\t        lll : 'YYYY年MMMD日Ah点mm分',\n\t        llll : 'YYYY年MMMD日ddddAh点mm分'\n\t    },\n\t    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n\t    meridiemHour: function (hour, meridiem) {\n\t        if (hour === 12) {\n\t            hour = 0;\n\t        }\n\t        if (meridiem === '凌晨' || meridiem === '早上' ||\n\t                meridiem === '上午') {\n\t            return hour;\n\t        } else if (meridiem === '下午' || meridiem === '晚上') {\n\t            return hour + 12;\n\t        } else {\n\t            // '中午'\n\t            return hour >= 11 ? hour : hour + 12;\n\t        }\n\t    },\n\t    meridiem : function (hour, minute, isLower) {\n\t        var hm = hour * 100 + minute;\n\t        if (hm < 600) {\n\t            return '凌晨';\n\t        } else if (hm < 900) {\n\t            return '早上';\n\t        } else if (hm < 1130) {\n\t            return '上午';\n\t        } else if (hm < 1230) {\n\t            return '中午';\n\t        } else if (hm < 1800) {\n\t            return '下午';\n\t        } else {\n\t            return '晚上';\n\t        }\n\t    },\n\t    calendar : {\n\t        sameDay : function () {\n\t            return this.minutes() === 0 ? '[今天]Ah[点整]' : '[今天]LT';\n\t        },\n\t        nextDay : function () {\n\t            return this.minutes() === 0 ? '[明天]Ah[点整]' : '[明天]LT';\n\t        },\n\t        lastDay : function () {\n\t            return this.minutes() === 0 ? '[昨天]Ah[点整]' : '[昨天]LT';\n\t        },\n\t        nextWeek : function () {\n\t            var startOfWeek, prefix;\n\t            startOfWeek = moment().startOf('week');\n\t            prefix = this.diff(startOfWeek, 'days') >= 7 ? '[下]' : '[本]';\n\t            return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';\n\t        },\n\t        lastWeek : function () {\n\t            var startOfWeek, prefix;\n\t            startOfWeek = moment().startOf('week');\n\t            prefix = this.unix() < startOfWeek.unix()  ? '[上]' : '[本]';\n\t            return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';\n\t        },\n\t        sameElse : 'LL'\n\t    },\n\t    ordinalParse: /\\d{1,2}(日|月|周)/,\n\t    ordinal : function (number, period) {\n\t        switch (period) {\n\t            case 'd':\n\t            case 'D':\n\t            case 'DDD':\n\t                return number + '日';\n\t            case 'M':\n\t                return number + '月';\n\t            case 'w':\n\t            case 'W':\n\t                return number + '周';\n\t            default:\n\t                return number;\n\t        }\n\t    },\n\t    relativeTime : {\n\t        future : '%s内',\n\t        past : '%s前',\n\t        s : '几秒',\n\t        m : '1 分钟',\n\t        mm : '%d 分钟',\n\t        h : '1 小时',\n\t        hh : '%d 小时',\n\t        d : '1 天',\n\t        dd : '%d 天',\n\t        M : '1 个月',\n\t        MM : '%d 个月',\n\t        y : '1 年',\n\t        yy : '%d 年'\n\t    },\n\t    week : {\n\t        // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n\t        dow : 1, // Monday is the first day of the week.\n\t        doy : 4  // The week that contains Jan 4th is the first week of the year.\n\t    }\n\t});\n\t\n\treturn zhCn;\n\t\n\t})));\n\n\n/***/ },\n/* 5 */\n/*!****************************!*\\\n  !*** ./src/CSSTransfer.js ***!\n  \\****************************/\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar transfer = function transfer(_ref) {\n\t  var element = _ref.element,\n\t      flexbox = _ref.flexbox;\n\t\n\t  var transferFlexbox = Object.assign(flexbox);\n\t\n\t  if (!element.style.cssText) {\n\t    // 初始设置,以使用 flexbox.\n\t    element.style.cssText = \"\\n        display: -webkit-box;\\n        display: -webkit-flex;\\n        display: flex;\\n        \";\n\t  }\n\t\n\t  /* 目前采用最基础方式,就是同时添加对应的兼容属性. */\n\t  var boxConvert = {\n\t    \"column\": \"vertical\",\n\t    \"row\": \"horizontal\",\n\t    \"column-reverse\": \"vertical\",\n\t    \"row-reverse\": \"horizontal\",\n\t    \"flex-start\": \"start\",\n\t    \"flex-end\": \"end\",\n\t    \"space-between\": \"justify\",\n\t    \"space-around\": \"justify\"\n\t  };\n\t\n\t  if (transferFlexbox.flexDirection) {\n\t    Object.assign(transferFlexbox, {\n\t      \"-webkit-flex-direction\": transferFlexbox.flexDirection,\n\t      \"-webkit-box-orient\": boxConvert[transferFlexbox.flexDirection] || transferFlexbox.flexDirection\n\t    });\n\t\n\t    if (transferFlexbox.flexDirection === \"column-reverse\" || transferFlexbox.flexDirection === \"row-reverse\") {\n\t      Object.assign(transferFlexbox, {\n\t        \"-webkit-box-pack\": \"end\",\n\t        \"-webkit-box-direction\": \"reverse\"\n\t      });\n\t    }\n\t  }\n\t\n\t  if (transferFlexbox.alignItems) {\n\t    Object.assign(transferFlexbox, {\n\t      \"-webkit-align-items\": transferFlexbox.alignItems,\n\t      \"-webkit-box-align\": boxConvert[transferFlexbox.alignItems] || transferFlexbox.alignItems\n\t    });\n\t  }\n\t\n\t  if (transferFlexbox.justifyContent) {\n\t    Object.assign(transferFlexbox, {\n\t      \"-webkit-justify-content\": transferFlexbox.justifyContent,\n\t      \"-webkit-box-pack\": boxConvert[transferFlexbox.justifyContent] || transferFlexbox.justifyContent\n\t    });\n\t  }\n\t\n\t  if (transferFlexbox.flex) {\n\t    Object.assign(transferFlexbox, {\n\t      \"-webkit-flex\": transferFlexbox.flex,\n\t      \"-webkit-box-flex\": boxConvert[transferFlexbox.flex] || transferFlexbox.flex\n\t    });\n\t  }\n\t\n\t  Object.assign(element.style, transferFlexbox);\n\t};\n\t\n\texports.default = transfer;\n\n/***/ },\n/* 6 */\n/*!***********************!*\\\n  !*** ./src/Banner.js ***!\n  \\***********************/\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar render = function render(_ref) {\n\t    var banners = _ref.banners;\n\t\n\t    var container = document.createElement(\"div\");\n\t\n\t    var winWidth = window.innerWidth || document.documentElement.clientWidth || document.getElementsByTagName('body')[0].clientWidth;\n\t\n\t    Object.assign(container.style, {\n\t        display: \"flex\",\n\t        flexDirection: \"column\",\n\t        width: winWidth + \"px\",\n\t        height: winWidth * 0.5 + \"px\",\n\t        backgroundColor: \"#efefef\"\n\t    });\n\t\n\t    if (typeof api.require !== \"undefined\") {\n\t        var paths = banners.map(function (_ref2) {\n\t            var app_image = _ref2.app_image;\n\t            return app_image;\n\t        });\n\t        var UIScrollPicture = api.require('UIScrollPicture');\n\t        UIScrollPicture.open({\n\t            rect: {\n\t                x: 0,\n\t                y: 0,\n\t                w: winWidth,\n\t                h: winWidth * 0.5\n\t            },\n\t            data: {\n\t                paths: paths\n\t            },\n\t            interval: 3,\n\t            fixedOn: api.frameName,\n\t            loop: true,\n\t            fixed: false,\n\t            styles: {\n\t                indicator: {\n\t                    align: 'center',\n\t                    color: '#efefef',\n\t                    activeColor: '#909090'\n\t                }\n\t            }\n\t        }, function (ret, err) {\n\t            if (ret.eventType === \"click\") {\n\t                var url = banners[ret.index][\"link\"];\n\t\n\t                var browser = api.require('webBrowser');\n\t                browser.open({\n\t                    url: url,\n\t                    titleBar: {\n\t                        visible: true,\n\t                        bg: \"#fff\",\n\t                        textColor: \"#9a9a9a\"\n\t                    }\n\t                });\n\t            }\n\t        });\n\t    }\n\t\n\t    return container;\n\t};\n\t\n\texports.default = render;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// Home.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 63724a3a720d1a530095","import PostItem from \"./PostItem.js\"\nimport Banner from \"./Banner.js\"\nimport CSSTransfer from \"./CSSTransfer\"\n\nconst appId = \"A6924735141113\"\nconst appKey = \"2eb2e629e08199e07d59b7a690fbedd0f1a889f5.1479311556274\"\n\nlet page = 0\n\napi.setRefreshHeaderInfo({\n    visible: true,\n    loadingImg: 'widget://image/refresh.png',\n    bgColor: '#fff',\n    textColor: '#9a9a9a',\n    textDown: '下拉刷新...',\n    textUp: '松开刷新...',\n    showTime: true\n}, function(ret, err) {\n    page = 0\n\n    refresh()\n    .then(({banners, posts})=>{\n      while (rootNode.hasChildNodes()) {\n        rootNode.removeChild(rootNode.lastChild);\n      }\n      api.refreshHeaderLoadDone()\n\n      page ++\n\n      let bannerNode = Banner({banners:banners})\n      rootNode.appendChild(bannerNode)\n\n      for (var i = 0; i < posts.length; i++) {\n        let newDiv = PostItem(posts[i])\n        rootNode.appendChild(newDiv)\n      }\n    })\n});\n\napi.addEventListener({\n    name:'scrolltobottom',\n    extra:{\n        threshold:0            //设置距离底部多少距离时触发，默认值为0，数字类型\n    }\n},function(ret,err){\n    // 加载下一页的数据，然后向现有页面追加数据。\n    let oriPage = page\n    fetchPost({page:page})\n    .then(ret=>{\n      if (oriPage !== page) {\n        return\n      }\n\n      page ++\n      if (ret.length === 0) {\n        api.toast({\n          msg: '没有更多数据了...',\n          duration: 2000,\n          location: 'bottom'\n        })\n      }else{\n        for (var i = 0; i < ret.length; i++) {\n          let newDiv = PostItem(ret[i])\n          rootNode.appendChild(newDiv)\n        }\n      }\n    })\n})\n\n/* 首次刷新. */\napi.showProgress({\n        style: 'default',\n        animationType: 'fade',\n        title: '努力加载中...',\n        text: '先喝杯茶...',\n        modal: false\n    })\n\nrefresh()\n.then(({banners, posts})=>{\n  while (rootNode.hasChildNodes()) {\n    rootNode.removeChild(rootNode.lastChild);\n  }\n\n  api.hideProgress()\n  page ++\n\n  let bannerNode = Banner({banners:banners})\n  rootNode.appendChild(bannerNode)\n\n  for (var i = 0; i < posts.length; i++) {\n    let newDiv = PostItem(posts[i])\n    rootNode.appendChild(newDiv)\n  }\n})\n\nlet rootNode = document.createElement(\"div\")\n\nCSSTransfer({element:rootNode, flexbox:{\n  display:\"flex\",\n  flexDirection: \"column\",\n}})\n\ndocument.body.appendChild(rootNode)\n\nfunction fetchPost({page=0,pageSize=5}){\n  return new Promise((resolve,reject)=>{\n    api.ajax({\n      \"url\": `https://d.apicloud.com//mcm/api/post?filter={\"where\":{},\"skip\":${page*pageSize},\"limit\":${pageSize},\"include\":\"authorPointer\"}`,\n      \"headers\": {\n        \"X-APICloud-AppId\": appId,\n        \"X-APICloud-AppKey\": appKey\n      },\n    }, (ret, err)=>{\n      if(err){\n        reject(err)\n      }else{\n        ret = ret.map(item=>{\n          item.toPersonDetail = (author)=>{\n            window.open(\"./container.html\", \"Person\",\n            {page:\"Person\", author: author})\n          }\n\n          item.toPostDetail = ({slug})=>{\n            let url = `http://www.jianshu.com/p/${slug}`\n\n            let browser = api.require('webBrowser')\n            browser.open({\n                url: url,\n                titleBar:{\n                  visible:true,\n                  bg: \"#fff\",\n                  textColor:\"#9a9a9a\",\n                },\n            })\n          }\n\n          return item\n        })\n\n        resolve(ret || [])\n      }\n    })\n  })\n}\n\nfunction fetchBanner() {\n  return new Promise((resolve,reject)=>{\n    api.ajax({\n      \"url\": `https://d.apicloud.com//mcm/api/banner?filter={\"where\":{},\"skip\":0,\"limit\":20}`,\n      \"headers\": {\n        \"X-APICloud-AppId\": appId,\n        \"X-APICloud-AppKey\": appKey\n      }\n    }, (ret, err)=>{\n      if(err){\n        reject(err)\n      }else{\n        resolve(ret)\n      }\n    })\n  })\n}\n\nfunction refresh() {\n  return new Promise((resolve,reject)=>{\n      Promise.all([fetchBanner(), fetchPost({page:0})]).then(values => {\n        resolve({banners:values[0], posts:values[1]})\n      });\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Home.js","import moment from 'moment'\nimport 'moment/locale/zh-cn'\nimport CSSTransfer from \"./CSSTransfer\"\n\nlet render = ({title,list_image,author,comments_count,likes_count,views_count,\nfirst_shared_at,slug,toPersonDetail,toPostDetail})=>{\n  let touchmove = false\n\n  let {nickname, avatar} = author\n  let info = `${views_count} 次阅 · ${comments_count} 评论 · ${likes_count} 喜欢`\n\n  let container = document.createElement(\"div\")\n\n  CSSTransfer({element:container, flexbox:{\n    display:\"flex\",\n    flexDirection: \"row\",\n    height:\"135px\",\n    alignItems:\"center\",\n    borderBottom:\"1px solid #dedede\",\n  }})\n\n  let avatarElement = document.createElement(\"img\")\n\n  api.imageCache({\n    url: avatar,\n    policy: \"cache_only\",\n  }, function(ret, err) {\n      avatarElement.src = ret.url || avatar\n  });\n\n  CSSTransfer({element:avatarElement, flexbox:{\n    display:\"flex\",\n    flexDirection:\"column\",\n    height : \"20px\",\n    width : \"20px\",\n    borderRadius: \"50%\",\n    overflow:\"hidden\",\n    backgroundColor:\"#efefef\",\n  }})\n\n  let nicknameElement = document.createElement(\"div\")\n  let nicknameNode = document.createTextNode(nickname)\n  nicknameElement.appendChild(nicknameNode)\n\n\n  CSSTransfer({element:nicknameElement, flexbox:{\n    display:\"flex\",\n    flexDirection:\"column\",\n    color : \"#3a9135\",\n    fontSize : \"13px\",\n    padding: \"8px\",\n  }})\n\n  let timeElement = document.createElement(\"div\")\n  let timeNode = document.createTextNode(moment.unix(first_shared_at).fromNow())\n  timeElement.appendChild(timeNode)\n\n  CSSTransfer({element:timeElement, flexbox:{\n    display:\"flex\",\n    flexDirection:\"column\",\n    color : \"#c9c9c9\",\n    fontSize : \"11px\",\n  }})\n\n  let titleElement = document.createElement(\"div\")\n  let titleNode = document.createTextNode(title)\n  titleElement.appendChild(titleNode)\n\n  CSSTransfer({element:titleElement, flexbox:{\n    display:\"flex\",\n    flexDirection:\"column\",\n    fontSize:\"16px\",\n    color:\"#242424\",\n    marginTop: \"10px\",\n    marginBottom: \"12px\",\n    lineHeight: \"20px\",\n    maxHeight: `${20 * 2}px`,\n    overflow: \"hidden\",\n  }})\n\n  let infoElement = document.createElement(\"div\")\n  let infoNode = document.createTextNode(info)\n  infoElement.appendChild(infoNode)\n\n  CSSTransfer({element:infoElement, flexbox:{\n      display:\"flex\",\n      flexDirection:\"column\",\n      fontSize:\"12px\",\n      color:\"#9e9e9e\",\n  }})\n\n  let thumbElement = document.createElement(\"div\")\n  let thumbInnerElement = document.createElement(\"img\")\n  thumbElement.appendChild(thumbInnerElement)\n\n  CSSTransfer({element:thumbElement, flexbox:{\n      display:\"flex\",\n      flexDirection:\"column\",\n      marginLeft: \"20px\",\n      marginRight: \"20px\",\n      backgroundColor:\"#efefef\",\n      alignItems:\"stretch\",\n  }})\n\n  api.imageCache({\n    url: list_image,\n    policy: \"cache_only\",\n  }, function(ret, err) {\n      thumbInnerElement.src = ret.url || list_image\n  });\n\n  CSSTransfer({element:thumbInnerElement, flexbox:{\n      display:\"flex\",\n      flexDirection:\"column\",\n      width : \"80px\",\n      height : \"80px\",\n  }})\n\n  let leftContainer = document.createElement(\"div\")\n\n  CSSTransfer({element:leftContainer, flexbox:{\n    display:\"flex\",\n    flexDirection:\"column\",\n    marginLeft:\"15px\",\n    flex:1,\n  }})\n\n  let topContainer = document.createElement(\"div\")\n  topContainer.appendChild(avatarElement)\n  topContainer.appendChild(nicknameElement)\n  topContainer.appendChild(timeElement)\n\n  CSSTransfer({element:topContainer, flexbox:{\n    display:\"flex\",\n    flexDirection:\"row\",\n    alignItems:\"center\",\n  }})\n\n  leftContainer.appendChild(topContainer)\n  leftContainer.appendChild(titleElement)\n  leftContainer.appendChild(infoElement)\n\n  container.appendChild(leftContainer)\n  container.appendChild(thumbElement)\n\n  avatarElement.addEventListener(\"touchend\", ()=>{\n    if ( ! touchmove) {\n      toPersonDetail(author)\n    }\n  }, false)\n  nicknameElement.addEventListener(\"touchend\", ()=>{\n    if ( ! touchmove) {\n      toPersonDetail(author)\n    }\n  }, false)\n  titleElement.addEventListener(\"touchend\", ()=>{\n    if ( ! touchmove) {\n      toPostDetail({slug:slug})\n    }\n   },false)\n\n container.addEventListener(\"touchstart\", ()=>{\n   touchmove = false\n },false)\n\n  container.addEventListener(\"touchmove\", ()=>{\n    touchmove = true\n  },false)\n\n  return  container\n}\n\nexport default render\n\n\n\n// WEBPACK FOOTER //\n// ./src/PostItem.js","//! moment.js\n//! version : 2.16.0\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\nvar hookCallback;\n\nfunction hooks () {\n    return hookCallback.apply(null, arguments);\n}\n\n// This is done to register the method called with moment()\n// without creating circular dependencies.\nfunction setHookCallback (callback) {\n    hookCallback = callback;\n}\n\nfunction isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj) {\n    var k;\n    for (k in obj) {\n        // even if its not own property I'd still call it non-empty\n        return false;\n    }\n    return true;\n}\n\nfunction isNumber(input) {\n    return typeof value === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n}\n\nfunction isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n}\n\nfunction map(arr, fn) {\n    var res = [], i;\n    for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n    }\n    return res;\n}\n\nfunction hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction extend(a, b) {\n    for (var i in b) {\n        if (hasOwnProp(b, i)) {\n            a[i] = b[i];\n        }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n    }\n\n    return a;\n}\n\nfunction createUTC (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false,\n        parsedDateParts : [],\n        meridiem        : null\n    };\n}\n\nfunction getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n\nvar some;\nif (Array.prototype.some) {\n    some = Array.prototype.some;\n} else {\n    some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n            if (i in t && fun.call(this, t[i], i, t)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nvar some$1 = some;\n\nfunction isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nfunction createInvalid (flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    }\n    else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n\nfunction isUndefined(input) {\n    return input === void 0;\n}\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = hooks.momentProperties = [];\n\nfunction copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i in momentProperties) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nfunction isMoment (obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n}\n\nfunction absFloor (number) {\n    if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n    } else {\n        return Math.floor(number);\n    }\n}\n\nfunction toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n\n    return value;\n}\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i]) ||\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\nfunction warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false &&\n            (typeof console !==  'undefined') && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n    }\n}\n\nfunction deprecate(msg, fn) {\n    var firstTime = true;\n\n    return extend(function () {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(null, msg);\n        }\n        if (firstTime) {\n            var args = [];\n            var arg;\n            for (var i = 0; i < arguments.length; i++) {\n                arg = '';\n                if (typeof arguments[i] === 'object') {\n                    arg += '\\n[' + i + '] ';\n                    for (var key in arguments[0]) {\n                        arg += key + ': ' + arguments[0][key] + ', ';\n                    }\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\n                } else {\n                    arg = arguments[i];\n                }\n                args.push(arg);\n            }\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n            firstTime = false;\n        }\n        return fn.apply(this, arguments);\n    }, fn);\n}\n\nvar deprecations = {};\n\nfunction deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n    }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nfunction isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\nfunction set (config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (isFunction(prop)) {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _ordinalParseLenient.\n    this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig), prop;\n    for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) {\n                res[prop] = childConfig[prop];\n            } else {\n                delete res[prop];\n            }\n        }\n    }\n    for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])) {\n            // make sure changes to properties don't modify parent config\n            res[prop] = extend({}, res[prop]);\n        }\n    }\n    return res;\n}\n\nfunction Locale(config) {\n    if (config != null) {\n        this.set(config);\n    }\n}\n\nvar keys;\n\nif (Object.keys) {\n    keys = Object.keys;\n} else {\n    keys = function (obj) {\n        var i, res = [];\n        for (i in obj) {\n            if (hasOwnProp(obj, i)) {\n                res.push(i);\n            }\n        }\n        return res;\n    };\n}\n\nvar keys$1 = keys;\n\nvar defaultCalendar = {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n};\n\nfunction calendar (key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n}\n\nvar defaultLongDateFormat = {\n    LTS  : 'h:mm:ss A',\n    LT   : 'h:mm A',\n    L    : 'MM/DD/YYYY',\n    LL   : 'MMMM D, YYYY',\n    LLL  : 'MMMM D, YYYY h:mm A',\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n};\n\nfunction longDateFormat (key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n}\n\nvar defaultInvalidDate = 'Invalid date';\n\nfunction invalidDate () {\n    return this._invalidDate;\n}\n\nvar defaultOrdinal = '%d';\nvar defaultOrdinalParse = /\\d{1,2}/;\n\nfunction ordinal (number) {\n    return this._ordinal.replace('%d', number);\n}\n\nvar defaultRelativeTime = {\n    future : 'in %s',\n    past   : '%s ago',\n    s  : 'a few seconds',\n    m  : 'a minute',\n    mm : '%d minutes',\n    h  : 'an hour',\n    hh : '%d hours',\n    d  : 'a day',\n    dd : '%d days',\n    M  : 'a month',\n    MM : '%d months',\n    y  : 'a year',\n    yy : '%d years'\n};\n\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n        output(number, withoutSuffix, string, isFuture) :\n        output.replace(/%d/i, number);\n}\n\nfunction pastFuture (diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n\nvar aliases = {};\n\nfunction addUnitAlias (unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n}\n\nfunction normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n\n    return normalizedInput;\n}\n\nvar priorities = {};\n\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n\nfunction getPrioritizedUnits(unitsObj) {\n    var units = [];\n    for (var u in unitsObj) {\n        units.push({unit: u, priority: priorities[u]});\n    }\n    units.sort(function (a, b) {\n        return a.priority - b.priority;\n    });\n    return units;\n}\n\nfunction makeGetSet (unit, keepTime) {\n    return function (value) {\n        if (value != null) {\n            set$1(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nfunction get (mom, unit) {\n    return mom.isValid() ?\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\n\nfunction set$1 (mom, unit, value) {\n    if (mom.isValid()) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n}\n\n// MOMENTS\n\nfunction stringGet (units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\n\nfunction stringSet (units, value) {\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n        for (var i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n\nfunction zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n}\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken (token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n        func = function () {\n            return this[callback]();\n        };\n    }\n    if (token) {\n        formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n}\n\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format) {\n    var array = format.match(formattingTokens), i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n            array[i] = formatTokenFunctions[array[i]];\n        } else {\n            array[i] = removeFormattingTokens(array[i]);\n        }\n    }\n\n    return function (mom) {\n        var output = '', i;\n        for (i = 0; i < length; i++) {\n            output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n        }\n        return output;\n    };\n}\n\n// format date using native date object\nfunction formatMoment(m, format) {\n    if (!m.isValid()) {\n        return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n        return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n\n    return format;\n}\n\nvar match1         = /\\d/;            //       0 - 9\nvar match2         = /\\d\\d/;          //      00 - 99\nvar match3         = /\\d{3}/;         //     000 - 999\nvar match4         = /\\d{4}/;         //    0000 - 9999\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\nvar match1to2      = /\\d\\d?/;         //       0 - 99\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nvar matchUnsigned  = /\\d+/;           //       0 - inf\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n\nvar regexes = {};\n\nfunction addRegexToken (token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\n\nfunction getParseRegexForToken (token, config) {\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n    }));\n}\n\nfunction regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nvar tokens = {};\n\nfunction addParseToken (token, callback) {\n    var i, func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nfunction addWeekParseToken (token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n\nvar YEAR = 0;\nvar MONTH = 1;\nvar DATE = 2;\nvar HOUR = 3;\nvar MINUTE = 4;\nvar SECOND = 5;\nvar MILLISECOND = 6;\nvar WEEK = 7;\nvar WEEKDAY = 8;\n\nvar indexOf;\n\nif (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n} else {\n    indexOf = function (o) {\n        // I know\n        var i;\n        for (i = 0; i < this.length; ++i) {\n            if (this[i] === o) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nvar indexOf$1 = indexOf;\n\nfunction daysInMonth(year, month) {\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M',    match1to2);\naddRegexToken('MM',   match1to2, match2);\naddRegexToken('MMM',  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nfunction localeMonths (m, format) {\n    if (!m) {\n        return this._months;\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nfunction localeMonthsShort (m, format) {\n    if (!m) {\n        return this._monthsShort;\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeMonthsParse (monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction setMonth (mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nfunction getSetMonth (value) {\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nfunction getDaysInMonth () {\n    return daysInMonth(this.year(), this.month());\n}\n\nvar defaultMonthsShortRegex = matchWord;\nfunction monthsShortRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n}\n\nvar defaultMonthsRegex = matchWord;\nfunction monthsRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\naddFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n});\n\naddFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n});\n\naddFormatToken(0, ['YYYY',   4],       0, 'year');\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y',      matchSigned);\naddRegexToken('YY',     match1to2, match2);\naddRegexToken('YYYY',   match1to4, match4);\naddRegexToken('YYYYY',  match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n});\naddParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n});\naddParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n});\n\n// HELPERS\n\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// HOOKS\n\nhooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n};\n\n// MOMENTS\n\nvar getSetYear = makeGetSet('FullYear', true);\n\nfunction getIsLeapYear () {\n    return isLeapYear(this.year());\n}\n\nfunction createDate (y, m, d, h, M, s, ms) {\n    //can't just apply() to create a date:\n    //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n    var date = new Date(y, m, d, h, M, s, ms);\n\n    //the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction createUTCDate (y) {\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    //the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n//http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n\nfunction weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek, resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n\nfunction weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w',  match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W',  match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nfunction localeWeek (mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nvar defaultLocaleWeek = {\n    dow : 0, // Sunday is the first day of the week.\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\n};\n\nfunction localeFirstDayOfWeek () {\n    return this._week.dow;\n}\n\nfunction localeFirstDayOfYear () {\n    return this._week.doy;\n}\n\n// MOMENTS\n\nfunction getSetWeek (input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nfunction getSetISOWeek (input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\n// FORMATTING\n\naddFormatToken('d', 0, 'do', 'day');\n\naddFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n});\n\naddFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n});\n\naddFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n});\n\naddFormatToken('e', 0, 0, 'weekday');\naddFormatToken('E', 0, 0, 'isoWeekday');\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d',    match1to2);\naddRegexToken('e',    match1to2);\naddRegexToken('E',    match1to2);\naddRegexToken('dd',   function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n});\naddRegexToken('ddd',   function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd',   function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n        week.d = weekday;\n    } else {\n        getParsingFlags(config).invalidWeekday = input;\n    }\n});\n\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n});\n\n// HELPERS\n\nfunction parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n        return input;\n    }\n\n    if (!isNaN(input)) {\n        return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n        return input;\n    }\n\n    return null;\n}\n\nfunction parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n}\n\n// LOCALES\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nfunction localeWeekdays (m, format) {\n    if (!m) {\n        return this._weekdays;\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n}\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nfunction localeWeekdaysShort (m) {\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n}\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nfunction localeWeekdaysMin (m) {\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n}\n\nfunction handleStrictParse$1(weekdayName, format, strict) {\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n            mom = createUTC([2000, 1]).day(i);\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeWeekdaysParse (weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n\n        mom = createUTC([2000, 1]).day(i);\n        if (strict && !this._fullWeekdaysParse[i]) {\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n        }\n        if (!this._weekdaysParse[i]) {\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction getSetDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n    } else {\n        return day;\n    }\n}\n\nfunction getSetLocaleDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n}\n\nfunction getSetISODayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n        return this.day() || 7;\n    }\n}\n\nvar defaultWeekdaysRegex = matchWord;\nfunction weekdaysRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysStrictRegex;\n        } else {\n            return this._weekdaysRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n        return this._weekdaysStrictRegex && isStrict ?\n            this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n}\n\nvar defaultWeekdaysShortRegex = matchWord;\nfunction weekdaysShortRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysShortStrictRegex;\n        } else {\n            return this._weekdaysShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n        return this._weekdaysShortStrictRegex && isStrict ?\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n}\n\nvar defaultWeekdaysMinRegex = matchWord;\nfunction weekdaysMinRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysMinStrictRegex;\n        } else {\n            return this._weekdaysMinRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n        return this._weekdaysMinStrictRegex && isStrict ?\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n}\n\n\nfunction computeWeekdaysParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\nfunction hFormat() {\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem (token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem (isStrict, locale) {\n    return locale._meridiemParse;\n}\n\naddRegexToken('a',  matchMeridiem);\naddRegexToken('A',  matchMeridiem);\naddRegexToken('H',  match1to2);\naddRegexToken('h',  match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM (input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n}\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem (hours, minutes, isLower) {\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = makeGetSet('Hours', true);\n\n// months\n// week\n// weekdays\n// meridiem\nvar baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    ordinalParse: defaultOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// internal storage for locale config files\nvar locales = {};\nvar localeFamilies = {};\nvar globalLocale;\n\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n\nfunction loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined') &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            require('./locale/' + name);\n            // because defineLocale currently also sets the global locale, we\n            // want to undo that for lazy loaded locales\n            getSetGlobalLocale(oldLocale);\n        } catch (e) { }\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale (key, values) {\n    var data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nfunction defineLocale (name, config) {\n    if (config !== null) {\n        var parentConfig = baseConfig;\n        config.abbr = name;\n        if (locales[name] != null) {\n            deprecateSimple('defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                    'an existing locale. moment.defineLocale(localeName, ' +\n                    'config) should only be used for creating a new locale ' +\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n            parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n            if (locales[config.parentLocale] != null) {\n                parentConfig = locales[config.parentLocale]._config;\n            } else {\n                if (!localeFamilies[config.parentLocale]) {\n                    localeFamilies[config.parentLocale] = [];\n                }\n                localeFamilies[config.parentLocale].push({\n                    name: name,\n                    config: config\n                });\n                return null;\n            }\n        }\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n            localeFamilies[name].forEach(function (x) {\n                defineLocale(x.name, x.config);\n            });\n        }\n\n        // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n        getSetGlobalLocale(name);\n\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\nfunction updateLocale(name, config) {\n    if (config != null) {\n        var locale, parentConfig = baseConfig;\n        // MERGE\n        if (locales[name] != null) {\n            parentConfig = locales[name]._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            } else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n\n// returns locale data\nfunction getLocale (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n\nfunction listLocales() {\n    return keys$1(locales);\n}\n\nfunction checkOverflow (m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n        overflow =\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n            -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nfunction configFromISO(config) {\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nfunction configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n        hooks.createFromInputFallback(config);\n    }\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray (config) {\n    var i, date, input = [], currentDate, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse)) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n}\n\n// constant that refers to the ISO standard\nhooks.ISO_8601 = function () {};\n\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n        i, parsedInput, tokens, token, skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n        // console.log('token', token, 'parsedInput', parsedInput,\n        //         'regex', getParseRegexForToken(token, config));\n        if (parsedInput) {\n            skipped = string.substr(0, string.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap (locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n        if (isPm && hour < 12) {\n            hour += 12;\n        }\n        if (!isPm && hour === 12) {\n            hour = 0;\n        }\n        return hour;\n    } else {\n        // this is not supposed to happen\n        return hour;\n    }\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n\n        scoreToBeat,\n        i,\n        currentScore;\n\n    if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n        //or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n\n    extend(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n}\n\nfunction createFromConfig (config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nfunction prepareConfig (config) {\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({nullInput: true});\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    }  else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config) {\n    var input = config._i;\n    if (input === undefined) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (typeof(input) === 'object') {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n\nfunction createLocal (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n}\n\nvar prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other < this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\nvar prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other > this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\n// Pick a moment m from moments so that m[fn](other) is true for all\n// other. This relies on the function fn to be transitive.\n//\n// moments should either be an array of moment objects or an array, whose\n// first element is an array of moment objects.\nfunction pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n    }\n    if (!moments.length) {\n        return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n            res = moments[i];\n        }\n    }\n    return res;\n}\n\n// TODO: Use [].sort instead?\nfunction min () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n}\n\nfunction max () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n}\n\nvar now = function () {\n    return Date.now ? Date.now() : +(new Date());\n};\n\nfunction Duration (duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n        weeks * 7;\n    // It is impossible translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n        quarters * 3 +\n        years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nfunction isDuration (obj) {\n    return obj instanceof Duration;\n}\n\nfunction absRound (number) {\n    if (number < 0) {\n        return Math.round(-1 * number) * -1;\n    } else {\n        return Math.round(number);\n    }\n}\n\n// FORMATTING\n\nfunction offset (token, separator) {\n    addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\n\noffset('Z', ':');\noffset('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z',  matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n        return null;\n    }\n\n    var chunk   = matches[matches.length - 1] || [];\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n        // Use low-level api, because this fn is low-level api.\n        res._d.setTime(res._d.valueOf() + diff);\n        hooks.updateOffset(res, false);\n        return res;\n    } else {\n        return createLocal(input).local();\n    }\n}\n\nfunction getDateOffset (m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\nhooks.updateOffset = function () {};\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getSetOffset (input, keepLocalTime) {\n    var offset = this._offset || 0,\n        localAdjust;\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    if (input != null) {\n        if (typeof input === 'string') {\n            input = offsetFromString(matchShortOffset, input);\n            if (input === null) {\n                return this;\n            }\n        } else if (Math.abs(input) < 16) {\n            input = input * 60;\n        }\n        if (!this._isUTC && keepLocalTime) {\n            localAdjust = getDateOffset(this);\n        }\n        this._offset = input;\n        this._isUTC = true;\n        if (localAdjust != null) {\n            this.add(localAdjust, 'm');\n        }\n        if (offset !== input) {\n            if (!keepLocalTime || this._changeInProgress) {\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n            } else if (!this._changeInProgress) {\n                this._changeInProgress = true;\n                hooks.updateOffset(this, true);\n                this._changeInProgress = null;\n            }\n        }\n        return this;\n    } else {\n        return this._isUTC ? offset : getDateOffset(this);\n    }\n}\n\nfunction getSetZone (input, keepLocalTime) {\n    if (input != null) {\n        if (typeof input !== 'string') {\n            input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n\n        return this;\n    } else {\n        return -this.utcOffset();\n    }\n}\n\nfunction setOffsetToUTC (keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n}\n\nfunction setOffsetToLocal (keepLocalTime) {\n    if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n            this.subtract(getDateOffset(this), 'm');\n        }\n    }\n    return this;\n}\n\nfunction setOffsetToParsedOffset () {\n    if (this._tzm != null) {\n        this.utcOffset(this._tzm);\n    } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n        if (tZone != null) {\n            this.utcOffset(tZone);\n        }\n        else {\n            this.utcOffset(0, true);\n        }\n    }\n    return this;\n}\n\nfunction hasAlignedHourOffset (input) {\n    if (!this.isValid()) {\n        return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n}\n\nfunction isDaylightSavingTime () {\n    return (\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\n        this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n}\n\nfunction isDaylightSavingTimeShifted () {\n    if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() &&\n            compareArrays(c._a, other.toArray()) > 0;\n    } else {\n        this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n}\n\nfunction isLocal () {\n    return this.isValid() ? !this._isUTC : false;\n}\n\nfunction isUtcOffset () {\n    return this.isValid() ? this._isUTC : false;\n}\n\nfunction isUtc () {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}\n\n// ASP.NET json date format regex\nvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\nfunction createDuration (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (isNumber(input)) {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])                         * sign,\n            h  : toInt(match[HOUR])                         * sign,\n            m  : toInt(match[MINUTE])                       * sign,\n            s  : toInt(match[SECOND])                       * sign,\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            w : parseIso(match[4], sign),\n            d : parseIso(match[5], sign),\n            h : parseIso(match[6], sign),\n            m : parseIso(match[7], sign),\n            s : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\n\nfunction parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n        return {milliseconds: 0, months: 0};\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n\n// TODO: remove 'name' arg after deprecation is removed\nfunction createAdder(direction, name) {\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n        // No op\n        return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nvar add      = createAdder(1, 'add');\nvar subtract = createAdder(-1, 'subtract');\n\nfunction getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar$1 (time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n}\n\nfunction clone () {\n    return new Moment(this);\n}\n\nfunction isAfter (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n    } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n}\n\nfunction isBefore (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n    } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n}\n\nfunction isBetween (from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(units || 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n    } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n}\n\nfunction isSameOrAfter (input, units) {\n    return this.isSame(input, units) || this.isAfter(input,units);\n}\n\nfunction isSameOrBefore (input, units) {\n    return this.isSame(input, units) || this.isBefore(input,units);\n}\n\nfunction diff (input, units, asFloat) {\n    var that,\n        zoneDelta,\n        delta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    if (units === 'year' || units === 'month' || units === 'quarter') {\n        output = monthDiff(this, that);\n        if (units === 'quarter') {\n            output = output / 3;\n        } else if (units === 'year') {\n            output = output / 12;\n        }\n    } else {\n        delta = this - that;\n        output = units === 'second' ? delta / 1e3 : // 1000\n            units === 'minute' ? delta / 6e4 : // 1000 * 60\n            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n            delta;\n    }\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString () {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString () {\n    var m = this.clone().utc();\n    if (0 < m.year() && m.year() <= 9999) {\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            return this.toDate().toISOString();\n        } else {\n            return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n        }\n    } else {\n        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n    }\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect () {\n    if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 < this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format (inputString) {\n    if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n}\n\nfunction from (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction fromNow (withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n}\n\nfunction to (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction toNow (withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n}\n\n// If passed a locale key, it will set the locale for this\n// instance.  Otherwise, it will return the locale configuration\n// variables for this instance.\nfunction locale (key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n        return this._locale._abbr;\n    } else {\n        newLocaleData = getLocale(key);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    }\n}\n\nvar lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n        if (key === undefined) {\n            return this.localeData();\n        } else {\n            return this.locale(key);\n        }\n    }\n);\n\nfunction localeData () {\n    return this._locale;\n}\n\nfunction startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nfunction endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n\nfunction valueOf () {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n}\n\nfunction unix () {\n    return Math.floor(this.valueOf() / 1000);\n}\n\nfunction toDate () {\n    return new Date(this.valueOf());\n}\n\nfunction toArray () {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n}\n\nfunction toObject () {\n    var m = this;\n    return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n    };\n}\n\nfunction toJSON () {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n}\n\nfunction isValid$1 () {\n    return isValid(this);\n}\n\nfunction parsingFlags () {\n    return extend({}, getParsingFlags(this));\n}\n\nfunction invalidAt () {\n    return getParsingFlags(this).overflow;\n}\n\nfunction creationData() {\n    return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n    };\n}\n\n// FORMATTING\n\naddFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n});\n\naddFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n});\n\nfunction addWeekYearFormatToken (token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n}\n\naddWeekYearFormatToken('gggg',     'weekYear');\naddWeekYearFormatToken('ggggg',    'weekYear');\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G',      matchSigned);\naddRegexToken('g',      matchSigned);\naddRegexToken('GG',     match1to2, match2);\naddRegexToken('gg',     match1to2, match2);\naddRegexToken('GGGG',   match1to4, match4);\naddRegexToken('gggg',   match1to4, match4);\naddRegexToken('GGGGG',  match1to6, match6);\naddRegexToken('ggggg',  match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n});\n\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n});\n\n// MOMENTS\n\nfunction getSetWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy);\n}\n\nfunction getSetISOWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n}\n\nfunction getISOWeeksInYear () {\n    return weeksInYear(this.year(), 1, 4);\n}\n\nfunction getWeeksInYear () {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n}\n\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n    } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n        if (week > weeksTarget) {\n            week = weeksTarget;\n        }\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n}\n\n// FORMATTING\n\naddFormatToken('Q', 0, 'Qo', 'quarter');\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n});\n\n// MOMENTS\n\nfunction getSetQuarter (input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n}\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D',  match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0], 10);\n});\n\n// MOMENTS\n\nvar getSetDayOfMonth = makeGetSet('Date', true);\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD',  match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nfunction getSetDayOfYear (input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n}\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2], 0, 'minute');\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m',  match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n\n// MOMENTS\n\nvar getSetMinute = makeGetSet('Minutes', false);\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2], 0, 'second');\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s',  match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n\n// MOMENTS\n\nvar getSetSecond = makeGetSet('Seconds', false);\n\n// FORMATTING\n\naddFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n});\n\naddFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n});\n\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\naddFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n});\naddFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n});\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n});\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n});\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n});\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n});\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S',    match1to3, match1);\naddRegexToken('SS',   match1to3, match2);\naddRegexToken('SSS',  match1to3, match3);\n\nvar token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n}\n// MOMENTS\n\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\n// FORMATTING\n\naddFormatToken('z',  0, 0, 'zoneAbbr');\naddFormatToken('zz', 0, 0, 'zoneName');\n\n// MOMENTS\n\nfunction getZoneAbbr () {\n    return this._isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName () {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n}\n\nvar proto = Moment.prototype;\n\nproto.add               = add;\nproto.calendar          = calendar$1;\nproto.clone             = clone;\nproto.diff              = diff;\nproto.endOf             = endOf;\nproto.format            = format;\nproto.from              = from;\nproto.fromNow           = fromNow;\nproto.to                = to;\nproto.toNow             = toNow;\nproto.get               = stringGet;\nproto.invalidAt         = invalidAt;\nproto.isAfter           = isAfter;\nproto.isBefore          = isBefore;\nproto.isBetween         = isBetween;\nproto.isSame            = isSame;\nproto.isSameOrAfter     = isSameOrAfter;\nproto.isSameOrBefore    = isSameOrBefore;\nproto.isValid           = isValid$1;\nproto.lang              = lang;\nproto.locale            = locale;\nproto.localeData        = localeData;\nproto.max               = prototypeMax;\nproto.min               = prototypeMin;\nproto.parsingFlags      = parsingFlags;\nproto.set               = stringSet;\nproto.startOf           = startOf;\nproto.subtract          = subtract;\nproto.toArray           = toArray;\nproto.toObject          = toObject;\nproto.toDate            = toDate;\nproto.toISOString       = toISOString;\nproto.inspect           = inspect;\nproto.toJSON            = toJSON;\nproto.toString          = toString;\nproto.unix              = unix;\nproto.valueOf           = valueOf;\nproto.creationData      = creationData;\n\n// Year\nproto.year       = getSetYear;\nproto.isLeapYear = getIsLeapYear;\n\n// Week Year\nproto.weekYear    = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\n\n// Quarter\nproto.quarter = proto.quarters = getSetQuarter;\n\n// Month\nproto.month       = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\n\n// Week\nproto.week           = proto.weeks        = getSetWeek;\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\nproto.weeksInYear    = getWeeksInYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\n\n// Day\nproto.date       = getSetDayOfMonth;\nproto.day        = proto.days             = getSetDayOfWeek;\nproto.weekday    = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear  = getSetDayOfYear;\n\n// Hour\nproto.hour = proto.hours = getSetHour;\n\n// Minute\nproto.minute = proto.minutes = getSetMinute;\n\n// Second\nproto.second = proto.seconds = getSetSecond;\n\n// Millisecond\nproto.millisecond = proto.milliseconds = getSetMillisecond;\n\n// Offset\nproto.utcOffset            = getSetOffset;\nproto.utc                  = setOffsetToUTC;\nproto.local                = setOffsetToLocal;\nproto.parseZone            = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST                = isDaylightSavingTime;\nproto.isLocal              = isLocal;\nproto.isUtcOffset          = isUtcOffset;\nproto.isUtc                = isUtc;\nproto.isUTC                = isUtc;\n\n// Timezone\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\n\n// Deprecations\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\nfunction createUnix (input) {\n    return createLocal(input * 1000);\n}\n\nfunction createInZone () {\n    return createLocal.apply(null, arguments).parseZone();\n}\n\nfunction preParsePostFormat (string) {\n    return string;\n}\n\nvar proto$1 = Locale.prototype;\n\nproto$1.calendar        = calendar;\nproto$1.longDateFormat  = longDateFormat;\nproto$1.invalidDate     = invalidDate;\nproto$1.ordinal         = ordinal;\nproto$1.preparse        = preParsePostFormat;\nproto$1.postformat      = preParsePostFormat;\nproto$1.relativeTime    = relativeTime;\nproto$1.pastFuture      = pastFuture;\nproto$1.set             = set;\n\n// Month\nproto$1.months            =        localeMonths;\nproto$1.monthsShort       =        localeMonthsShort;\nproto$1.monthsParse       =        localeMonthsParse;\nproto$1.monthsRegex       = monthsRegex;\nproto$1.monthsShortRegex  = monthsShortRegex;\n\n// Week\nproto$1.week = localeWeek;\nproto$1.firstDayOfYear = localeFirstDayOfYear;\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n// Day of Week\nproto$1.weekdays       =        localeWeekdays;\nproto$1.weekdaysMin    =        localeWeekdaysMin;\nproto$1.weekdaysShort  =        localeWeekdaysShort;\nproto$1.weekdaysParse  =        localeWeekdaysParse;\n\nproto$1.weekdaysRegex       =        weekdaysRegex;\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n// Hours\nproto$1.isPM = localeIsPM;\nproto$1.meridiem = localeMeridiem;\n\nfunction get$1 (format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n}\n\nfunction listMonthsImpl (format, index, field) {\n    if (isNumber(format)) {\n        index = format;\n        format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n        return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n}\n\n// ()\n// (5)\n// (fmt, 5)\n// (fmt)\n// (true)\n// (true, 5)\n// (true, fmt, 5)\n// (true, fmt)\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n}\n\nfunction listMonths (format, index) {\n    return listMonthsImpl(format, index, 'months');\n}\n\nfunction listMonthsShort (format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n}\n\nfunction listWeekdays (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n}\n\nfunction listWeekdaysShort (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n}\n\nfunction listWeekdaysMin (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n}\n\ngetSetGlobalLocale('en', {\n    ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\n// Side effect imports\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\nvar mathAbs = Math.abs;\n\nfunction abs () {\n    var data           = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days         = mathAbs(this._days);\n    this._months       = mathAbs(this._months);\n\n    data.milliseconds  = mathAbs(data.milliseconds);\n    data.seconds       = mathAbs(data.seconds);\n    data.minutes       = mathAbs(data.minutes);\n    data.hours         = mathAbs(data.hours);\n    data.months        = mathAbs(data.months);\n    data.years         = mathAbs(data.years);\n\n    return this;\n}\n\nfunction addSubtract$1 (duration, input, value, direction) {\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days         += direction * other._days;\n    duration._months       += direction * other._months;\n\n    return duration._bubble();\n}\n\n// supports only 2.0-style add(1, 's') or add(duration)\nfunction add$1 (input, value) {\n    return addSubtract$1(this, input, value, 1);\n}\n\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\nfunction subtract$1 (input, value) {\n    return addSubtract$1(this, input, value, -1);\n}\n\nfunction absCeil (number) {\n    if (number < 0) {\n        return Math.floor(number);\n    } else {\n        return Math.ceil(number);\n    }\n}\n\nfunction bubble () {\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nfunction daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nfunction monthsToDays (months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n\nfunction as (units) {\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nfunction valueOf$1 () {\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs (alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nvar asMilliseconds = makeAs('ms');\nvar asSeconds      = makeAs('s');\nvar asMinutes      = makeAs('m');\nvar asHours        = makeAs('h');\nvar asDays         = makeAs('d');\nvar asWeeks        = makeAs('w');\nvar asMonths       = makeAs('M');\nvar asYears        = makeAs('y');\n\nfunction get$2 (units) {\n    units = normalizeUnits(units);\n    return this[units + 's']();\n}\n\nfunction makeGetter(name) {\n    return function () {\n        return this._data[name];\n    };\n}\n\nvar milliseconds = makeGetter('milliseconds');\nvar seconds      = makeGetter('seconds');\nvar minutes      = makeGetter('minutes');\nvar hours        = makeGetter('hours');\nvar days         = makeGetter('days');\nvar months       = makeGetter('months');\nvar years        = makeGetter('years');\n\nfunction weeks () {\n    return absFloor(this.days() / 7);\n}\n\nvar round = Math.round;\nvar thresholds = {\n    s: 45,  // seconds to minute\n    m: 45,  // minutes to hour\n    h: 22,  // hours to day\n    d: 26,  // days to month\n    M: 11   // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds  = round(duration.as('s'));\n    var minutes  = round(duration.as('m'));\n    var hours    = round(duration.as('h'));\n    var days     = round(duration.as('d'));\n    var months   = round(duration.as('M'));\n    var years    = round(duration.as('y'));\n\n    var a = seconds < thresholds.s && ['s', seconds]  ||\n            minutes <= 1           && ['m']           ||\n            minutes < thresholds.m && ['mm', minutes] ||\n            hours   <= 1           && ['h']           ||\n            hours   < thresholds.h && ['hh', hours]   ||\n            days    <= 1           && ['d']           ||\n            days    < thresholds.d && ['dd', days]    ||\n            months  <= 1           && ['M']           ||\n            months  < thresholds.M && ['MM', months]  ||\n            years   <= 1           && ['y']           || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding (roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold (threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    return true;\n}\n\nfunction humanize (withSuffix) {\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n}\n\nvar abs$1 = Math.abs;\n\nfunction toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days         = abs$1(this._days);\n    var months       = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds;\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    return (total < 0 ? '-' : '') +\n        'P' +\n        (Y ? Y + 'Y' : '') +\n        (M ? M + 'M' : '') +\n        (D ? D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? h + 'H' : '') +\n        (m ? m + 'M' : '') +\n        (s ? s + 'S' : '');\n}\n\nvar proto$2 = Duration.prototype;\n\nproto$2.abs            = abs;\nproto$2.add            = add$1;\nproto$2.subtract       = subtract$1;\nproto$2.as             = as;\nproto$2.asMilliseconds = asMilliseconds;\nproto$2.asSeconds      = asSeconds;\nproto$2.asMinutes      = asMinutes;\nproto$2.asHours        = asHours;\nproto$2.asDays         = asDays;\nproto$2.asWeeks        = asWeeks;\nproto$2.asMonths       = asMonths;\nproto$2.asYears        = asYears;\nproto$2.valueOf        = valueOf$1;\nproto$2._bubble        = bubble;\nproto$2.get            = get$2;\nproto$2.milliseconds   = milliseconds;\nproto$2.seconds        = seconds;\nproto$2.minutes        = minutes;\nproto$2.hours          = hours;\nproto$2.days           = days;\nproto$2.weeks          = weeks;\nproto$2.months         = months;\nproto$2.years          = years;\nproto$2.humanize       = humanize;\nproto$2.toISOString    = toISOString$1;\nproto$2.toString       = toISOString$1;\nproto$2.toJSON         = toISOString$1;\nproto$2.locale         = locale;\nproto$2.localeData     = localeData;\n\n// Deprecations\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\nproto$2.lang = lang;\n\n// Side effect imports\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n\n// Side effect imports\n\n\nhooks.version = '2.16.0';\n\nsetHookCallback(createLocal);\n\nhooks.fn                    = proto;\nhooks.min                   = min;\nhooks.max                   = max;\nhooks.now                   = now;\nhooks.utc                   = createUTC;\nhooks.unix                  = createUnix;\nhooks.months                = listMonths;\nhooks.isDate                = isDate;\nhooks.locale                = getSetGlobalLocale;\nhooks.invalid               = createInvalid;\nhooks.duration              = createDuration;\nhooks.isMoment              = isMoment;\nhooks.weekdays              = listWeekdays;\nhooks.parseZone             = createInZone;\nhooks.localeData            = getLocale;\nhooks.isDuration            = isDuration;\nhooks.monthsShort           = listMonthsShort;\nhooks.weekdaysMin           = listWeekdaysMin;\nhooks.defineLocale          = defineLocale;\nhooks.updateLocale          = updateLocale;\nhooks.locales               = listLocales;\nhooks.weekdaysShort         = listWeekdaysShort;\nhooks.normalizeUnits        = normalizeUnits;\nhooks.relativeTimeRounding = getSetRelativeTimeRounding;\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\nhooks.calendarFormat        = getCalendarFormat;\nhooks.prototype             = proto;\n\nreturn hooks;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/moment.js\n// module id = 2\n// module chunks = 0","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 3\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Chinese (China) [zh-cn]\n//! author : suupic : https://github.com/suupic\n//! author : Zeno Zeng : https://github.com/zenozeng\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar zhCn = moment.defineLocale('zh-cn', {\n    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n    weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n    longDateFormat : {\n        LT : 'Ah点mm分',\n        LTS : 'Ah点m分s秒',\n        L : 'YYYY-MM-DD',\n        LL : 'YYYY年MMMD日',\n        LLL : 'YYYY年MMMD日Ah点mm分',\n        LLLL : 'YYYY年MMMD日ddddAh点mm分',\n        l : 'YYYY-MM-DD',\n        ll : 'YYYY年MMMD日',\n        lll : 'YYYY年MMMD日Ah点mm分',\n        llll : 'YYYY年MMMD日ddddAh点mm分'\n    },\n    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n    meridiemHour: function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === '凌晨' || meridiem === '早上' ||\n                meridiem === '上午') {\n            return hour;\n        } else if (meridiem === '下午' || meridiem === '晚上') {\n            return hour + 12;\n        } else {\n            // '中午'\n            return hour >= 11 ? hour : hour + 12;\n        }\n    },\n    meridiem : function (hour, minute, isLower) {\n        var hm = hour * 100 + minute;\n        if (hm < 600) {\n            return '凌晨';\n        } else if (hm < 900) {\n            return '早上';\n        } else if (hm < 1130) {\n            return '上午';\n        } else if (hm < 1230) {\n            return '中午';\n        } else if (hm < 1800) {\n            return '下午';\n        } else {\n            return '晚上';\n        }\n    },\n    calendar : {\n        sameDay : function () {\n            return this.minutes() === 0 ? '[今天]Ah[点整]' : '[今天]LT';\n        },\n        nextDay : function () {\n            return this.minutes() === 0 ? '[明天]Ah[点整]' : '[明天]LT';\n        },\n        lastDay : function () {\n            return this.minutes() === 0 ? '[昨天]Ah[点整]' : '[昨天]LT';\n        },\n        nextWeek : function () {\n            var startOfWeek, prefix;\n            startOfWeek = moment().startOf('week');\n            prefix = this.diff(startOfWeek, 'days') >= 7 ? '[下]' : '[本]';\n            return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';\n        },\n        lastWeek : function () {\n            var startOfWeek, prefix;\n            startOfWeek = moment().startOf('week');\n            prefix = this.unix() < startOfWeek.unix()  ? '[上]' : '[本]';\n            return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';\n        },\n        sameElse : 'LL'\n    },\n    ordinalParse: /\\d{1,2}(日|月|周)/,\n    ordinal : function (number, period) {\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return number + '日';\n            case 'M':\n                return number + '月';\n            case 'w':\n            case 'W':\n                return number + '周';\n            default:\n                return number;\n        }\n    },\n    relativeTime : {\n        future : '%s内',\n        past : '%s前',\n        s : '几秒',\n        m : '1 分钟',\n        mm : '%d 分钟',\n        h : '1 小时',\n        hh : '%d 小时',\n        d : '1 天',\n        dd : '%d 天',\n        M : '1 个月',\n        MM : '%d 个月',\n        y : '1 年',\n        yy : '%d 年'\n    },\n    week : {\n        // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn zhCn;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/zh-cn.js\n// module id = 4\n// module chunks = 0","let transfer = ({element,flexbox})=>{\n  let transferFlexbox = Object.assign(flexbox)\n\n  if ( ! element.style.cssText) { // 初始设置,以使用 flexbox.\n    element.style.cssText = `\n        display: -webkit-box;\n        display: -webkit-flex;\n        display: flex;\n        `\n  }\n\n  /* 目前采用最基础方式,就是同时添加对应的兼容属性. */\n  let boxConvert = {\n    \"column\": \"vertical\",\n    \"row\": \"horizontal\",\n    \"column-reverse\":\"vertical\",\n    \"row-reverse\":\"horizontal\",\n    \"flex-start\":\"start\",\n    \"flex-end\":\"end\",\n    \"space-between\": \"justify\",\n    \"space-around\": \"justify\",\n  }\n\n  if (transferFlexbox.flexDirection) {\n    Object.assign(transferFlexbox,{\n      \"-webkit-flex-direction\": transferFlexbox.flexDirection,\n      \"-webkit-box-orient\": boxConvert[transferFlexbox.flexDirection] || transferFlexbox.flexDirection,\n    })\n\n    if (transferFlexbox.flexDirection === \"column-reverse\" ||\n        transferFlexbox.flexDirection === \"row-reverse\") {\n          Object.assign(transferFlexbox,{\n            \"-webkit-box-pack\":\"end\",\n            \"-webkit-box-direction\":\"reverse\"\n          })\n    }\n  }\n\n  if (transferFlexbox.alignItems) {\n    Object.assign(transferFlexbox,{\n      \"-webkit-align-items\": transferFlexbox.alignItems,\n      \"-webkit-box-align\": boxConvert[transferFlexbox.alignItems] || transferFlexbox.alignItems,\n    })\n  }\n\n  if (transferFlexbox.justifyContent) {\n    Object.assign(transferFlexbox,{\n      \"-webkit-justify-content\": transferFlexbox.justifyContent,\n      \"-webkit-box-pack\": boxConvert[transferFlexbox.justifyContent] || transferFlexbox.justifyContent,\n    })\n  }\n\n  if (transferFlexbox.flex) {\n    Object.assign(transferFlexbox,{\n      \"-webkit-flex\": transferFlexbox.flex,\n      \"-webkit-box-flex\": boxConvert[transferFlexbox.flex] || transferFlexbox.flex,\n    })\n  }\n\n  Object.assign(element.style, transferFlexbox)\n}\n\nexport default transfer\n\n\n\n// WEBPACK FOOTER //\n// ./src/CSSTransfer.js","let render = ({banners})=>{\n  let container = document.createElement(\"div\")\n\n  let winWidth = window.innerWidth || document.documentElement.clientWidth\n                  || document.getElementsByTagName('body')[0].clientWidth\n\n  Object.assign(container.style,{\n    display:\"flex\",\n    flexDirection: \"column\",\n    width:`${winWidth}px`,\n    height: `${winWidth*0.5}px`,\n    backgroundColor:\"#efefef\",\n  })\n\n  if (typeof api.require !== \"undefined\") {\n    let paths = banners.map(({app_image})=>app_image)\n    let UIScrollPicture = api.require('UIScrollPicture');\n    UIScrollPicture.open({\n        rect: {\n            x: 0,\n            y: 0,\n            w: winWidth,\n            h: winWidth * 0.5\n        },\n        data: {\n            paths: paths,\n        },\n        interval: 3,\n        fixedOn: api.frameName,\n        loop: true,\n        fixed: false,\n        styles: {\n            indicator: {\n                align: 'center',\n                color: '#efefef',\n                activeColor: '#909090'\n            }\n        },\n    }, function(ret, err) {\n        if (ret.eventType === \"click\") {\n          let url = banners[ret.index][\"link\"]\n\n          let browser = api.require('webBrowser')\n          browser.open({\n              url: url,\n              titleBar:{\n                visible:true,\n                bg: \"#fff\",\n                textColor:\"#9a9a9a\",\n              },\n          })\n        }\n    })\n  }\n\n  return container\n}\n\nexport default render\n\n\n\n// WEBPACK FOOTER //\n// ./src/Banner.js"],"sourceRoot":""}